{"version":3,"sources":["webpack:///./src/js/general/utils/currency/index.js","webpack:///./src/js/general/components/b8one.modalComponent.js","webpack:///./src/js/general/utils/skusToIgnore/index.js","webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/store/desktop/insurance-change/index.js","webpack:///./src/js/general/services/b8one.httpClient.js"],"names":["REAL","value","currency","symbol","precision","separator","decimal","formatWithSymbol","ModalComponent","modal","modalShowCLass","openModalCallback","closeModalCallback","this","isOpen","openCallback","Function","closeCallback","Element","document","querySelector","classList","add","remove","Ensure","undefined","input","isUndefined","checkValidity","object","props","getMissingProps","length","missingProps","forEach","prop","push","Helper","_logger","Logger","language","navigator","userLanguage","currencyLocale","minimumFractionDigits","elem","selector","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","i","item","parents","parentNode","form","serialized","elements","field","name","disabled","type","n","options","selected","encodeURIComponent","checked","join","data","Math","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","split","filter","includes","element","heightViewport","window","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","mapAccents","a","e","o","u","c","pattern","replace","RegExp","toFixed","max","Intl","NumberFormat","style","format","logName","message","errorObj","console","error","info","warn","log","CartService","_VTEX_API_ENDPOINT","_httpClient","HttpClient","get","skuId","productQuantity","sellerId","getCurrent","current","indexFound","items","findIndex","x","id","parseInt","quantity","endpointUrl","orderFormId","payload","orderItems","seller","patch","skus","vtexjs","checkout","getOrderForm","skusCustomProducts","getCustomProducts","sku","isCustom","skuToIgnore","indexToRemove","reduce","indexList","index","removeMoreProducts","response","productsToAdd","productId","map","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","addToCart","customProducts","newQuantity","customProductItem","currentCustomProduct","customProductQuantity","Object","values","itemIndex","expectedOrderFormSections","noSplitItem","itemsIndex","updateProducts","postalCode","country","calculateShipping","orderForm","simulateShipping","orderFormSimulated","logisticsInfo","shippingData","sendAttachment","address","availableAddresses","selectedAddresses","appName","fields","endpoint","put","appFieldName","appFieldValue","delete","InsuranceChangePage","product","productOldInsuranceValue","dataset","productInsuranceInput","addEventListener","target","newTotalInsuranceQuantity","totalInsurance","subtract","totalOrderSummary","lastInsurancePercentage","valueInsurance","totalInsuranceElement","textContent","multiply","products","totalInsuranceFormatted","setTotalOrderSummaryElement","setValueInsuranceElement","cartService","totalTransporterSelected","totalTransporterSelectedElement","rejectInsuranceModalInstance","orderDetails","init","location","pathname","setHandledButtonSkipStepClick","orderID","search","match","fetch","json","setHandledTotalsPlaceholderElementsTransitionEnd","setTotalTransporterSelected","getProductstInOrderForm","getProductsInCustomData","mapProducts","getInsuranceDataInCustomData","setTotalOrderSummary","setValueInsurance","setTotalTransporterSelectedElement","setTotalInsuranceElement","showProductsHidden","hideTotalsPlaceholderElements","setInputMasks","setHandledProducts","setHandledButtonSaveClick","initRejectInsuranceModal","setHandledButtonRejectInsuranceClick","setHandledButtonConfirmRejectInsuranceClick","customData","customApps","customApp","courier_data","priceFormatted","JSON","parse","deliveryTypeSelected","setHandledProduct","insuranceItemsTable","removeContentPlaceholder","productsHTML","SKUS_TO_IGNORE","imageUrl","skuName","productName","createProduct","description","innerHTML","products_data","productData","createCustomProduct","customAttributes","createProducts","IMask","mask","blocks","num","Number","thousandsSeparator","scale","btnContinue","buttonSave","saveData","assign","dispatchEvent","initSaveCustomDataEvent","endSaveCustomDataEvent","total","entries","key","obj","insuranceFieldsForCustomData","stringify","insuranceSKU","intValue","updateInsuranceSKUPrice","updateCheckoutAddress","Promise","all","setMultipleCustomDataFields","setSingleCustomDataField","insuranceSKUIndex","removeSingleCustomDataField","preventDefault","skipInsuranceStep","children","slice","containerPlaceholderTotals","actionsTotals","nextElementSibling","setTimeout","buttonCloseModal","buttonConfirm","rejectInsuranceModal","close","show","noContractInsurance","price","method","body","headers","Accept","_execute","httpVerb","header","accept","then","validateResponse","parseResponseToJson","catch","ok","resolve","reject","Error","statusText"],"mappings":"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","file":"js/b8one.desktop.insurance-change-1.js","sourcesContent":["import currency from 'currency.js';\r\n\r\nconst REAL = value =>\r\n  currency(value, {\r\n    symbol: 'R$ ',\r\n    precision: 2,\r\n    separator: '.',\r\n    decimal: ',',\r\n    formatWithSymbol: true,\r\n  });\r\n\r\nexport { REAL };\r\n","/*\r\n  *\r\n  * Author: Enrique Mora <enriquebeta7@gmail.com>\r\n  *\r\n*/\r\n\r\nexport default class ModalComponent {\r\n\t/**\r\n\t * @param  { Element | String } modal\r\n\t * @param  { String } modalShowCLass\r\n\t * @param  { Function } openModalCallback\r\n\t * @param  { Function } closeModalCallback\r\n   * @requires modal\r\n\t */\r\n\tconstructor({\r\n\t\tmodal,\r\n\t\tmodalShowCLass,\r\n\t\topenModalCallback,\r\n\t\tcloseModalCallback,\r\n\t}) {\r\n\t\tthis.isOpen = false;\r\n\t\tthis.modalShowCLass = modalShowCLass || 'show';\r\n\t\tthis.openCallback = openModalCallback || new Function();\r\n\t\tthis.closeCallback = closeModalCallback || new Function();\r\n\t\tthis.modal =\r\n\t\t\tmodal instanceof Element ? modal : document.querySelector(modal);\r\n\t}\r\n\r\n\tshow() {\r\n\t\t!this.isOpen && this.modal.classList.add(this.modalShowCLass);\r\n\t\tthis.isOpen = true;\r\n\r\n\t\tthis.openCallback(this);\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.isOpen && this.modal.classList.remove(this.modalShowCLass);\r\n\t\tthis.isOpen = false;\r\n\r\n\t\tthis.closeCallback(this);\r\n\t}\r\n}\r\n","/**\r\n ** SKU IDs to ignore.\r\n *? IDs 19 and 698 are lifting products.\r\n *? IDs 25 and 26 are custom products.\r\n *? ID 33 is storage product.\r\n *? ID 35 is insurance sku.\r\n *? ID 696 is additional weight sku.\r\n *? ID 699 is disassembly and assembly sku.\r\n */\r\nexport default [19, 698, 25, 26, 33, 35, 696, 699];\r\n","/**\r\n * Ensure Abstraction class\r\n */\r\nclass Ensure {\r\n  /**\r\n   * Ensure value is Undefined\r\n   * @param {*} value Value to be validated\r\n   * @return {boolean}\r\n   */\r\n  static isUndefined(value = undefined) {\r\n    return typeof value === 'undefined' ||\r\n      value === null ||\r\n      value === '' ||\r\n      value === {} ||\r\n      value === [];\r\n    // || JSON.stringify(value) === JSON.stringify({});\r\n  }\r\n\r\n  /**\r\n   * Ensure Input validity\r\n   * @param {*} input to validate\r\n   * @return {boolean} true if is valid\r\n   */\r\n  static isInputValid(input) {\r\n    return !this.isUndefined(input) && input.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Verify if object has properties\r\n   * @param {Object} object - Object to be verified\r\n   * @param {Array} props - properties to search on object\r\n   * @return {Boolean} True if object has all properties\r\n   */\r\n  static hasProps(object, props) {\r\n    const missingPropsResult = this.getMissingProps(object, props);\r\n    return missingPropsResult.length <= 0;\r\n  }\r\n\r\n  /**\r\n   * Get Object missing properties\r\n   * @param {Object} object - Object to be verified\r\n   * @param {Array} props - properties to search on object\r\n   * @return {Array} missing properties\r\n   */\r\n  static getMissingProps(object, props) {\r\n    let missingProps = [];\r\n    [...props].forEach((prop) => {\r\n      const result = prop in object;\r\n      if (!result) {\r\n        missingProps.push(prop);\r\n      }\r\n    });\r\n\r\n    return missingProps;\r\n  }\r\n}\r\n\r\nexport default Ensure;\r\n","/* eslint-disable max-len */\r\nimport { Logger } from './';\r\n\r\n/**\r\n * Helper Abstraction class\r\n */\r\nclass Helper {\r\n  /**\r\n   * Helper constructor\r\n   * @param {*} props\r\n   */\r\n  constructor(props) {\r\n    this._logger = new Logger('Ensure');\r\n    this.props = props || {\r\n      language: navigator.language || navigator.userLanguage,\r\n      currency: 'BRL',\r\n      currencyLocale: 'pt-br',\r\n      minimumFractionDigits: 2,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * format currency\r\n   * @param {*} value\r\n   * @param {*} minimumFractionDigits\r\n   * @return {*}\r\n   */\r\n  formatPrice(value) {\r\n    value = value / 100;\r\n    value = (value * 1).toFixed(\r\n      Math.max(0, ~~this.props.minimumFractionDigits)\r\n    );\r\n\r\n    return new Intl.NumberFormat(this.props.currencyLocale, {\r\n      style: 'currency',\r\n      currency: this.props.currency,\r\n      minimumFractionDigits: this.props.minimumFractionDigits,\r\n    }).format(value);\r\n  }\r\n\r\n  static getParents(elem, selector) {\r\n    // Element.matches() polyfill\r\n    if (!Element.prototype.matches) {\r\n      Element.prototype.matches =\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\r\n              s\r\n            ),\r\n            i = matches.length;\r\n\r\n          while (--i >= 0 && matches.item(i) !== this) {}\r\n\r\n          return i > -1;\r\n        };\r\n    }\r\n\r\n    // Set up a parent array\r\n    let parents = [];\r\n\r\n    // Push each parent element to the array\r\n    for (; elem && elem !== document; elem = elem.parentNode) {\r\n      if (selector) {\r\n        if (elem.matches(selector)) {\r\n          parents.push(elem);\r\n        }\r\n\r\n        continue;\r\n      }\r\n\r\n      parents.push(elem);\r\n    }\r\n\r\n    // Return our parent array\r\n    return parents;\r\n  }\r\n\r\n  static serializeForm(form) {\r\n    // Setup our serialized data\r\n    let serialized = [];\r\n\r\n    // Loop through each field in the form\r\n    for (let i = 0; i < form.elements.length; i++) {\r\n      let field = form.elements[i];\r\n\r\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n      if (\r\n        !field.name ||\r\n        field.disabled ||\r\n        field.type === 'file' ||\r\n        field.type === 'reset' ||\r\n        field.type === 'submit' ||\r\n        field.type === 'button'\r\n      )\r\n        continue;\r\n\r\n      // If a multi-select, get all selections\r\n      if (field.type === 'select-multiple') {\r\n        for (let n = 0; n < field.options.length; n++) {\r\n          if (!field.options[n].selected) continue;\r\n\r\n          serialized.push(\r\n            encodeURIComponent(field.name) +\r\n              '=' +\r\n              encodeURIComponent(field.options[n].value)\r\n          );\r\n        }\r\n      }\r\n\r\n      // Convert field data to a query string\r\n      else if (\r\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\r\n        field.checked\r\n      ) {\r\n        serialized.push(\r\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\r\n        );\r\n      }\r\n    }\r\n\r\n    return serialized.join('&');\r\n  }\r\n\r\n  static getFormData(form) {\r\n    // Setup our serialized data\r\n    let data = {};\r\n\r\n    // Loop through each field in the form\r\n    for (let i = 0; i < form.elements.length; i++) {\r\n      let field = form.elements[i];\r\n\r\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n      if (\r\n        !field.name ||\r\n        field.disabled ||\r\n        field.type === 'file' ||\r\n        field.type === 'reset' ||\r\n        field.type === 'submit' ||\r\n        field.type === 'button'\r\n      )\r\n        continue;\r\n\r\n      // If a multi-select, get all selections\r\n      if (field.type === 'select-multiple') {\r\n        for (let n = 0; n < field.options.length; n++) {\r\n          if (!field.options[n].selected) continue;\r\n\r\n          data[field.name] = field.options[n].value;\r\n        }\r\n      }\r\n\r\n      // Convert field data to a query string\r\n      else if (\r\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\r\n        field.checked\r\n      ) {\r\n        data[field.name] = field.value;\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  static getRandomID() {\r\n    // Generate unique IDs for use as pseudo-private/protected names.\r\n    // Similar in concept to\r\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\r\n    //\r\n    // The goals of this function are twofold:\r\n    //\r\n    // * Provide a way to generate a string guaranteed to be unique when compared\r\n    //   to other strings generated by this function.\r\n    // * Make the string complex enough that it is highly unlikely to be\r\n    //   accidentally duplicated by hand (this is key if you're using `ID`\r\n    //   as a private/protected name on an object).\r\n    //\r\n    // Use:\r\n    //\r\n    //     var privateName = ID();\r\n    //     var o = { 'public': 'foo' };\r\n    //     o[privateName] = 'bar';\r\n\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n\r\n    return (\r\n      '_' +\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9)\r\n    );\r\n  }\r\n\r\n  static setCookie(cname, cvalue, exdays) {\r\n    const date = new Date();\r\n\r\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n\r\n    const expires = 'expires=' + date.toUTCString();\r\n\r\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\r\n  }\r\n\r\n  static getCookie(cname) {\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n\r\n    const cookie = decodedCookie\r\n      .split(';')\r\n      .filter(cookie => cookie.includes(cname))[0];\r\n\r\n    return cookie || '';\r\n  }\r\n\r\n  static isInViewport(element) {\r\n    const heightViewport =\r\n      window.innerHeight || document.documentElement.clientHeight;\r\n\r\n    const widthViewport =\r\n      window.innerWidth || document.documentElement.clientWidth;\r\n\r\n    const { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return (\r\n      top >= 0 &&\r\n      left >= 0 &&\r\n      bottom <= heightViewport &&\r\n      right <= widthViewport\r\n    );\r\n  }\r\n\r\n  static removeAccents(str) {\r\n    const mapAccents = {\r\n      a: 'á|à|ã|â|À|Á|Ã|Â',\r\n      e: 'é|è|ê|É|È|Ê',\r\n      i: 'í|ì|î|Í|Ì|Î',\r\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\r\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\r\n      c: 'ç|Ç',\r\n      n: 'ñ|Ñ',\r\n    };\r\n\r\n    for (let pattern in mapAccents) {\r\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\r\n    }\r\n\r\n    return str;\r\n  }\r\n}\r\n\r\nexport default Helper;\r\n","/* eslint no-console: 0 */\r\n\r\n/**\r\n * Logger Abstraction class\r\n */\r\nclass Logger {\r\n  /**\r\n   * Logger constructor\r\n   * @param {string} logName Application name to log\r\n   */\r\n  constructor(logName = 'B8ONE Logger Component') {\r\n    this.logName = logName;\r\n  }\r\n\r\n  /**\r\n   * Log error message\r\n   * @param {*} message - Message text\r\n   * @param {*} errorObj - Message object\r\n   */\r\n  error(message = '', errorObj = {}) {\r\n    console.error(message, errorObj);\r\n  }\r\n\r\n  /**\r\n   * Log information message\r\n   * @param {*} message - Message text\r\n   */\r\n  info(message = '') {\r\n    console.info(message);\r\n  }\r\n\r\n  /**\r\n   * Log warning message\r\n   * @param {*} message - Message text\r\n   */\r\n  warning(message = '') {\r\n    console.warn(this.logName, message);\r\n  }\r\n\r\n  /**\r\n   * Generic log\r\n   * @param {String} message - log's message\r\n   */\r\n  log(message = '') {\r\n    console.log(message);\r\n  }\r\n\r\n  /**\r\n   * Generic log\r\n   * @param {String} message - log's message\r\n   * @param {*} object - object to be logged\r\n   */\r\n  log(message = '', object = {}) {\r\n    console.log(message, object);\r\n  }\r\n}\r\n\r\nexport default Logger;\r\n","/* eslint-disable max-len */\r\n\r\nimport { Ensure, Logger } from '../common';\r\nimport HttpClient from './b8one.httpClient';\r\n\r\n/**\r\n * Cart Abstraction class\r\n */\r\nclass CartService {\r\n  /**\r\n   * Cart constructor\r\n   */\r\n  constructor() {\r\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\r\n\r\n    this._logger = new Logger('Cart service');\r\n    this._httpClient = new HttpClient();\r\n  }\r\n\r\n  /**\r\n   * Get current cart\r\n   * @return {*} Cart object\r\n   */\r\n  async getCurrent() {\r\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\r\n  }\r\n\r\n  /**\r\n   * Add item to cart\r\n   * @param {*} skuId - Product sku Id (SKU)\r\n   * @param {*} productQuantity - Product Quantity\r\n   * @param {*} sellerId - Seller id\r\n   */\r\n  async add(skuId, productQuantity, sellerId = 1) {\r\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\r\n\r\n    if (!Ensure.isUndefined(skuId)) {\r\n      const current = await this.getCurrent();\r\n      const indexFound = current.items.findIndex(x => x.id === skuId);\r\n\r\n      if (indexFound > -1) {\r\n        productQuantity =\r\n          parseInt(productQuantity) +\r\n          parseInt(current.items[indexFound].quantity);\r\n      }\r\n\r\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n\r\n      const payload = {\r\n        orderItems: [\r\n          {\r\n            seller: sellerId.toString(),\r\n            quantity: parseInt(productQuantity),\r\n            id: skuId.toString(),\r\n          },\r\n        ],\r\n      };\r\n\r\n      return this._httpClient.patch(endpointUrl, payload);\r\n    }\r\n  }\r\n\r\n  async checkoutCRUD(skus) {\r\n    let { items } = await window.vtexjs.checkout.getOrderForm();\r\n\r\n    const skusCustomProducts = this.getCustomProducts(skus);\r\n\r\n    skus = skus.filter(sku => !sku.isCustom);\r\n    skus = [...skus, ...skusCustomProducts];\r\n\r\n    const skuToIgnore = [19, 698, 25, 26];\r\n\r\n    const indexToRemove = items.reduce((indexList, item, index) => {\r\n      const customProductSKUs = [25, 26];\r\n\r\n      if (customProductSKUs.includes(parseInt(item.id))) {\r\n        return [...indexList, index];\r\n      }\r\n\r\n      return indexList;\r\n    }, []);\r\n\r\n    if (indexToRemove.length > 0) {\r\n      const response = await this.removeMoreProducts(indexToRemove);\r\n\r\n      response && (items = response.items);\r\n    }\r\n\r\n    const productsToAdd = skus\r\n      .filter(sku => sku.quantity > 0)\r\n      .filter(sku => {\r\n        let index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        return index === -1 && sku.quantity > 0;\r\n      })\r\n      .map(sku => ({\r\n        quantity: sku.quantity,\r\n        seller: 1,\r\n        id: sku.skuId || sku.id,\r\n      }));\r\n\r\n    console.log('productsToAdd', productsToAdd);\r\n\r\n    const productsToUpdate = skus\r\n      .filter(sku => sku.quantity > 0)\r\n      .filter(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        if (index !== -1) {\r\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\r\n          const diffQuantity =\r\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\r\n\r\n          return sameSku && diffQuantity && sku.quantity > 0;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        return {\r\n          index,\r\n          quantity: sku.quantity,\r\n        };\r\n      });\r\n\r\n    console.log('productsToUpdate', productsToUpdate);\r\n\r\n    const productsToReplaceSKU = skus\r\n      .filter(\r\n        sku =>\r\n          sku.quantity > 0 &&\r\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\r\n      )\r\n      .filter(sku => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        if (index !== -1) {\r\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\r\n\r\n          return diffSku;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        const oldSKU = {\r\n          index,\r\n          seller: 1,\r\n          quantity: 0,\r\n        };\r\n\r\n        const newSKU = {\r\n          seller: 1,\r\n          id: sku.skuId,\r\n          quantity: sku.quantity,\r\n        };\r\n\r\n        return [oldSKU, newSKU];\r\n      })\r\n      .reduce((itemsList, current) => {\r\n        const [oldSKU, newSKU] = current;\r\n\r\n        return [...itemsList, oldSKU, newSKU];\r\n      }, []);\r\n\r\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\r\n\r\n    const productsToRemove = skus\r\n      .filter(sku => sku.quantity < 1)\r\n      .filter(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        if (index !== -1) {\r\n          return sku.quantity == 0;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        return {\r\n          index,\r\n          quantity: 0,\r\n        };\r\n      });\r\n\r\n    console.log('productsToRemove', productsToRemove);\r\n\r\n    if (productsToUpdate[0]) {\r\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\r\n    }\r\n\r\n    if (productsToReplaceSKU[0]) {\r\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\r\n    }\r\n\r\n    if (productsToRemove[0]) {\r\n      await window.vtexjs.checkout.removeItems(productsToRemove);\r\n    }\r\n\r\n    if (productsToAdd[0]) {\r\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\r\n    }\r\n  }\r\n\r\n  getCustomProducts(skus) {\r\n    const customProducts = {};\r\n\r\n    skus\r\n      .filter(({ isCustom }) => isCustom === true)\r\n      .forEach(({ skuId, quantity, customProductItem }) => {\r\n        let currentCustomProduct = customProducts[skuId];\r\n\r\n        const customProductQuantity =\r\n          parseInt(customProductItem.quantity) * parseInt(quantity);\r\n\r\n        if (currentCustomProduct) {\r\n          const newQuantity =\r\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\r\n\r\n          currentCustomProduct = {\r\n            ...currentCustomProduct,\r\n            quantity: newQuantity,\r\n          };\r\n        } else {\r\n          currentCustomProduct = {\r\n            ...customProductItem,\r\n            quantity: customProductQuantity,\r\n            isCustom: true,\r\n          };\r\n        }\r\n\r\n        customProducts[skuId] = currentCustomProduct;\r\n      });\r\n\r\n    return Object.values(customProducts);\r\n  }\r\n\r\n  async getProductIndexInOrderForm(productId) {\r\n    const { items } = await this.getCurrent();\r\n\r\n    const index = items.findIndex(item => item.productId == productId);\r\n\r\n    if (index !== -1) return index;\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Remove item to cart\r\n   * @param {JSON} itemIndex - Product item index to be removed\r\n   */\r\n  async remove(itemIndex) {\r\n    const current = await this.getCurrent();\r\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n    const payload = {\r\n      orderItems: [\r\n        {\r\n          index: itemIndex,\r\n          quantity: 0,\r\n        },\r\n      ],\r\n      expectedOrderFormSections: ['items'],\r\n      noSplitItem: true,\r\n    };\r\n\r\n    await this._httpClient.patch(endpointUrl, payload);\r\n  }\r\n\r\n  /**\r\n   * Remove items of cart\r\n   * @param {Array} itemsIndex - Products items index to be removed\r\n   */\r\n  async removeMoreProducts(itemsIndex) {\r\n    const current = await this.getCurrent();\r\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n    const payload = {\r\n      orderItems: itemsIndex.map(index => ({\r\n        index,\r\n        quantity: 0,\r\n      })),\r\n      expectedOrderFormSections: ['items'],\r\n      noSplitItem: true,\r\n    };\r\n\r\n    return await this._httpClient.patch(endpointUrl, payload);\r\n  }\r\n\r\n  async updateProduct(skuId, quantity, seller = 1) {\r\n    const newSKU = {\r\n      seller,\r\n      quantity,\r\n      id: skuId,\r\n    };\r\n\r\n    return await this.updateProducts([newSKU]);\r\n  }\r\n\r\n  async updateProducts(skus) {\r\n    const { items, orderFormId } = await this.getCurrent();\r\n\r\n    skus = skus\r\n      .map(({ id, quantity, seller }) => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.id) === parseInt(id)\r\n        );\r\n\r\n        return {\r\n          id,\r\n          index,\r\n          quantity,\r\n          seller: seller || 1,\r\n        };\r\n      })\r\n      .filter(sku => sku.index !== -1);\r\n\r\n    if (skus.length > 0) {\r\n      const payload = {\r\n        orderItems: skus,\r\n      };\r\n\r\n      return await this._httpClient.patch(\r\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\r\n        payload\r\n      );\r\n    }\r\n  }\r\n\r\n  async simulateOrderForm(postalCode, country = 'BRA') {\r\n    try {\r\n      await vtexjs.checkout.getOrderForm();\r\n\r\n      const orderForm = await vtexjs.checkout.calculateShipping({\r\n        postalCode,\r\n        country,\r\n      });\r\n\r\n      return orderForm;\r\n    } catch (error) {\r\n      console.error('Error in simulateOrderForm', error);\r\n    }\r\n  }\r\n\r\n  async simulateShipping(items, postalCode, country = 'BRA') {\r\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\r\n      items,\r\n      postalCode,\r\n      country\r\n    );\r\n\r\n    return orderFormSimulated;\r\n  }\r\n\r\n  async updateCheckoutTransporterSLA(logisticsInfo) {\r\n    await vtexjs.checkout.getOrderForm();\r\n\r\n    const { shippingData } = vtexjs.checkout.orderForm;\r\n\r\n    shippingData.logisticsInfo = logisticsInfo;\r\n\r\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\r\n  }\r\n\r\n  async updateCheckoutAddress(address) {\r\n    console.log(address);\r\n    await vtexjs.checkout.getOrderForm();\r\n\r\n    const { shippingData } = vtexjs.checkout.orderForm;\r\n\r\n    shippingData.availableAddresses = [\r\n      {\r\n        ...shippingData.address,\r\n        ...address,\r\n      },\r\n    ];\r\n\r\n    shippingData.selectedAddresses = [\r\n      {\r\n        ...shippingData.address,\r\n        ...address,\r\n      },\r\n    ];\r\n\r\n    shippingData.address = {\r\n      ...shippingData.address,\r\n      ...address,\r\n    };\r\n\r\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\r\n  }\r\n\r\n  async setMultipleCustomDataFields(appName, fields) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\r\n\r\n    try {\r\n      return await this._httpClient.put(endpoint, fields);\r\n    } catch (error) {\r\n      console.error('setMultipleCustomDataFields', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\r\n\r\n    const payload = { value: appFieldValue };\r\n\r\n    try {\r\n      return await this._httpClient.put(endpoint, payload);\r\n    } catch (error) {\r\n      console.error('setSingleCustomDataField', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async removeSingleCustomDataField(appName, appFieldName) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\r\n\r\n    const payload = { value: null };\r\n\r\n    try {\r\n      return await this._httpClient.delete(endpoint, payload);\r\n    } catch (error) {\r\n      console.error('removeSingleCustomDataField', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Cart's payload method factory\r\n   * @param {*} skuId - Product Id (SKU)\r\n   * @param {*} productQuantity - Product Quantity\r\n   * @param {*} sellerId - Seller id\r\n   * @return {JSON} cart paylod\r\n   */\r\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\r\n    return {\r\n      id: skuId,\r\n      quantity: productQuantity,\r\n      seller: sellerId,\r\n    };\r\n  }\r\n}\r\n\r\nexport default CartService;\r\n","// Dependencies\r\nimport IMask from 'imask';\r\n\r\n// Utils\r\nimport { REAL } from 'Utils/currency/';\r\nimport SKUS_TO_IGNORE from 'Utils/skusToIgnore';\r\n\r\n// Services\r\nimport CartService from 'Services/b8one.cartService.js';\r\n\r\nimport ModalComponent from 'Components/b8one.modalComponent.js';\r\n\r\nclass InsuranceChangePage {\r\n  constructor() {\r\n    this.products = {};\r\n    this.cartService = new CartService();\r\n\r\n    window.InsuranceChangePage = this;\r\n\r\n    this.valueInsurance = REAL('R$ 0,00');\r\n    this.totalInsurance = REAL('R$ 0,00');\r\n    this.totalOrderSummary = REAL('R$ 0,00');\r\n    this.totalTransporterSelected = REAL('R$ 0,00');\r\n\r\n    this.totalInsuranceElement;\r\n    this.totalTransporterSelectedElement;\r\n\r\n    this.lastInsurancePercentage = 'R$ 0,00';\r\n\r\n    this.rejectInsuranceModalInstance = null;\r\n\r\n    this.orderForm = {};\r\n    this.orderDetails = {};\r\n\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    if (location.pathname !== '/_secure/seguro/contratacao') {\r\n      this.setHandledButtonSkipStepClick();\r\n    }\r\n\r\n    this.orderForm = await this.cartService.getCurrent();\r\n\r\n    if (location.pathname === '/_secure/seguro/contratacao') {\r\n      const orderID = location.search.match(/[\\d\\-\\d{2}]+/g)[0];\r\n\r\n      const data = await (\r\n        await fetch(`/api/oms/user/orders/${orderID}`)\r\n      ).json();\r\n\r\n      this.orderForm = data;\r\n      this.orderDetails = data;\r\n    }\r\n\r\n    if (\r\n      location.pathname === '/seguro' ||\r\n      location.pathname === '/_secure/seguro/contratacao'\r\n    ) {\r\n      this.setHandledTotalsPlaceholderElementsTransitionEnd();\r\n\r\n      this.setTotalTransporterSelected();\r\n\r\n      this.getProductstInOrderForm();\r\n      this.getProductsInCustomData();\r\n\r\n      this.mapProducts();\r\n\r\n      this.getInsuranceDataInCustomData();\r\n\r\n      this.setTotalOrderSummary();\r\n      this.setValueInsurance();\r\n\r\n      this.setTotalTransporterSelectedElement();\r\n      this.setTotalInsuranceElement();\r\n      this.setValueInsuranceElement();\r\n      this.setTotalOrderSummaryElement();\r\n\r\n      this.showProductsHidden();\r\n      this.hideTotalsPlaceholderElements();\r\n\r\n      this.setInputMasks();\r\n      this.updateProducts();\r\n\r\n      this.setHandledProducts();\r\n\r\n      this.setHandledButtonSaveClick();\r\n    } else {\r\n      this.initRejectInsuranceModal();\r\n      this.setHandledButtonRejectInsuranceClick();\r\n      this.setHandledButtonConfirmRejectInsuranceClick();\r\n    }\r\n  }\r\n\r\n  setTotalTransporterSelected() {\r\n    const { customData } = this.orderForm;\r\n\r\n    if (!customData) return;\r\n\r\n    customData.customApps\r\n      .filter(customApp => customApp.id === 'selectedcourier')\r\n      .forEach(customApp => {\r\n        const { courier_data } = customApp.fields;\r\n\r\n        const transporter = JSON.parse(courier_data);\r\n\r\n        const { priceFormatted } = transporter.deliveryTypeSelected;\r\n\r\n        this.totalTransporterSelected = this.totalTransporterSelected.add(\r\n          priceFormatted\r\n        );\r\n      });\r\n  }\r\n\r\n  setTotalTransporterSelectedElement() {\r\n    const totalTransporterSelectedElement = document.querySelector(\r\n      '.js-total-transporter-selected'\r\n    );\r\n\r\n    totalTransporterSelectedElement.textContent = this.totalTransporterSelected.format();\r\n  }\r\n\r\n  setTotalInsuranceElement() {\r\n    const totalInsuranceElement = document.querySelector('.js-total-insurance');\r\n\r\n    totalInsuranceElement.textContent = this.totalInsurance.format();\r\n\r\n    this.totalInsuranceElement = totalInsuranceElement;\r\n  }\r\n\r\n  setTotalOrderSummaryElement() {\r\n    const totalOrderSummaryElement = document.querySelector(\r\n      '.js-total-order-summary'\r\n    );\r\n\r\n    totalOrderSummaryElement.textContent = this.totalOrderSummary.format();\r\n  }\r\n\r\n  setTotalOrderSummary() {\r\n    this.totalOrderSummary = this.totalOrderSummary\r\n      .add(this.totalTransporterSelected.format())\r\n      .add(this.totalInsurance.multiply(0.01).format());\r\n  }\r\n\r\n  setValueInsurance() {\r\n    this.valueInsurance = this.valueInsurance.add(\r\n      this.totalInsurance.multiply(0.01).format()\r\n    );\r\n\r\n    this.lastInsurancePercentage = this.valueInsurance.format();\r\n  }\r\n\r\n  setValueInsuranceElement() {\r\n    const valueInsuranceElement = document.querySelector('.js-value-insurance');\r\n\r\n    valueInsuranceElement.textContent = this.valueInsurance.format();\r\n  }\r\n\r\n  mapProducts() {\r\n    const products = [...document.querySelectorAll('.product')];\r\n\r\n    products.forEach(product => {\r\n      const { productId } = product.dataset;\r\n\r\n      this.products[productId] = {\r\n        productId,\r\n        totalInsurance: 0,\r\n        totalInsuranceFormatted: 'R$ 0,00',\r\n      };\r\n    });\r\n  }\r\n\r\n  setHandledProduct = product => {\r\n    const { productId } = product.dataset;\r\n    const productInsuranceInput = product.querySelector('.product__value');\r\n\r\n    if (productInsuranceInput) {\r\n      let productOldInsuranceValue = productInsuranceInput.value;\r\n\r\n      productInsuranceInput.addEventListener('input', ({ target }) => {\r\n        const { value } = target;\r\n\r\n        let newTotalInsuranceQuantity = this.totalInsurance\r\n          .subtract(productOldInsuranceValue)\r\n          .add(value);\r\n\r\n        this.totalOrderSummary = this.totalOrderSummary.subtract(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        this.valueInsurance = this.valueInsurance.subtract(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        this.totalInsuranceElement.textContent = newTotalInsuranceQuantity.format();\r\n\r\n        this.totalInsurance = newTotalInsuranceQuantity;\r\n\r\n        this.lastInsurancePercentage = this.totalInsurance\r\n          .multiply(0.01)\r\n          .format();\r\n\r\n        this.totalOrderSummary = this.totalOrderSummary.add(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        this.valueInsurance = this.valueInsurance.add(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        productOldInsuranceValue = value;\r\n\r\n        this.products[productId] = {\r\n          ...this.products[productId],\r\n          totalInsurance: REAL(value).value,\r\n          totalInsuranceFormatted: REAL(value).format(),\r\n        };\r\n\r\n        this.setTotalOrderSummaryElement();\r\n        this.setValueInsuranceElement();\r\n      });\r\n    }\r\n  };\r\n\r\n  setHandledProducts() {\r\n    const products = [...document.querySelectorAll('.product')];\r\n\r\n    products.forEach(this.setHandledProduct);\r\n  }\r\n\r\n  getProductstInOrderForm() {\r\n    const { items } = this.orderForm;\r\n\r\n    const insuranceItemsTable = document.querySelector(\r\n      '.insurance-items__table'\r\n    );\r\n\r\n    this.removeContentPlaceholder();\r\n\r\n    const productsHTML = items\r\n      .filter(({ id }) => !SKUS_TO_IGNORE.includes(parseInt(id)))\r\n      .map(({ name, imageUrl, productId, skuName, quantity }) => {\r\n        const productName = name.replace(skuName, '');\r\n        const description = '';\r\n\r\n        const productHTML = `\r\n          <div class=\"table__row table__row--hidden\">\r\n            ${this.createProduct({\r\n              imageUrl,\r\n              productId,\r\n              productName,\r\n              description,\r\n              quantity,\r\n            })}\r\n          </div>\r\n        `;\r\n\r\n        return productHTML;\r\n      });\r\n\r\n    insuranceItemsTable.innerHTML += productsHTML.join('');\r\n  }\r\n\r\n  getProductsInCustomData() {\r\n    const { customData } = this.orderForm;\r\n\r\n    if (!customData) return;\r\n\r\n    customData.customApps\r\n      .filter(customApp => customApp.id === 'selecteditems')\r\n      .map(customApp => {\r\n        const { products_data } = customApp.fields;\r\n        const products = JSON.parse(products_data);\r\n        const customProducts = products.filter(({ isCustom }) => isCustom);\r\n\r\n        const insuranceItemsTable = document.querySelector(\r\n          '.insurance-items__table'\r\n        );\r\n\r\n        const productsHTML = customProducts\r\n          .map(productData => {\r\n            const productHTML = `\r\n              <div class=\"table__row table__row--hidden\">\r\n                ${this.createCustomProduct(productData)}\r\n              </div>\r\n            `;\r\n\r\n            return productHTML;\r\n          })\r\n          .join('');\r\n\r\n        insuranceItemsTable.innerHTML += productsHTML;\r\n      });\r\n  }\r\n\r\n  updateProducts() {\r\n    Object.values(this.products).forEach(\r\n      ({ productId, totalInsuranceFormatted }) => {\r\n        const productElement = document.querySelector(\r\n          `[data-product-id='${productId}']`\r\n        );\r\n\r\n        const productInputElement = productElement.querySelector(\r\n          '.js-product-insurance-input'\r\n        );\r\n\r\n        productInputElement.value = totalInsuranceFormatted;\r\n      }\r\n    );\r\n  }\r\n\r\n  createProduct({ productId, productName, description, imageUrl, quantity }) {\r\n    const productHTML = `\r\n      <div \r\n        class=\"product\"\r\n        data-product-id=\"${productId}\"\r\n      >\r\n        <div class=\"product__container\">\r\n          <figure class=\"product__figure\">\r\n            <img \r\n              class=\"product__image\" \r\n              alt=\"${productName}\"\r\n              src=\"${imageUrl}\"\r\n            />\r\n          </figure>\r\n          \r\n          <div class=\"product__group\">\r\n            <h3 class=\"product__name\">${productName} (${quantity} un.)</h3>\r\n            \r\n            <div class=\"product__attributes\">\r\n              <p class=\"attributes__item\">${description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"R$ 0,00\"\r\n          class=\"product__value js-product-insurance-input\"\r\n        />\r\n      </div>\r\n    `;\r\n\r\n    return productHTML;\r\n  }\r\n\r\n  createProducts(products) {\r\n    products = products\r\n      .map(product => {\r\n        return `\r\n        <div class=\"table__row\">\r\n          ${this.createProduct(product)}\r\n        </div>\r\n      `;\r\n      })\r\n      .join('');\r\n\r\n    return products;\r\n  }\r\n\r\n  createCustomProduct(productData) {\r\n    const { quantity, customAttributes, productId } = productData;\r\n\r\n    const customProduct = `\r\n      <div \r\n        class=\"product\"\r\n        data-product-quantity=\"${quantity}\"\r\n        data-product-id=\"${productId}\"\r\n      >\r\n        <div class=\"product__container\">\r\n          <div class=\"product__icon-container\">\r\n            <i class=\"far fa-box product__icon\"></i>\r\n          </div>\r\n          \r\n          <div class=\"product__group\">\r\n            <h3 class=\"product__name\">\r\n              ${customAttributes['product-name']} (${quantity} un.)\r\n            </h3>\r\n            \r\n            <div class=\"product__attributes\">\r\n              <p class=\"attributes__item\">\r\n                Aproximadamente \r\n                ${customAttributes['product-height']}cm x \r\n                ${customAttributes['product-width']}cm x \r\n                ${customAttributes['product-depth']}cm\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"R$ 0,00\"\r\n          class=\"product__value js-product-insurance-input\"\r\n        />\r\n      </div>\r\n    `;\r\n\r\n    return customProduct;\r\n  }\r\n\r\n  addProductsToDOM() {\r\n    const insuranceItemsTable = document.querySelector(\r\n      '.insurance-items__table'\r\n    );\r\n\r\n    insuranceItemsTable.innerHTML += this.createProducts();\r\n  }\r\n\r\n  setInputMasks() {\r\n    [...document.querySelectorAll('.js-product-insurance-input')].forEach(\r\n      productInsuranceInput => {\r\n        IMask(productInsuranceInput, {\r\n          mask: 'R$ num',\r\n          blocks: {\r\n            num: {\r\n              // nested masks are available!\r\n              mask: Number,\r\n              thousandsSeparator: '.',\r\n              scale: 2,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  setHandledButtonSaveClick() {\r\n    const btnContinue = document.querySelector('.button--primary');\r\n    const buttonSave = document.querySelector('.js-button-save');\r\n\r\n    btnContinue.addEventListener('click', async () => {\r\n      btnContinue.classList.add('js-loading');\r\n\r\n      await this.saveData();\r\n\r\n      btnContinue.classList.remove('js-loading');\r\n\r\n      if (location.pathname === '/_secure/seguro/contratacao') {\r\n        window.location.assign('/checkout/#/payment');\r\n      } else {\r\n        window.location.assign('/resumo');\r\n      }\r\n    });\r\n\r\n    buttonSave &&\r\n      buttonSave.addEventListener('click', async () => {\r\n        document.dispatchEvent(window.initSaveCustomDataEvent);\r\n\r\n        await this.saveData();\r\n\r\n        document.dispatchEvent(window.endSaveCustomDataEvent);\r\n      });\r\n  }\r\n\r\n  getInsuranceDataInCustomData() {\r\n    const { customData } = this.orderForm;\r\n\r\n    if (!customData) return;\r\n\r\n    customData.customApps\r\n      .filter(customApp => customApp.id === 'insurance')\r\n      .forEach(customApp => {\r\n        let { items, total } = customApp.fields;\r\n\r\n        items = ['skipped', 'none'].includes(items) ? items : JSON.parse(items);\r\n\r\n        if (items && !['skipped', 'none'].includes(items)) {\r\n          items = Object.entries(items)\r\n            .filter(([key, value]) => key in this.products)\r\n            .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\r\n\r\n          this.products = {\r\n            ...this.products,\r\n            ...items,\r\n          };\r\n        }\r\n\r\n        if (total) {\r\n          this.totalInsurance = REAL(total);\r\n        }\r\n      });\r\n  }\r\n\r\n  async saveData() {\r\n    try {\r\n      const insuranceFieldsForCustomData = {\r\n        items: JSON.stringify(this.products),\r\n        total: this.totalInsurance.format(),\r\n      };\r\n\r\n      const insuranceSKU = {\r\n        id: 35,\r\n        quantity: 1,\r\n        seller: '1',\r\n      };\r\n\r\n      if (this.totalInsurance.intValue > 0) {\r\n        await window.vtexjs.checkout.getOrderForm();\r\n        this.orderForm = await window.vtexjs.checkout.addToCart(\r\n          [insuranceSKU],\r\n          null\r\n        );\r\n\r\n        await this.updateInsuranceSKUPrice(\r\n          this.totalInsurance.multiply(0.01).intValue\r\n        );\r\n      }\r\n\r\n      if (location.pathname === '/_secure/seguro/contratacao') {\r\n        await this.updateCheckoutAddress();\r\n      }\r\n\r\n      await Promise.all([\r\n        this.cartService.setMultipleCustomDataFields(\r\n          'insurance',\r\n          insuranceFieldsForCustomData\r\n        ),\r\n        this.cartService.setSingleCustomDataField(\r\n          'orderinfo',\r\n          'current_step',\r\n          'insurance-change-2'\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.log('saveData', error);\r\n    }\r\n  }\r\n\r\n  async skipInsuranceStep() {\r\n    try {\r\n      let insuranceSKUIndex;\r\n\r\n      this.orderForm.items.forEach(({ id }, index) => {\r\n        if (parseInt(id) === 35) {\r\n          insuranceSKUIndex = index;\r\n        }\r\n      });\r\n\r\n      if (insuranceSKUIndex) {\r\n        await this.cartService.remove(insuranceSKUIndex);\r\n      }\r\n\r\n      await Promise.all([\r\n        this.cartService.removeSingleCustomDataField('insurance', 'total'),\r\n        this.cartService.setSingleCustomDataField(\r\n          'insurance',\r\n          'items',\r\n          'skipped'\r\n        ),\r\n        this.cartService.setSingleCustomDataField(\r\n          'orderinfo',\r\n          'current_step',\r\n          'insurance-change-1'\r\n        ),\r\n      ]);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async noContractInsurance() {\r\n    try {\r\n      let insuranceSKUIndex;\r\n\r\n      this.orderForm.items.forEach(({ id }, index) => {\r\n        if (parseInt(id) === 35) {\r\n          insuranceSKUIndex = index;\r\n        }\r\n      });\r\n\r\n      if (insuranceSKUIndex) {\r\n        await this.cartService.remove(insuranceSKUIndex);\r\n      }\r\n\r\n      await Promise.all([\r\n        this.cartService.removeSingleCustomDataField('insurance', 'total'),\r\n        this.cartService.setSingleCustomDataField('insurance', 'items', 'none'),\r\n        this.cartService.setSingleCustomDataField(\r\n          'orderinfo',\r\n          'current_step',\r\n          'insurance-change-1'\r\n        ),\r\n      ]);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  setHandledButtonSkipStepClick() {\r\n    const buttonSkipStep = document.querySelector('.js-button-later-contract');\r\n\r\n    buttonSkipStep.addEventListener('click', async e => {\r\n      e.preventDefault();\r\n\r\n      await this.skipInsuranceStep();\r\n\r\n      window.location.assign('/resumo');\r\n    });\r\n  }\r\n\r\n  removeContentPlaceholder() {\r\n    const insuranceItemsTable = document.querySelector(\r\n      '.insurance-items__table'\r\n    );\r\n\r\n    const contentPlaceholders = [...insuranceItemsTable.children].slice(1, 4);\r\n\r\n    contentPlaceholders.forEach(element => {\r\n      element.classList.add('table__row--hidden', 'content-placeholder');\r\n    });\r\n\r\n    [...document.querySelectorAll('.content-placeholder')].forEach(element =>\r\n      element.remove()\r\n    );\r\n  }\r\n\r\n  setHandledTotalsPlaceholderElementsTransitionEnd() {\r\n    const containerPlaceholderTotalsElements = [\r\n      ...document.querySelectorAll('.container-placeholder-totals'),\r\n    ];\r\n\r\n    containerPlaceholderTotalsElements.forEach(containerPlaceholderTotals => {\r\n      const actionsTotals = containerPlaceholderTotals.nextElementSibling;\r\n\r\n      containerPlaceholderTotals.addEventListener('transitionend', e => {\r\n        containerPlaceholderTotals.remove();\r\n\r\n        actionsTotals.classList.remove('actions__totals--hidden');\r\n      });\r\n    });\r\n  }\r\n\r\n  hideTotalsPlaceholderElements() {\r\n    const containerPlaceholderTotalsElements = [\r\n      ...document.querySelectorAll('.container-placeholder-totals'),\r\n    ];\r\n\r\n    containerPlaceholderTotalsElements.forEach(containerPlaceholderTotals => {\r\n      containerPlaceholderTotals.classList.add(\r\n        'container-placeholder-totals--hide'\r\n      );\r\n    });\r\n  }\r\n\r\n  showProductsHidden() {\r\n    const products = [\r\n      ...document.querySelectorAll(\r\n        '.table__row--hidden:not(.content-placeholder)'\r\n      ),\r\n    ];\r\n\r\n    setTimeout(() => {\r\n      products.forEach(product =>\r\n        product.classList.remove('table__row--hidden')\r\n      );\r\n    }, 400);\r\n  }\r\n\r\n  initRejectInsuranceModal() {\r\n    const rejectInsuranceModal = document.querySelector(\r\n      '.reject-insurance-modal'\r\n    );\r\n\r\n    if (rejectInsuranceModal) {\r\n      this.rejectInsuranceModalInstance = new ModalComponent({\r\n        modal: rejectInsuranceModal,\r\n        modalShowCLass: 'wrapper-modal--show',\r\n      });\r\n\r\n      const buttonCloseModal = rejectInsuranceModal.querySelector(\r\n        '.modal__close'\r\n      );\r\n\r\n      const buttonConfirm = rejectInsuranceModal.querySelector(\r\n        '.button--primary'\r\n      );\r\n\r\n      buttonCloseModal.addEventListener('click', () => {\r\n        this.rejectInsuranceModalInstance.close();\r\n      });\r\n\r\n      buttonConfirm.addEventListener('click', () => {\r\n        buttonConfirm.classList.add('js-loading', 'button--disabled');\r\n\r\n        setTimeout(() => {\r\n          window.location.assign('/resumo');\r\n        }, 1500);\r\n      });\r\n    }\r\n  }\r\n\r\n  setHandledButtonRejectInsuranceClick() {\r\n    const buttonRejectInsurance = document.querySelector(\r\n      '.js-button-no-contract'\r\n    );\r\n\r\n    buttonRejectInsurance.addEventListener('click', e => {\r\n      e.preventDefault();\r\n\r\n      this.rejectInsuranceModalInstance.show();\r\n    });\r\n  }\r\n\r\n  setHandledButtonConfirmRejectInsuranceClick() {\r\n    const rejectInsuranceModal = document.querySelector(\r\n      '.reject-insurance-modal'\r\n    );\r\n\r\n    const buttonConfirm = rejectInsuranceModal.querySelector('.modal__button');\r\n\r\n    buttonConfirm.addEventListener('click', async e => {\r\n      e.preventDefault();\r\n\r\n      await this.noContractInsurance();\r\n\r\n      window.location.assign('/resumo');\r\n    });\r\n  }\r\n\r\n  async updateInsuranceSKUPrice(price) {\r\n    const { orderFormId } = this.orderForm;\r\n\r\n    const itemIndex = this.orderForm.items.findIndex(\r\n      ({ id }) => parseInt(id) === 35\r\n    );\r\n\r\n    if (itemIndex === -1) return;\r\n\r\n    const endpoint = `https://wcdlfckgi9.execute-api.us-east-2.amazonaws.com/v1/api/checkout/pub/orderform/${orderFormId}/items/${itemIndex}/price`;\r\n\r\n    await fetch(endpoint, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        price,\r\n      }),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  async updateCheckoutAddress() {\r\n    const { selectedAddresses } = this.orderDetails.shippingData;\r\n\r\n    await this.cartService.updateCheckoutAddress(selectedAddresses[0]);\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  new InsuranceChangePage();\r\n});\r\n","import fetch from 'unfetch';\r\nimport { Ensure, Logger } from '../common';\r\n\r\n/**\r\n * HttpClient Abstraction class\r\n */\r\nclass HttpClient {\r\n  /**\r\n   * HttpClient constructor\r\n   */\r\n  constructor() {\r\n    this._logger = new Logger('httpClient');\r\n  }\r\n\r\n  /**\r\n   * Get\r\n   * @param {String} endpointUrl\r\n   * @return {Promise}\r\n   */\r\n  get(endpointUrl) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'GET');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete\r\n   * @param {String} endpointUrl\r\n   * @return {Promise}\r\n   */\r\n  delete(endpointUrl) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'DELETE');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  post(endpointUrl, payload = {}) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'POST', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  put(endpointUrl, payload) {\r\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\r\n      return this._execute(endpointUrl, 'PUT', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  patch(endpointUrl, payload) {\r\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\r\n      return this._execute(endpointUrl, 'PATCH', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} endpointUrl\r\n   * @param {String} httpVerb\r\n   * @param {Object} payload\r\n   * @return {Promise}\r\n   */\r\n  _execute(endpointUrl, httpVerb, payload) {\r\n    let header = {\r\n      method: httpVerb,\r\n      headers: {\r\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\r\n        // 'Content-Type': 'application/json',\r\n        accept: 'application/vnd.vtex.masterdata.v10+json',\r\n        'content-type': 'application/json; charset=utf-8',\r\n      },\r\n    };\r\n\r\n    if (payload) {\r\n      header['body'] = JSON.stringify(payload);\r\n    }\r\n\r\n    return fetch(endpointUrl, header)\r\n      .then(this.validateResponse)\r\n      .then(this.parseResponseToJson)\r\n      .then(data => {\r\n        return data;\r\n      })\r\n      .catch(error => {\r\n        this._logger.log('Request succeeded with JSON response', error);\r\n        return error;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Parse response data to json object\r\n   * @param {*} response - Request response\r\n   * @return {JSON} json data\r\n   */\r\n  async parseResponseToJson(response) {\r\n    if (!response.ok) {\r\n      return response;\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  /**\r\n   * Response validation\r\n   * @param {*} response\r\n   * @return {Promise} promise result\r\n   */\r\n  validateResponse(response) {\r\n    if (response.ok) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n}\r\n\r\nexport default HttpClient;\r\n"],"sourceRoot":""}
var IS_HOME = $("body").hasClass("home"),
  IS_BRAND = $("body").hasClass("brand"),
  IS_SEARCH = $("body").hasClass("search-result"),
  IS_PRODUCT = $("body").hasClass("product"),
  IS_CATALOG = $("body").hasClass("catalog"),
  IS_ACCOUNT = $("body").hasClass("account"),
  IS_CATEGORY = $("body").hasClass("category"),
  IS_DEPARTMENT = $("body").hasClass("department"),
  IS_EMPTYSEARCH = $("body").hasClass("empty-search"),
  IS_INSTITUCIONAL = $("body").hasClass("institucional"),
  IS_SYSTEM = $("body").hasClass("sistema"),
  MOBILEBREAK = 767,
  TABLETBREAK = 1025;

if (window.location.search.indexOf("utm_source=") <= 0)
  $("body").removeClass("utm");

var commonFunctions = {
  init: function () {
    commonFloatHelper.init();
    footerNewsLetter.init();
    commonFunctions.topBarSlick();
    commonFunctions.returnToTop();
    commonFunctions.newsletter();
    commonFunctions.headerUser();
    commonFunctions.menuMob();
    commonFunctions.footerToggle();
    commonFunctions.isLogged();
    if (!$("body").hasClass("login")) {
      commonFunctions.headerFix();
    }
    commonFunctions.artist();
    commonFunctions.search();
    commonFunctions.setAvailableBodyClass();
    commonFunctions.checkAvailableClass();
    catalog.flagDiscount();
  },

  checkLogin: () => {
    commonFunctions.validateUserLogin().done((response) => {
      setUserStatusLogin(response.IsUserDefined);

      function setUserStatusLogin(userStatus) {
        localStorage.setItem("user_login", userStatus);
        commonFloatHelper._validateStatusButton();
        institutional.userVerifyInstitutionalPage();
      }
    });
  },

  validateUserLogin: function () {
    return $.ajax({
      url: "/no-cache/profileSystem/getProfile",
      type: "GET",
      headers: {
        Accept: "application/vnd.vtex.ds.v10+json",
        "Content-Type": "application/json",
      },
    });
  },

  search: function () {
    var time;
    render();

    function render() {
      $(".custom-search").append(
        $("<div>", {
          id: "toggle-search",
          class: "toggle-search",
        }).append(
          $("<i>", {
            class: "ico-lupa-header",
          })
        ),
        $("<div>", {
          class: "moda custom-search__modal",
          id: "custom-search__modal",
        }).append(
          $("<div>", {
            class: "overlay",
          }),
          $("<div>", {
            class: "content outher-wrapper",
          }).append(
            $("<button>", {
              class: "modal-close",
            }).append(
              $("<i>", {
                class: "ico-close-w",
              })
            ),
            $("<form>", {
              id: "custom-search__form",
              class: "custom-search__form",
            }).append(
              $("<input>", {
                type: "text",
                autofocus: "autofocus",
                id: "custom-search__input",
                class: "custom-search__input",
                autocomplete: "off",
                placeholder: "O que você procura?",
              })
            ),
            $("<div>", {
              class: "custom-search__result",
            })
          )
        )
      );

      handleChange();
      controllers();
      submitForm();
    }

    function renderResult(res, term) {
      res = res.itemsReturned;

      if (res.length > 0) {
        renderText(res);
        renderThumb(res, 5);
      } else {
        emptysearch(term);
      }
    }

    function renderText(res) {
      $(".custom-search__result").append(
        $("<div>", {
          class: "custom-search__result-text-wrapper",
        }).append(
          $("<ul>").append(
            res.map(function (item, i) {
              if (item.thumb == "") {
                return $("<li>").append(
                  $("<a>", {
                    href: item.href,
                    text: item.name,
                  })
                );
              }
            })
          )
        )
      );
    }

    function renderThumb(res, limit) {
      var i = 1;
      if (limit == null) {
        limit = 6;
      }

      $(".custom-search__result").append(
        $("<div>", {
          class: "custom-search__result-thumb-wrapper",
        }).append($("<ul>"))
      );

      res.map(function (item) {
        if (item.thumb != "") {
          var src = item.thumbUrl.replace("25-25", "255-255");
          if (i <= limit) {
            i++;
            $(".custom-search__result-thumb-wrapper ul").append(
              $("<li>").append(
                $("<a>", {
                  href: item.href,
                }).append(
                  $("<img>", {
                    src: src,
                  }),
                  $("<p>", {
                    text: item.name,
                  })
                )
              )
            );
          }
        }
      });
    }

    function emptysearch(term) {
      $(".custom-search__result").append(
        $("<div>", {
          class: "custom-search__emaptysearch-wrapper",
        }).append(
          $("<h3>", {
            class: "custom-search__emaptysearch-title",
            text: "Não encontramos produtos para",
          }),
          $("<h2>", {
            class: "custom-search__emaptysearch-term",
            text: "“" + term + "”",
          })
        )
      );
    }

    function clearSearch() {
      $(".custom-search__result").html("");
    }

    function handleChange() {
      $(".custom-search__input").on("keyup", function () {
        var term = $(this).val();
        clearTimeout(time);
        time = setTimeout(function () {
          if (term.length > 0) {
            $.get(
              "/buscaautocomplete/?maxRows=15&productNameContains=" +
                term +
                "&suggestionsStack="
            ).done(function (data) {
              clearSearch();
              renderResult(data, term);
            });
          } else {
            clearSearch();
          }
        }, 500);
      });
    }

    function submitForm() {
      $(".custom-search__form").on("submit", function (e) {
        e.preventDefault();
        let searchInputVal;

        if (window.innerWidth < TABLETBREAK) {
          searchInputVal = $(".custom-search__input").first().val();
        } else {
          searchInputVal = $(".custom-search__input").last().val();
        }

        window.location.href = "/busca/?ft=" + searchInputVal;
      });
    }

    function controllers() {
      $(".toggle-search").on("click", function () {
        $(".custom-search__modal").fadeToggle();
        $("body").toggleClass("custom-search__modal--open");
      });
      $(".modal-close").on("click", function () {
        $(".custom-search__modal").fadeToggle();
        $("body").toggleClass("custom-search__modal--open");
      });
    }
  },

  //troca a classe do body quando o produto está fora de estoque

  setAvailableBodyClass: function () {
    function checkVisibleNotify(available) {
      if (available)
        $(document.body)
          .addClass("qd-product-available")
          .removeClass("qd-product-unavailable");
      else
        $(document.body)
          .addClass("qd-product-unavailable")
          .removeClass("qd-product-available");
    }

    $(document).on("skuSelected.vtex", function (e, id, sku) {
      checkVisibleNotify(sku.available);
    });

    try {
      checkVisibleNotify(skuJson.available);
    } catch (error) {
      console.log("erro na troca de classe do body");
    }
  },

  //caso produto não esteja em estoque tira o botão qtd e esconde o comprar
  //tem um time out para dar tempo do js trocar a classe

  checkAvailableClass: function () {
    $(".chooseProduct").on("click", function () {
      setTimeout(function () {
        if ($(document.body).hasClass("qd-product-unavailable")) {
          $(".buyProduct .qty").css("display", "none");
          $(".buyProduct .buyProductButton").attr("disabled", true);
        } else {
          $(".buyProduct .qty").css("display", "block");
        }
      }, 2000);
    });
  },

  setCookie: function (cname, cvalue, exdays) {
    var d = new Date();
    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);
    var expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  },

  getCookie: function (cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(";");
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) == " ") {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length, c.length);
      }
    }
    return "";
  },

  formToJson: function ($form) {
    var obj = {};
    $form.find("input").each(function () {
      var value;
      var name;
      if ($(this).attr("type") == "checkbox" && $(this).is(":checkd")) {
        value = $(this).val();
        name = $(this).attr("name");
      }
      if ($(this).attr("type") == "option" && $(this).is(":checkd")) {
        value = $(this).val();
        name = $(this).attr("name");
      }
      if (
        $(this).attr("type") != "option" &&
        $(this).attr("type") != "checkbox"
      ) {
        value = $(this).val();
        name = $(this).attr("name");
      }
      obj[name] = value;
    });
    $form.find("select").each(function () {
      var value = $(this).find("option:selected").val();
      var name = $(this).attr("name");
      obj[name] = value;
    });
    $form.find("textarea").each(function () {
      var value = $(this).val();
      var name = $(this).attr("name");
      obj[name] = value;
    });
    return obj;
  },

  getMasterData: function (url) {
    return $.ajax({
      headers: {
        Accept: "application/vnd.vtex.ds.v10+json",
        "Content-Type": "application/json",
        "REST-Range": "resources=0-1",
      },
      type: "GET",
      url: url,
    });
  },

  saveMasterDate: function (entidade, data, sucessoMsg, form, Alert, callBack) {
    if (sucessoMsg == null || sucessoMsg == undefined) {
      sucessoMsg = "Dados salvos com sucesso!";
    }

    $.ajax({
      url: "/api/dataentities/" + entidade + "/documents/",
      dataType: "json",
      type: "PATCH",
      crossDomain: true,
      data: JSON.stringify(data),
      headers: {
        Accept: "application/vnd.vtex.ds.v10+json",
        "Content-Type": "application/json; charset=utf-8",
      },
      success: function (dataJson) {
        if (callBack) {
          callBack(dataJson);
        }
        if (Alert) {
          alert(sucessoMsg);
        }
        if (form.size()) {
          form.each(function () {
            this.reset();
          });
        }
      },
    });
  },

  headerFix: function () {
    var previousScroll = 0;
    var headerHeight = $(".pageheader").height();
    $(window).scroll(function () {
      var currentScroll = $(this).scrollTop();

      if (currentScroll == 0) {
        $("header.header").removeClass("floatHeader");
        $(".QDh__topBar").removeClass("floatTopBar");
        $("#returnTop").fadeOut();
      } else {
        $("header.header").addClass("floatHeader");
        $(".QDh__topBar").addClass("floatTopBar");
        $("#returnTop").fadeIn();
      }
      previousScroll = currentScroll;
    });
  },

  isLogged: function () {
    $(".outher-container__select ul, .menu__user-item ul").remove();
    vtexjs.checkout.getOrderForm().done(function (data) {
      var userName;
      if (data.loggedIn) {
        if (data.clientProfileData.firstName != null) {
          userName = data.clientProfileData.firstName;
        } else {
          userName = data.clientProfileData.email.split("@")[0];
        }

        $(".menu__user-item > a ").text("Olá, " + userName);

        $(".outher-container__select, .menu__user-item").append(
          $("<ul>").append(
            $("<li>").append(
              $("<a>", {
                text: "Olá, " + userName,
                href: "/account",
              })
            ),
            $("<li>").append(
              $("<a>", {
                text: "Minha conta",
                href: "/_secure/account/#/profile",
              })
            ),
            $("<li>").append(
              $("<a>", {
                text: "Meus pedidos",
                href: "/_secure/account/#/orders",
              })
            ),
            $("<li>").append(
              $("<a>", {
                text: "Sair",
                href: "/logout",
              })
            )
          )
        );
      } else {
        $(".outher-container__select, .menu__user-item").append(
          $("<ul>").append(
            $("<li>").append(
              $("<a>", {
                text: "Login / cadastrar",
                href: "/login",
              })
            ),
            $("<li>").append(
              $("<a>", {
                text: "Meus pedidos",
                href: "/_secure/account/#/orders",
              })
            ),
            $("<li>").append(
              $("<a>", {
                text: "Minha Conta",
                href: "/_secure/account/#/profile",
              })
            )
          )
        );
      }

      $(".menu__user-item > a ").attr("href", "/login");
    });
  },

  menuMob: function () {
    if (window.innerWidth < TABLETBREAK) {
      $(".has-sub").find(".menu__sub-menu").slideToggle();
    }

    $(".toggle-sub").on("click", function () {
      $(this).parents(".has-sub").find(".menu__sub-menu").slideToggle();
    });

    $("#mobili-menu-toggle .menu-toggle, .menu-close").on("click", function () {
      $(".header .menu").toggleClass("menu--active");
    });

    if (window.innerWidth <= TABLETBREAK) {
      $(".menu .menu__toggle").click(function () {
        $(this).siblings("ul.menu__wrap").toggleClass("is--hide");
        $(".menu__title .menu__wrap--ico")
          .add($(".menu__title .menu__wrap--close"))
          .removeClass("is--hide");
        $(".menu__title .title")
          .add($(".menu__title .menu__wrap--close"))
          .removeClass("is--hide");
        $(this).fadeIn("slow");
      });
      $(".menu .menu__title .menu__wrap--close").on("click", function () {
        $(".header .menu").toggleClass("menu--active");
        $(".menu__item ul.menu__wrap").addClass("is--hide");
        $(this).addClass("is--hide");
      });
      $(".menu .menu__title .menu__wrap--ico").on("click", function () {
        $(this).parents().find("ul.menu__wrap").addClass("is--hide");
        $(this).addClass("is--hide");
      });
      $(".menu .menu__title .title").on("click", function () {
        $(this).parents().find("ul.menu__wrap").addClass("is--hide");
        $(this).addClass("is--hide");
      });
    }
  },

  topBarSlick: function () {
    var wrapper = $(".QDh__tb-text > ul");
    $(wrapper).slick({
      infinite: true,
      slidesToShow: 1,
      slidesToScroll: 1,
      infinite: true,
      autoplay: true,
      autoplaySpeed: 8000,
      speed: 2000,
      arrows: false,
      dots: false,
    });
  },

  artist: function () {
    if (
      $(".nossos-artistas__slider").size() > 0 &&
      window.innerWidth >= MOBILEBREAK
    ) {
      $.get("/api/dataentities/AR/search?_fields=thumb,link,id,name")
        .done(function (data) {
          $.each(data, function (i, item) {
            var imgSrc =
              "https://universalmusic.vtexcrm.com.br/DynamicForm/GetFile?dataEntityInstanceId=AR-" +
              item.id +
              "&fileName=" +
              item.thumb;
            $(".nossos-artistas__slider").append(
              $("<div>", {
                class: "box-banner",
              }).append(
                $("<a>", {
                  href: item.link,
                }).append(
                  $("<img>", {
                    src: imgSrc,
                  })
                )
              )
            );
          });
        })
        .then(function () {
          $(".nossos-artistas__slider").slick({
            infinite: true,
            slidesToShow: 5,
            slidesToScroll: 5,
            infinite: true,
            speed: 500,
            arrows: true,
            dots: false,
          });

          $(".nossos-artistas__slick-arrows button").on("click", function () {
            if ($(this).hasClass("slick-prev")) {
              $(".nossos-artistas .slick-initialized .slick-prev").click();
            } else {
              $(".nossos-artistas .slick-initialized .slick-next").click();
            }
          });
        });
    }
  },

  headerUser: function () {
    $(".user-toggle").on("click", function () {
      $(".outher-container__select").toggleClass(
        "outher-container__select--active"
      );
    });
  },

  footerToggle: function () {
    if (window.innerWidth < TABLETBREAK) {
      $(".col ul").slideUp();
      let elemento = $(".toggle-accordeon");
      elemento.on("click", function () {
        elemento.parents(".col").find("ul").slideUp();
        let elementoThis = $(this);

        if (elementoThis.hasClass("open")) {
          elementoThis.parents(".col").find("ul").slideUp();
          elementoThis.removeClass("open");
        } else {
          elementoThis.parents(".col").find("ul").slideDown();
          elementoThis.addClass("open");
          elementoThis.parents(".col").find("ul").removeClass("open");
        }
      });
    }
  },

  emailValidator: function (email) {
    var re =
      /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/gi;
    return re.test(email);
  },

  newsletter: function () {
    var previousScroll = 0;
    var endScroll = 3500;
    $(window).load(function () {
      if (commonFunctions.getCookie("new") != "ok") {
        $(window).scroll(function () {
          var currentScroll = $(this).scrollTop();

          if (currentScroll == 0 || currentScroll >= endScroll) {
            $(".fix-new").removeClass("active");
          } else {
            $(".fix-new").addClass("active");
          }
          previousScroll = currentScroll;
        });
      }
    });

    $(".close-modal-footer").on("click", function () {
      $(".fix-new").removeClass("active");
      $(".fix-new").hide();
    });

    //NEWS FLUTUANTE
    $(".fix-new__form form").on("submit", function (e) {
      e.preventDefault();
      var fields = commonFunctions.formToJson($(this));
      if (commonFunctions.emailValidator(fields.email)) {
        commonFunctions
          .getMasterData(
            "/api/dataentities/NL/search?_fields=id,email&_where=email=" +
              fields.email
          )
          .done(function (data) {
            if (data.length == 0) {
              commonFunctions.saveMasterDate(
                "NL",
                fields,
                null,
                $(this),
                false,
                function () {
                  $(".fix-new--initial").removeClass("active");
                  $(".fix-new--success").addClass("active");
                  commonFunctions.setCookie("new", "ok", 30);
                }
              );
            } else {
              alert("E-mail já cadastrado!");
            }
          });
      } else {
        alert("E-mail inválido!");
      }
    });

    // NEWS FOOTER
    $(".row-news__form form").on("submit", function (e) {
      e.preventDefault();
      var fields = commonFunctions.formToJson($(this));
      if (commonFunctions.emailValidator(fields.email)) {
        commonFunctions
          .getMasterData(
            "/api/dataentities/NL/search?_fields=id,email&_where=email=" +
              fields.email
          )
          .done(function (data) {
            if (data.length == 0) {
              commonFunctions.saveMasterDate(
                "NL",
                fields,
                null,
                $(this),
                false,
                function () {
                  $("#modal-newsletter").fadeIn();
                }
              );
            } else {
              alert("E-mail já cadastrado!");
            }
          });
      } else {
        alert("E-mail inválido!");
      }
    });

    $("#modal-newsletter .close").on("click", function () {
      $("#modal-newsletter").fadeOut().removeClass("active");
    });
  },

  returnToTop: function () {
    $("body").append(
      $("<button>", {
        id: "returnTop",
      }).append(
        $("<i>", {
          class: "ico-arrow",
        })
      )
    );

    $("#returnTop").fadeOut();

    $("#returnTop").on("click", function () {
      $("html,body").animate(
        {
          scrollTop: 0,
        },
        700
      );
    });
  },

  subMenuBanner: function () {
    $("#sub-menu-banner .sub-banner").each(function () {
      var banner = $(this).find("a");
      var target = ".menu " + $(this).attr("target") + " .menu__banner";
      var targetHasBanner = ".menu " + $(this).attr("target");

      if ($(this).find(".box-banner").length > 0) {
        $(targetHasBanner).addClass("has-banner");
        $(target).append(banner);
      }
    });
  },
};

var commonFloatHelper = {
  init: () => {
    commonFloatHelper.clickOpenCloseChat();
    commonFloatHelper.selectService();
    commonFloatHelper.loginBtn();
    commonFunctions.checkLogin();
    commonFloatHelper.toogleFaq();
  },

  toogleFaq: () => {
    $(".js--faq .float-accordeon-start").on(
      "click",
      function ({ currentTarget }) {
        $this = $(currentTarget);
        allFaqAccordeon = $(".js--faq .float-accordeon");
        if (!$this.parents(".float-accordeon").hasClass("active")) {
          allFaqAccordeon
            .removeClass("active")
            .find(".float-accordeon-content")
            .slideUp();

          $this
            .parents(".float-accordeon")
            .addClass("active")
            .find(".float-accordeon-content")
            .slideDown();
        } else {
          allFaqAccordeon
            .removeClass("active")
            .find(".float-accordeon-content")
            .slideUp();
        }
      }
    );
  },

  _validateStatusButton: () => {
    const $myOrdersBtn = $(".js--order-btn");
    const $exchangeBtn = $(".js--exchange-btn");
    const $loginBtn = $(".js--login-btn");
    const $loginMessage = $(
      `.float-helper__selected[data-service='status-do-pedido'] .float-helper__selected-sub`
    );

    if (localStorage.getItem("user_login") === "true") {
      $myOrdersBtn.add($exchangeBtn).removeClass("is--hide");
      $loginBtn.add($loginMessage).addClass("is--hide");
    } else {
      $myOrdersBtn.add($exchangeBtn).addClass("is--hide");
      $loginBtn.add($loginMessage).removeClass("is--hide");
    }
  },

  loginBtn: () => {
    $(".js--login-btn").on("click", ({ currentTarget }) => {
      const $this = $(currentTarget);
      const serviceType = $this
        .parents(".float-helper__selected")
        .attr("data-service");
      if (serviceType === "status-do-pedido") {
        return vtexid.start({
          returnUrl: "/_secure/account/#/orders",
        });
      }
      if (serviceType === "troca-e-devolucao") {
        return vtexid.start({
          returnUrl: "/Institucional/trocas-e-devolucoes",
        });
      }
    });
  },

  selectService: () => {
    $(".js--select-service").on("click", ({ currentTarget }) => {
      const $this = $(currentTarget);
      const $selectedService = $(".js--service-selected");

      function thirdContentShow($el) {
        const attr = $el.attr("data-service");
        $selectedService.find(`.float-helper__selected`).addClass("is--hide");
        $selectedService
          .find(`.float-helper__selected[data-service=${attr}]`)
          .removeClass("is--hide");
      }

      function thirdContentHideAnimation() {
        $selectedService.find(".float-helper__selected").hide();
        $selectedService.hide();
      }

      function thirdContentShowAnimation() {
        $selectedService.show();
        $selectedService.find(".float-helper__selected").show(600);
      }

      function secondContentAnimation() {
        $(".float-helper__services-flex").removeClass("service-selected");
        $this.addClass("service-selected");
        $(".services__second").hide(500);
      }

      thirdContentHideAnimation();
      thirdContentShow($this);
      secondContentAnimation();
      thirdContentShowAnimation();
    });
  },

  clickOpenCloseChat: () => {
    const $closeButton = $(".js--float-close");
    const $chatButton = $(".js--float-helper__chat");
    const $servicesMenu = $(".float-helper__services");
    const $secondHelperContent = $(".float-helper__content-second");

    $chatButton.on("click", ({ currentTarget }) => {
      $secondHelperContent.removeClass("is--hide");
      const $this = $(currentTarget);

      $this.hide(500);
      $servicesMenu.add($closeButton).addClass("is--active");
    });

    $closeButton.on("click", ({ currentTarget }) => {
      const $this = $(currentTarget);
      const $selectedService = $(".js--service-selected");

      $selectedService.hide();

      $chatButton.show(500);
      $(".services__second").show(500);
      $(".float-helper__selected")
        .animate(
          {
            width: "toggle",
          },
          300
        )
        .hide(100);
      $this.add($servicesMenu).removeClass("is--active");

      $(".float-helper__services-flex").removeClass("service-selected");

      $secondHelperContent.addClass("is--hide");

      $selectedService.find(".float-helper__selected").addClass("is--hide");
    });
  },
};
var footerNewsLetter = {
  init: () => {
    if (".js--newsletter".length) {
      footerNewsLetter.newsletterClk();
      /*
       * validate input name on change
       */
      footerNewsLetter._validateInputText();
    }
  },

  newsletterClk: () => {
    $(".js--newsletter").on("click", ({ currentTarget }) => {
      if ($('.row-news input[type="email"]').val() !== "") {
        const email = $('.row-news input[type="email"]').val();
        if (commonFunctions.emailValidator(email)) {
          commonModals.universalModal($(currentTarget));
          footerNewsLetter.newsletterSign(email);
        } else {
          alert("e-mail invalido</br>Por favor, digite novamente");
        }
      } else {
        alert("é necessário digitar o e-mail");
      }
    });
  },

  newsletterSign: (email) => {
    $(".js--sign-newsletter").on("click", (e) => {
      e.stopImmediatePropagation();
      const inputValidate = $(".newsletter .input__group");
      const $checkedGenre = $('.newsletter ul input[type="checkbox"]:checked');
      const $checkedInput = $('.newsletter input[type="checkbox"]:checked');

      /*
       *validate input name on sign
       */
      inputValidate.each((index, element) => {
        if (!$(element).hasClass("valid")) {
          $(element).addClass("invalid");
        }
      });
      /* 
                !User did not select a musical genre and did not fill in a name
            */
      if (!$checkedGenre.length && inputValidate.hasClass("invalid")) {
        alert(
          "Por favor, selecione um gênero musical e insira seu nome completo"
        );
      }

      /*
               !User did not select a musical genre
            */
      if (!$checkedGenre.length && !inputValidate.hasClass("invalid")) {
        alert("Por favor, selecione um gênero musical");
      }

      /*
               !User did not fill in a name
            */
      if ($checkedGenre.length && inputValidate.hasClass("invalid")) {
        alert("Por favor, insira seu nome completo");
      }

      if ($checkedGenre.length && !inputValidate.hasClass("invalid")) {
        musicalGenresArray = [];

        $checkedInput.each(function () {
          musicalGenresArray.push($(this).attr("id"));
        });
        const name = $(".newsletter #full_name").val();

        let infosSelected = {
          EMAIL: email,
          NOME: name,
        };

        musicalGenresArray.map((id) => {
          infosSelected[id] = true;
        });

        footerNewsLetter._sendNewsletterMD(infosSelected);
      }
    });
  },

  _sendNewsletterMD: function (infosSelected) {
    $.ajax({
      headers: {
        "Content-Type": "application/json",
      },
      url: "/api/dataentities/BF/documents",
      type: "POST",
      data: JSON.stringify(infosSelected),
    }).done((response) => {
      $(".js--overlay").removeClass("is--active");
      $(".js--universal-modal.newsletter").removeClass("is--active");
      alert("Dados enviados com sucesso!");
      $('.newsletter input[type="checkbox"]').prop("checked", false);
    });
  },

  _validateInputText: () => {
    $(".js__validate--text").on("change", ({ currentTarget }) => {
      const $this = $(currentTarget);

      if ($this.val() != "" && $this.val().length) {
        $this.closest(".input__group").addClass("valid").removeClass("invalid");
      } else {
        $this.closest(".input__group").addClass("invalid").removeClass("valid");
      }
    });
  },
};
var commonModals = {
  universalModal: ($el) => {
    /* 
            ! the button or the element and the modal that will be opened, will need to have a common title, example : 'newsletter'
            ! the modal will need to have a class with this name 'js--universal-modal'
        */
    const modalClass = ".js--universal-modal";
    const $overlay = $(".js--overlay");
    if ($el.attr("title")) {
      const $title = $el.attr("title");
      const $openModal = $(`${modalClass}[title="${$title}"]`);

      if ($openModal && $openModal.length) {
        $openModal.add($overlay).addClass("is--active");
        $("body").addClass("has--no-scroll");
      }
    }

    $(".js--universal-modal-close").on("click", ({ currentTarget }) => {
      const modalToClose = $(currentTarget).parents(modalClass);
      modalToClose.add($overlay).removeClass("is--active");
      $("body").removeClass("has--no-scroll");
    });

    $overlay.on("click", () => {
      $(modalClass).add($overlay).removeClass("is--active");
      $("body").removeClass("has--no-scroll");
    });
  },
};

var isMobile = {
  Android: function () {
    return navigator.userAgent.match(/Android/i);
  },
  BlackBerry: function () {
    return navigator.userAgent.match(/BlackBerry/i);
  },
  iOS: function () {
    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
  },
  Opera: function () {
    return navigator.userAgent.match(/Opera Mini/i);
  },
  Windows: function () {
    return (
      navigator.userAgent.match(/IEMobile/i) ||
      navigator.userAgent.match(/WPDesktop/i)
    );
  },
  any: function () {
    return (
      isMobile.Android() ||
      isMobile.BlackBerry() ||
      isMobile.iOS() ||
      isMobile.Opera() ||
      isMobile.Windows()
    );
  },
};

var home = {
  slides: function () {
    $(".mainGallery").slick({
      infinite: true,
      slidesToShow: 1,
      slidesToScroll: 1,
      infinite: true,
      speed: 500,
      arrows: false,
      dots: true,
      autoplay: true,
      autoplaySpeed: 5000,
    });

    $(".slide-shelf .shelf ul").slick({
      infinite: true,
      slidesToShow: 4,
      slidesToScroll: 4,
      infinite: true,
      speed: 500,
      arrows: true,
      dots: true,
      autoplay: true,
      autoplaySpeed: 5000,
      pauseOnHover: true,
      prevArrow:
        '<button type="button" class="slick-prev"><i class="new-ico-arrow"></i></button>',
      nextArrow:
        '<button type="button" class="slick-next"><i class="new-ico-arrow"></i></button>',
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 3.3,
            slidesToScroll: 3,
            arrows: false,
          },
        },
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 2.3,
            slidesToScroll: 2,
            arrows: false,
          },
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 1.3,
            slidesToScroll: 1,
            arrows: false,
          },
        },
      ],
    });
  },

  instagramFeed: function () {
    var feed = new Instafeed({
      get: "user",
      target: "instagram__content",
      userId: 206369527,
      accessToken: "206369527.1677ed0.177dae4ef3aa4dd4aaca6aea00507a9b",
      link: "true",
      clientId: "206369527",
      limit: "4",
      resolution: "low_resolution",
      template:
        '<a href="{{link}}" class="instagramImage" target="_blank"><img src="{{image}}" /></a>',
    });
    window.onload = function () {
      feed.run();
    };
  },

  tabs: function () {
    $(".albuns__tabs .albuns__tab").on("click", function (e) {
      e.preventDefault();
      $(".albuns__tabs .albuns__tab").removeClass("albuns__tab--selected");
      $(".albun__colection").removeClass("albun__colection--active");

      $(this).addClass("albuns__tab--selected");

      var target = $(this).attr("href");
      $(target).addClass("albun__colection--active");

      $(target).find(".slick-initialized").slick("unslick");

      $(target)
        .find("ul")
        .slick({
          infinite: true,
          slidesToShow: 4,
          slidesToScroll: 4,
          infinite: true,
          speed: 500,
          arrows: true,
          dots: true,
          autoplay: true,
          autoplaySpeed: 5000,
          pauseOnHover: true,
          prevArrow:
            '<button type="button" class="slick-prev"><i class="new-ico-arrow"></i></button>',
          nextArrow:
            '<button type="button" class="slick-next"><i class="new-ico-arrow"></i></button>',
          responsive: [
            {
              breakpoint: 1024,
              settings: {
                slidesToShow: 3.3,
                slidesToScroll: 3,
                arrows: false,
              },
            },
            {
              breakpoint: 600,
              settings: {
                slidesToShow: 2.3,
                slidesToScroll: 2,
                arrows: false,
              },
            },
            {
              breakpoint: 480,
              settings: {
                slidesToShow: 1.3,
                slidesToScroll: 1,
                arrows: false,
              },
            },
          ],
        });
    });
  },

  init: function () {
    home.slides();
    home.tabs();
    home.instagramFeed();
  },
};

var prodsDetails = new Array();

var catalog = {
  smartResearch: function () {
    $(".navTopbar .filterOptions input[type='checkbox']").vtexSmartResearch({
      ajaxCallback: function () {
        $("li.helperComplement").remove();
      },
      shelfCallback: function () {
        $("li.helperComplement").remove();
        $(".filterOptions .modal").removeClass("open");
        catalog.flagDiscount();
      },
    });
  },
  slideFilter: function () {
    if (window.innerWidth <= MOBILEBREAK) {
      $(".search-multiple-navigator fieldset > div").slideToggle();

      $(".search-multiple-navigator fieldset > h5").on("click", function () {
        $(this).parents("fieldset").find("> div").slideToggle();
      });
    } else {
      $(".filterOptions .modal .content").wrap('<div class="container"></div>');
      $(".filterOptions .modal .content").slideToggle();
    }
    $("#toggleFilther, .close-filter, .filterOptions .modal .overlay").on(
      "click",
      function () {
        if (window.innerWidth > MOBILEBREAK) {
          $(".filterOptions .modal .content").slideToggle();
          $(".filterOptions .modal").toggleClass("open");
          $("#toggleFilther").toggleClass("active");
        } else {
          $(".filterOptions .modal").toggleClass("active");
        }
      }
    );
  },
  clearFilter: function () {
    $("button.clear-filter").on("click", function (e) {
      e.preventDefault();
      $(
        '[class^="refino"] label.sr_selected, [class*=" refino"] label.sr_selected'
      ).each(function () {
        $(this).trigger("click");
      });
    });
  },
  ordenation: function () {
    const locationForCollectionPage = decodeURIComponent(partialSearchUrl);
    window.history.pushState({}, document.title, `${window.location.pathname}`);

    if (window.location.search.indexOf("O=") >= 0) {
      var selected = window.location.search.split("O=")[1].split("&")[0];
      $("#orderBy option[value=" + selected + "]").prop("selected", true);
    }

    $("#orderBy").on("change", function (e) {
      e.preventDefault();
      var order = $(this).find("option:selected").val();
      const myOrdenationParm = locationForCollectionPage.split("?")[1];

      if (locationForCollectionPage.indexOf("fq=H:") !== -1) {
        if (locationForCollectionPage.indexOf("O=") === -1) {
          window.location.href = `${window.location.pathname}?${myOrdenationParm}O=${order}`;
        } else {
          const parms = myOrdenationParm.split("&");
          const collectionParm = `${parms[0]}&${parms[1]}`;

          window.location.href = `${window.location.pathname}?${collectionParm}&O=${order}`;
        }
      } else {
        if (window.location.search != "" || window.location.search.length > 0) {
          var search = window.location.search.split("&O")[0];
          window.location.href =
            window.location.pathname + search + "&O=" + order;
        } else {
          window.location.href = window.location.pathname + "?PS=12&O=" + order;
        }
      }
    });
  },
  grid: function () {
    $(".buttons-grid > button").on("click", function () {
      $("body").removeClass("grid-1");
      $("body").removeClass("grid-2");
      $("body").removeClass("grid-3");

      $(".buttons-grid > button").removeClass("active");

      $(this).addClass("active");
      $("body").addClass($(this).attr("data-grid"));
    });
  },
  departementNavigator: function () {
    if ($("ul.productClusterSearchableIds").size() > 0) {
      var templateCluster = "";

      templateCluster += '<div class="acordeon-wrap">';
      templateCluster +=
        '<div class="acordeon-start"><h6> Coleções <span><i class="ico-arrow"></i> </span></h6></div>';
      templateCluster += '<div class="acordeon-toggle">';
      templateCluster += "</div>";
      templateCluster += "</div>";

      $(".search-multiple-navigator").prepend(
        $("<div>", {
          class: "wrap-cluster",
        })
      );
      $(".search-multiple-navigator > .wrap-cluster").append(templateCluster);
      $(".search-multiple-navigator > .wrap-cluster .acordeon-toggle").append(
        $(".productClusterSearchableIds")
      );
    }

    var currentDep = vtxctx.departmentyId;
    var currentCat = vtxctx.categoryId;
    var template = "";
    var level = window.location.pathname.split("/").length - 1;

    template += '<fieldset class="acordeon-wrap category-filter">';
    template += "<h5> Categorias </h5>";
    template += '<div class="acordeon-toggle" data-initial="open">';
    template += "<ul>";

    $.get("/api/catalog_system/pub/category/tree/5").done(function (data) {
      $.each(data, function (i, category) {
        if (currentDep == category.id) {
          $.each(category.children, function (j, subCategory) {
            if (currentCat == subCategory.id) {
              template +=
                '<li><a href="' +
                subCategory.url +
                '">' +
                subCategory.name +
                "</a></li>";
              $.each(subCategory.children, function (k, subCategory) {
                template +=
                  '<li><a href="' +
                  subCategory.url +
                  '">' +
                  subCategory.name +
                  "</a></li>";
              });
            } else {
              if (level == 1) {
                template +=
                  '<li><a href="' +
                  subCategory.url +
                  '">' +
                  subCategory.name +
                  "</a></li>";
              }
            }
          });
        }
      });

      template += "</ul>";
      template += "</div>";
      template += "</fieldset>";

      $(".search-multiple-navigator").prepend(template);

      if ($(".search-multiple-navigator > .wrap-category ul li").size() == 0) {
        $(".search-multiple-navigator > .wrap-category").hide();
      }

      catalog.slideFilter();
    });
  },
  catalgoHelper: function () {
    if (IS_SEARCH) {
      var brandName =
        window.location.href.indexOf("fq=B:") >= 0
          ? $(".bread-crumb .last").text()
          : null;
      var num = $(".resultado-busca-numero .value").eq(0).text();
      var keyWord =
        $(".resultado-busca-termo .value").eq(0).text() ||
        brandName ||
        $("meta[name=Abstract]").attr("content");
      var template =
        "<span>Você buscou por:</span> <strong>“" +
        keyWord +
        "”</strong><small>Encontramos <b>" +
        num +
        "</b> resultados</small>";
      $("h1.sectionTitle").html(template);
    } else {
      $("h1.sectionTitle").text($(".titulo-sessao").text());
    }

    if ($(".text-seo .wrap-seo-text").text().length != 0) {
      $(".text-seo").fadeIn();
    }
  },
  flagDiscount: function () {
    $(".flagDiscount").each(function () {
      var descpct = $(this).text().replace(",", ".");
      descpct = descpct.replace(" %", "");
      descpct = parseFloat(descpct);
      descpct = descpct.toFixed(0);
      if (descpct == "0" || descpct == 0) {
        $(this).hide();
      } else {
        $(this).show().addClass("active");
        $(this).html("<span><strong>" + descpct + "%</strong> off</span>");
      }
    });
  },
  utm: function () {
    if (window.location.search.indexOf("utm_source") >= 1) {
      $(".normalize-menu").css("visibility", "hidden");
    }
  },
  init: function () {
    catalog.clearFilter();
    catalog.departementNavigator();
    catalog.catalgoHelper();
    catalog.smartResearch();
    catalog.grid();
    catalog.ordenation();
    catalog.utm();

    $(window).load(function () {
      $(".refino-marca.filtro_marca h5").text("Artistas");
    });
  },
};

var product = {
  slide: function () {
    $(".slide-shelf .shelf ul").slick({
      infinite: true,
      slidesToShow: 4,
      slidesToScroll: 4,
      infinite: true,
      speed: 500,
      arrows: true,
      dots: true,
      prevArrow:
        '<button type="button" class="slick-prev"><i class="ico-Seta"></i></button>',
      nextArrow:
        '<button type="button" class="slick-next"><i class="ico-Seta"></i></button>',
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 3,
            slidesToScroll: 3,
            infinite: true,
            dots: true,
          },
        },
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 2,
            slidesToScroll: 2,
          },
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1,
          },
        },
      ],
    });

    if (window.innerWidth <= TABLETBREAK) {
      $(".thumbs img").each(function () {
        var _this = $(this);
        var src = _this.attr("src").replace("-55-55", "-400-400");
        _this.attr("src", src);
      });
    }

    if ($("ul.thumb li").size() > 1) {
      $("#show").addClass("middle");
    }
    $(document).on("skuSelected.vtex", function (a, b, c) {
      if (window.innerWidth <= TABLETBREAK) {
        $(".thumbs img").each(function () {
          var _this = $(this);
          var src = _this.attr("src").replace("-55-55", "-400-400");
          _this.attr("src", src);
        });
      }

      if ($("ul.thumb li").size() > 1) {
        $("#show").addClass("middle");
      }
    });
  },
  artista: function (artista) {
    var target = artista || encodeURI($("#brandName a").text());
    $(".section-artist .content").html("");

    $.get(
      '/api/dataentities/AR/search?_fields=thumb,imagem,link,name,texto,id&_where=name="' +
        target +
        '"'
    ).done(function (data) {
      if (data.length > 0) {
        var data = data[0];
        var imgSrc =
          "https://universalmusic.vtexcrm.com.br/DynamicForm/GetFile?dataEntityInstanceId=AR-" +
          data.id +
          "&fileName=" +
          data.imagem;

        $(".section-artist .content").append(
          $("<div>", {
            class: "col-text",
          }).append(
            $("<h3>", {
              class: "secondary-title",
              text: data.name,
            })
          ),
          $("<div>", {
            class: "col-banner",
          }).append(
            $("<img>", {
              src: imgSrc,
            })
          )
        );

        $(".section-artist .content .col-text").append(data.texto);
      }
    });
  },
  installmentToggle: function () {
    var maxInstallmentText = $(".valor-dividido").text();
    if ($(".other-payment-method-ul li").length > 1) {
      $(".other-payment-method").prepend(
        '<div class="installmentToggle"><span>Ver parcelamento</span></div>'
      );
    } else {
      $(".other-payment-method").prepend(
        '<div class="installmentToggle"></div>'
      );
    }

    $(".other-payment-method-ul li").each(function (i) {
      if (i != 0) {
        var parcela = $(this).find("span:first-child").text();
        var valor = $(this).find("strong").text();
        var juros =
          $(this).find("span.other-payment-method-intereset-no").size() == 1
            ? " Sem juros "
            : " Com juros ";
        var template =
          '<div class="left">' +
          parcela.replace("de", "") +
          juros +
          '</div><div class="right">' +
          valor +
          "</div>";

        $(this).html(template);
      }
    });

    $(".other-payment-method-ul").prepend(
      "<li><span>PARCELA</span><span>VALOR</span>"
    );

    $(".other-payment-method-ul").wrap(
      '<div class="modal" id="payment-method-modal"></div>'
    );
    $(".other-payment-method-ul").wrap('<div class="content"></div>');
    $("#payment-method-modal .content").prepend(
      '<button class="close-modal"><i class="ico-close"></i></button><h3>Confira o pacelamento</h3>'
    );
    $("#payment-method-modal").prepend('<div class="overlay"></div>');

    var price =
      $("li.vista").size() > 0 ? $("li.vista").text().split("R$ ")[1] : "";

    var templateAvista =
      '<div class="left">à vista</div><div class="right">R$ ' +
      price +
      "</div>";
    $("li.vista").html(templateAvista);

    $(
      "#payment-method-modal .overlay, #payment-method-modal .close-modal, .installmentToggle span"
    ).on("click", function () {
      $("#payment-method-modal").fadeToggle();
    });
  },
  qtl: function () {
    $(".prodQtd span").on("click", function () {
      var _this = $(this);
      var urlTest = [
        "javascript",
        ":",
        "alert('Por favor, selecione o modelo desejado.');",
      ].join("");
      var url = $(".buy-button-ref").attr("href");
      var qtl = parseInt($(".prodQtd .qtdValue").val());
      var max;
      var SKUS = skuJson.skus;
      var SKU =
        urlTest != url
          ? parseInt(url.split("sku=")[1].split("&")[0])
          : (max = SKUS[0].availablequantity);

      if (SKU != undefined) {
        SKUS.map(function (item, i) {
          if (SKU == item.dimensions.Cor || SKU == item.dimensions.Tamanho) {
            max = item.availablequantity;
          }
        });

        if (_this.hasClass("removeItem")) {
          if (qtl <= 0) {
            qtl = 0;
          } else {
            qtl--;
          }
        } else {
          if (qtl >= max) {
            qtl = max;
            alert("Quantidade máxima disponível atingida.");
          } else {
            qtl++;
          }
        }
        $(".prodQtd .qtdValue").val(qtl);
      }
    });
  },
  espec: function () {
    $(".accordeon-container h3").on("click", function () {
      $(this)
        .parents(".accordeon-container")
        .find(".accordeon-content")
        .slideToggle();
    });

    if ($("#div_Conteudo_DetalhesDoProduto_pnlDimensoes").html() != "") {
      $(".specification.accordeon-container").show();
    }
  },
  flagDiscount: function () {
    for (var x = 0; x < skuJson.skus.length; x++) {
      if (skuJson.skus[x].available) {
        var bestPrice = skuJson.skus[x].bestPrice;
        var listPrice = skuJson.skus[x].listPrice;

        if ($(".valor-de ").length > 0) {
          var discountPercentage = ((listPrice - bestPrice) / listPrice) * 100;
          discountPercentage = parseFloat(discountPercentage);
          discountPercentage = discountPercentage.toFixed(0);

          $("#show #include").prepend(
            '<div class="flagDiscount active" style="display: block;"><span><strong>' +
              discountPercentage +
              "% </strong>off</span></div>"
          );
        }
        x = 100000;
      }
    }
  },
  wrapSipping: function () {
    $("#calculoFrete fieldset").prepend(
      $("<div>", {
        class: "wrap-shipping",
      })
    );
    $("#calculoFrete fieldset .wrap-shipping").append(
      $("#calculoFrete .prefixo, #calculoFrete .frete-calcular")
    );
  },
  producUnavailable: function () {
    if (!skuJson.available) {
      $(".buyProduct").addClass("unavailable");
      $(".notifymetitle").text("AVISE-ME: ESTE PRODUTO ESTÁ INDISPONÍVEL");
      $(".notifyme-button-ok").val("AVISE-ME");
      $(".group_0 label").eq(0).click();
    }
  },
  superZoom: function (width, height) {
    if ($(".image-zoom").length <= 0) {
      var srcImgZoom = $("#image-main")
        .attr("src")
        .replace("550-550", "1000-1000");
      $("#image-main").wrap('<a href="' + srcImgZoom + '" class="image-zoom">');
    }

    window.LoadZoom = function (pi) {
      if ($(".image-zoom").length <= 0) return false;
      var optionsZoom = {
        zoomWidth: width,
        zoomHeight: height,
        preloadText: "",
      };
      $(".image-zoom").jqzoom(optionsZoom);
    };
    LoadZoom(0);
  },

  init: function () {
    setTimeout(function () {
      product.superZoom(300, 300);
    }, 1500);

    product.producUnavailable();
    product.slide();
    product.espec();
    product.qtl();
    product.installmentToggle();
    product.artista();
    product.flagDiscount();
    ShippingValue();
    setTimeout(function () {
      product.wrapSipping();
      $("#btnFreteSimulacao").val("CALCULAR");
    }, 900);

    $(".product-infos .produto-code").append(
      $("#brandName .brandName").clone()
    );

    if ($(".productComplementary ul").length > 0) {
      $(".productComplementary").show();
    }
  },
};

const productData = {
  init: function () {
    productData.productSearch();
  },

  productSearch: function () {
    const prodId = skuJson.productId;

    $.ajax({
      headers: {
        "Content-Type": "application/json",
      },
      url: `/api/io/product-search?fq=productId:${prodId}`,
      type: "GET",
    }).done((response) => {
      productData.relatedMovie(response);
    });
  },

  relatedMovie: function (response) {
    const { items } = response[0];

    const urlVideo = items[0].Videos[0];

    productData._insertMovie(urlVideo);
  },

  _insertMovie: function (urlVideo) {
    let content, $element;

    if (urlVideo) {
      if (!isMobile.any()) {
        content = `<div class="related-movie is--hide"><iframe width="100%" height="315" src="${urlVideo}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>`;
        $element = $("#include");

        $element.append(content);
        productData._insertThumbs();
      } else {
        content = `<li class="related-movie"><iframe width="100%" height="300px" src="${urlVideo}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></li>`;
        $element = $(".thumbs");

        $element.append(content);
        productData._MobileThumbsSlick();
      }
    } else {
      isMobile.any() && productData._MobileThumbsSlick();
    }
  },

  _insertThumbs: function () {
    const playIcon = `<li class="movie"><i class="fa fa-play" ></i></li>`;

    $(".thumbs").append(playIcon);
    productData._ThumbMovieButton();
  },

  _MobileThumbsSlick: function () {
    $(".thumbs").slick({
      infinite: true,
      slidesToShow: 1,
      slidesToScroll: 1,
      infinite: true,
      speed: 500,
      arrows: false,
      dots: true,
    });
  },

  _ThumbMovieButton: function () {
    $(".thumbs li").on("click", ({ currentTarget }) => {
      $(currentTarget).hasClass("movie")
        ? $("#include #image").addClass("is--hide") &&
          $("#include .related-movie").removeClass("is--hide")
        : $("#include #image").removeClass("is--hide") &&
          $("#include .related-movie").addClass("is--hide");
    });
  },
};

const productBuyTogether = {
  init: () => {
    productBuyTogether.getProductBuyTogetherInfos();
    productBuyTogether.buyTogetherButtonClick();
  },

  formatStringToNumb: (str) => {
    return parseInt(str);
  },

  getProductBuyTogetherInfos: async () => {
    if ($(".comprar-junto > a").length) {
      const btnparams = [];
      $(".comprar-junto > a").each((index, el) => {
        btnparams.push($(el).attr("href"));
      });

      const allBtnParms = btnparams.map((item) => {
        return item.split("?")[1].split("&");
      });

      const qty = [],
        skuID = [],
        seller = [],
        price = [],
        sc = [];

      allBtnParms.forEach((paramfilter) => {
        paramfilter.filter((parm) => {
          parm.indexOf("sku") !== -1 &&
            skuID.push(
              productBuyTogether.formatStringToNumb(parm.replace("sku=", ""))
            );

          parm.indexOf("qty") !== -1 &&
            qty.push(
              productBuyTogether.formatStringToNumb(parm.replace("qty=", ""))
            );

          parm.indexOf("seller") !== -1 &&
            seller.push(parm.replace("seller=", ""));

          parm.indexOf("price") !== -1 &&
            price.push(
              productBuyTogether.formatStringToNumb(parm.replace("price=", ""))
            );

          parm.indexOf("sc") !== -1 &&
            sc.push(
              productBuyTogether.formatStringToNumb(parm.replace("sc=", ""))
            );
        });
      });

      const {
        skus = {
          sku,
        },
      } = skuJson;

      const buyTogetherSkus = skuID.filter((id) => {
        return id !== skus[0].sku;
      });

      const buyTogether = [];

      buyTogetherSkus.forEach(async (sku) => {
        const buyTogetherInfos = await productBuyTogether.getProdInfos(sku);
        productBuyTogether.setBuyTogetherProducts(buyTogetherInfos);
        buyTogether.push(buyTogetherInfos[1]);
      });
      productBuyTogether.createBuyTogetherElement(buyTogether);
      productBuyTogether.getItem(skus, 1, 1);
    }

    return;
  },

  getItem: (skuID, qty, seller) => {
    const items = skuID.map((skuid, index) => ({
      id: productBuyTogether.formatStringToNumb(skuid),
      quantity: productBuyTogether.formatStringToNumb(qty[index]),
      seller: seller[index],
    }));
  },

  getProdInfos: async (skuId) => {
    if (skuId) {
      try {
        const prodBySKu = await productRequests.productBySku(skuId);

        const { ProductId } = prodBySKu;

        const prodInfo = await vtexRequests.productVariations(ProductId);
        return [prodBySKu, prodInfo];
      } catch (error) {
        window.console.log(error);
      }
    }

    return;
  },

  createBuyTogetherElement: async (buyTogetherItems) => {
    if ($("#divCompreJunto table").length) {
      const productPage = {
        bestPrice: skuJson.skus[0].bestPriceFormated,
        productId: skuJson.productId,
        skuname: skuJson.skus[0].skuname,
        image: skuJson.skus[0].image,
        installments: skuJson.skus[0].installments,
        installmentsValue: (skuJson.skus[0].installmentsValue / 100)
          .toString()
          .replace(".", ","),
        installmentsValueAttr: skuJson.skus[0].installmentsValue / 100,
        bestPriceAttr: skuJson.skus[0].bestPrice / 100,
      };
      const component = `
                <section class="custom-buy-together">
                    
                    <div class="wrapper">
                        <div class="content">
                            <div class='buy-together-titles'>
                                <h3 class='first-title'>VOCÊ ESTÁ VENDO</h3>
                                <h3 class='buy-together-title'>COMPRE JUNTO</h3>
                            </div>
                            <div class="buy-together-component">
                                <div class="buy-together-component__page-product">
                                    <a href="${window.location.href}">
                                        <div class="background-image">
                                            <div>
                                                <img src="${productPage.image}"/ >
                                            </div>
                                        </div>
                                        <div class="product__block">
                                            <p class="product__name">${productPage.skuname}</p>
                                            <p class="product__best-price" data-value='${productPage.bestPriceAttr}'>Por ${productPage.bestPrice}</p>
                                            <p class="product__installment" data-value='${productPage.installmentsValueAttr}'>Ou ${productPage.installments}x de ${productPage.installmentsValue}</p>
                                        </div>
                                    </a>
                                </div>
                                <div class="plus">
                                    <div>
                                        <i class="plus-icon" />
                                    </div>
                                </div>
                                <div class='buy-together-products-component js--buy-together-slick'>
                                
                                </div>
                                <div class="equal">
                                    <div>
                                        <i class="equal-icon" />
                                    </div>
                                </div>
                                <div class="discount__block">
                                    <div class="buy-together-component__discount">
                                        <div class="background-button">
                                            <div class="block">
                                                <div class='info'> 
                                                    
                                                </div>
                                                <button class="custom-buy-together__button js--buy-together-btn">ADICIONAR A SACOLA<button/>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>`;
      $(".productBuyTogether").after(component);

      const allProductsInfo = [];
      setTimeout(() => {
        buyTogetherItems.forEach((item) => {
          if (!allProductsInfo.find((b) => b.productId === item.productId)) {
            allProductsInfo.push(item);
          }
        });
      }, 1500);
      productPage.item = allProductsInfo;
      productBuyTogether.getByHtmlButtonInfos(productPage);
      productBuyTogether.buyTogetherSlick();
    }
  },

  setBuyTogetherProducts: async (allProducts) => {
    const verifyProductIdExist = $(
      `.buy-together-component__buy-together-products#${allProducts[1].productId}`
    ).length;

    if (verifyProductIdExist) {
      return;
    }
    const otherProducts = {
      bestPrice: allProducts[1].skus[0].bestPriceFormated,
      skuId: allProducts[0].Id,
      productId: allProducts[1].productId,
      skuname: allProducts[1].name,
      image: allProducts[0].Images[0].ImageUrl,
      installments: allProducts[1].skus[0].installments,
      installmentsValue: (allProducts[1].skus[0].installmentsValue / 100)
        .toString()
        .replace(".", ","),
      installmentsValueAttr: allProducts[1].skus[0].installmentsValue / 100,
      bestPriceAttr: allProducts[1].skus[0].bestPrice / 100,
      url: allProducts[0].DetailUrl,
      similars: allProducts[1].skus,
    };
    const hasProductSimilar = otherProducts.similars.length > 1;

    function setSkuSelector(similars) {
      return similars.map((item, index) => {
        const check = index === 0 ? "checked" : "";
        const skuSelectorComponent = `
                    <input 
                        class='selectVariations'
                        type='radio'
                        name='skuSelector${otherProducts.productId}' 
                        value='${item.sku}'
                        id=${item.sku}
                        ${check}
                        >
                        <label for='${item.sku}'>
                            ${item.dimensions.Tamanho}
                        </label>
                    </input>
                        
                    `;
        return skuSelectorComponent;
      });
    }
    const otherProductcomponent = `
            <div class='buy-together-component__buy-together-products' id='${
              otherProducts.productId
            }'>
                    <input data-value='${
                      otherProducts.bestPriceAttr
                    }' class='check-selected' type='checkbox' checked/>
                    <div class="background-image">
                        <div>
                            <a href="${otherProducts.url}">
                                <img src="${otherProducts.image}"/ >
                             </a>
                        </div>
                    </div>
                    <div class="product__block">
                        <div class='skuSelectorContent'>
                            ${
                              hasProductSimilar
                                ? setSkuSelector(otherProducts.similars).join(
                                    ""
                                  )
                                : `<input type='radio' class='selectVariations' checked value=${otherProducts.skuId} style='display:none;'/>`
                            }
                        </div>
                        <p class="product__name">${otherProducts.skuname}</p>
                        <p class="product__best-price" data-value='${
                          otherProducts.bestPriceAttr
                        }'>Por ${otherProducts.bestPrice}</p>
                        <p class="product__installment" data-value='${
                          otherProducts.installmentsValueAttr
                        }'>Ou ${otherProducts.installments}x de ${
      otherProducts.installmentsValue
    }</p>
                    </div>
            </div>`;

    $(".buy-together-products-component").append(otherProductcomponent);
  },

  buyTogetherSlick() {
    setTimeout(() => {
      $(".js--buy-together-slick").slick({
        infinite: false,
        slidesToShow: 3,
        slidesToScroll: 3,
        variableWidth: true,
        responsive: [
          {
            breakpoint: 1441,
            settings: {
              slidesToShow: 2,
              slidesToScroll: 2,
              infinite: false,
              variableWidth: false,
            },
          },
          {
            breakpoint: 1025,
            settings: {
              slidesToShow: 3,
              slidesToScroll: 3,
              infinite: false,
              variableWidth: false,
            },
          },
          {
            breakpoint: 630,
            settings: {
              slidesToShow: 2,
              slidesToScroll: 2,
              infinite: false,
              variableWidth: false,
            },
          },
          {
            breakpoint: 430,
            settings: {
              slidesToShow: 1,
              slidesToScroll: 1,
              infinite: false,
              variableWidth: false,
            },
          },
        ],
      });
    }, 1500);
  },

  getByHtmlButtonInfos(productPage) {
    setTimeout(() => {
      allSkus = [];
      productPage.item.forEach((item) => {
        allSkus.push(item.skus[0]);
      });

      totalValue = allSkus.reduce((ac, cur) => {
        return ac + cur.bestPrice;
      }, productPage.bestPriceAttr * 100);

      totalPriceFormated = productBuyTogether.formatedToMonetaryValue(
        totalValue / 100
      );
      parcelPrice = productBuyTogether.formatedToMonetaryValue(
        totalValue / 100 / productPage.installments
      );

      buttonInfosElement = `
                <div class='info-content'>
                    <p class="info__parcel" data-value='${
                      productPage.installments
                    }'>Por apenas ${
        productPage.installments
      }x de ${parcelPrice}</p>
                    <p class="info__price" data-value=${
                      totalValue / 100
                    }> Por ${totalPriceFormated}</p>
                </div>`;

      $(".buy-together-component__discount .background-button .info").append(
        buttonInfosElement
      );

      $(".check-selected").each((i, el) => {
        $(el).on("click", function () {
          let productValue = Number($(el).attr("data-value"));
          let totalValue = Number(
            $(".buy-together-component__discount .info__price").attr(
              "data-value"
            )
          );
          let parcelValue = Number(
            $(".buy-together-component__discount .info__parcel").attr(
              "data-value"
            )
          );
          let subTotal = 0;
          if ($(el).prop("checked")) {
            subTotal = totalValue + productValue;
          } else {
            subTotal = totalValue - productValue;
          }

          $(".buy-together-component__discount .info__price").text(
            `Por ${productBuyTogether.formatedToMonetaryValue(subTotal)}`
          );
          $(".buy-together-component__discount .info__parcel").text(
            `Por apenas ${parcelValue}x de ${productBuyTogether.formatedToMonetaryValue(
              subTotal / parcelValue
            )}`
          );
          $(".buy-together-component__discount .info__price").attr(
            "data-value",
            subTotal
          );
        });
      });
    }, 2500);
  },
  formatedToMonetaryValue: (value) => {
    const valueFomated = `R$ ${value.toFixed(2).toString().replace(".", ",")}`;
    return valueFomated;
  },

  buyTogetherButtonClick: () => {
    $(".js--buy-together-btn").on("click", () => {
      const skuAddToCart = [];

      if (skuJson.skus.length > 1) {
        if ($(".item-dimension-Tamanho input:checked").length) {
          const dimensionValue = $(this).attr("value");
          const sku = skuJson.skus.find(
            (sku) => sku.dimensions.Tamanho === dimensionValue
          );
          sku
            ? skuAddToCart.push({
                id: sku.sku,
                quantity: 1,
                seller: "1",
              })
            : null;
        } else {
          return alert("Por favor, selecione o modelo desejado.");
        }
      } else {
        skuAddToCart.push({
          id: skuJson.skus[0].sku,
          quantity: 1,
          seller: "1",
        });
      }
      $(".buy-together-component__buy-together-products").each((i, el) => {
        if ($(el).children(".check-selected").prop("checked")) {
          $(el)
            .find("input.selectVariations")
            .each((i, inputEl) => {
              if ($(inputEl).prop("checked")) {
                const itemSku = $(inputEl).attr("value");
                skuAddToCart.push({
                  id: itemSku,
                  quantity: 1,
                  seller: "1",
                });
              }
            });
        }
      });
      vtexRequests.addBuyTogetherToCart(skuAddToCart);
      helper.fillCart();

      setTimeout(function () {
        helper.openCart();
      }, 2000);

      setTimeout(function () {
        helper.closeCart();
      }, 7000);
    });
  },
};

const productRequests = {
  productBySku: (sku) => {
    return $.ajax({
      url: `/api/io/product-info?sku=${sku}`,
      method: "GET",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
    });
  },
};

const vtexRequests = {
  productVariations: (ProductId) => {
    return vtexjs.catalog.getProductWithVariations(ProductId);
  },

  addBuyTogetherToCart: (items) => {
    return vtexjs.checkout.addToCart(items, null, 1);
  },
};

var institutional = {
  init: function () {
    $(".institutionalLinksList li").each(function () {
      if (window.location.pathname == $(this).find("a").attr("href")) {
        $(this).addClass("active");
      }
    });

    institutional.navigation();
    institutional.FL();
    institutional.accordeon();
    institutional.showExchangeAndReturn();

    if ($("body").hasClass("trocas-e-devolucoes")) {
      institutional._validateInputText();
      institutional._validatePhoneInput();
      institutional._validateCpfInput();
      institutional._validateEmailInput();
      institutional._sendExchangeAndReturn();
      institutional._modalInfoAboutDanfe();
    }
  },

  userVerifyInstitutionalPage: function () {
    const validateUser = localStorage.getItem("user_login");

    if (validateUser === "false") {
      institutional.ExchangeAndReturnNavButton();
    }
  },

  ExchangeAndReturnNavButton: function () {
    $(".js--login-institutional a").addClass("is--hide");
    $(".js--login-institutional span").removeClass("is--hide");

    $(".js--login-institutional").on("click", () => {
      return vtexid.start({
        returnUrl: "/Institucional/trocas-e-devolucoes",
      });
    });
  },

  _modalInfoAboutDanfe: function () {
    $(".js--danfe-question").on("click", ({ currentTarget }) => {
      $this = $(currentTarget);
      commonModals.universalModal($this);
    });
  },

  showExchangeAndReturn: function () {
    const validateUser = localStorage.getItem("user_login");
    if (validateUser === "true") {
      $(
        '.institutionalLinksList li[data-service="trocas-e-devolucoes"]'
      ).removeClass("is--hide");
    } else {
      $(
        '.institutionalLinksList li[data-service="trocas-e-devolucoes"]'
      ).addClass("is--hide");
    }
  },

  accordeon: function () {
    $(".accordeon-content").slideToggle();
    $(".accordeon-start").on("click", function () {
      $(".accordeon").removeClass("active");
      $(this)
        .parents(".accordeon")
        .addClass("active")
        .find(".accordeon-content")
        .slideToggle();
    });
  },

  navigation: function () {
    $(".pageContent ul li a ").on("click", function (e) {
      e.preventDefault();
      var select = $(this).attr("href");
      var top = $('h2[name="' + select + '"]').offset().top;
      $("html,body").animate(
        {
          scrollTop: top - 90,
        },
        700
      );
    });
  },

  FL: function () {
    if ($("body").hasClass("fale-conosco")) {
      $("#fale-conosco").on("submit", function (e) {
        e.preventDefault();
        var fields = commonFunctions.formToJson($(this));
        if (commonFunctions.emailValidator(fields.email)) {
          commonFunctions.saveMasterDate(
            "FL",
            fields,
            null,
            $(this),
            true,
            null
          );
        } else {
          alert("E-mail inválido !");
        }
      });
    }
  },

  _validateInputText: () => {
    $(".js__validate--text").on("change", ({ currentTarget }) => {
      const $this = $(currentTarget);

      if ($this.val() != "" && $this.val().length) {
        $this.closest(".input__group").addClass("valid").removeClass("invalid");
      } else {
        $this.closest(".input__group").addClass("invalid").removeClass("valid");
      }
    });
  },

  _validatePhoneInput: () => {
    $(".js__validate--phone").on("change", ({ currentTarget }) => {
      const $this = $(currentTarget);
      const phoneLength = $this
        .val()
        .replace(/[()-]/g, "")
        .replace(" ", "").length;

      if (phoneLength === 11) {
        $this.closest(".input__group").addClass("valid").removeClass("invalid");
        $this.mask("(00) 00000-0000");
      } else if (phoneLength === 10) {
        $this.closest(".input__group").addClass("valid").removeClass("invalid");
        $this.mask("(00) 0000-0000");
      } else {
        $this.closest(".input__group").addClass("invalid").removeClass("valid");
      }
    });
  },

  _validateCpfInput() {
    $("#cpf").on("focus", ({ currentTarget }) => {
      $(currentTarget).mask("000.000.000-00");
    });

    $("#cpf").on("change", ({ currentTarget }) => {
      const $this = $(currentTarget);
      if (verifyCpf($this.val())) {
        $this.closest(".input__group").addClass("valid").removeClass("invalid");
        $this.mask("000.000.000-00");
      } else {
        $this.closest(".input__group").removeClass("valid").addClass("invalid");
      }
    });

    const verifyCpf = (cpf) => {
      cpf = cpf.replace(/\D/g, "");
      if (cpf.toString().length != 11 || /^(\d)\1{10}$/.test(cpf)) return false;
      let result = true;
      [9, 10].forEach(function (j) {
        let soma = 0,
          r;
        cpf
          .split(/(?=)/)
          .splice(0, j)
          .forEach(function (e, i) {
            soma += parseInt(e) * (j + 2 - (i + 1));
          });
        r = soma % 11;
        r = r < 2 ? 0 : 11 - r;
        if (r != cpf.substring(j, j + 1)) result = false;
      });
      return result;
    };
  },

  _validateEmailInput() {
    $(".js__validate--email").on("change", ({ currentTarget }) => {
      const $this = $(currentTarget);
      let re =
        /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

      if (re.test(String($this.val()).toLowerCase())) {
        $this.closest(".input__group").addClass("valid").removeClass("invalid");
      } else {
        $this.closest(".input__group").addClass("invalid").removeClass("valid");
      }
    });
  },

  _sendExchangeAndReturn() {
    $(".js--send-exchange").on("click", (e) => {
      e.preventDefault();
      const inputValidate = $(".exchange .input__group");

      if (localStorage.getItem("user_login") === "true") {
        inputValidate.each((index, element) => {
          if (!$(element).hasClass("valid")) {
            $(element).addClass("invalid");
          }
        });
        if (!$(".exchange .input__group").hasClass("invalid")) {
          institutional._showLoadAnimation();

          const clientName = $(".exchange #full_name").val();
          const phone = $(".exchange #phone").val();
          const cpf = $(".exchange #cpf").val();
          const email = $(".exchange #email").val();
          const orderId = $(".exchange #order-id").val();
          const danfeId = $(".exchange #danfe_id").val();
          const enchangeMessage = $(".exchange #message").val();

          institutional._setMessageUserInfos(orderId, danfeId);
          institutional._setExchangeDate();

          const myExchangeData = {
            name: clientName,
            phone: phone,
            cpf: cpf,
            email: email,
            orderID: orderId,
            danfeID: danfeId,
            message: enchangeMessage,
          };

          institutional._sendToExchangeMD(myExchangeData);
        }
      } else {
        return vtexid.start({
          returnUrl: "/Institucional/trocas-e-devolucoes",
        });
      }
    });
  },
  _setMessageUserInfos(orderId, danfeId) {
    const $danfeIdElement = $(".exchange-send-messsage .neId");
    const $orderIdElement = $(".exchange-send-messsage .orderId");

    if ($orderIdElement) {
      $orderIdElement.text(orderId);
    }

    if ($danfeIdElement && $danfeIdElement.length) {
      $danfeIdElement.each((ndex, element) => {
        $(element).text(danfeId);
      });
    }
  },
  _setExchangeDate() {
    const currentdate = new Date(),
      day = currentdate.getDate(),
      month = currentdate.getMonth(),
      year = currentdate.getFullYear(),
      hour = currentdate.getHours(),
      min = currentdate.getMinutes();

    const formatedMonth = institutional._formatMonth(month);
    const formatedHour = institutional._formatHour(hour);
    const orderExchangeDateHour = `${day}/${formatedMonth}/${year} ás ${formatedHour}:${min}`;
    const enchangeEmitionDate = `${day}/${formatedMonth}/${year}`;
    const enchangeExpireDate = institutional._ExpireDate(day, month, year);

    $(".exchange-send-messsage .startDate").text(enchangeEmitionDate);
    $(".exchange-send-messsage .endDate").text(enchangeExpireDate);
    $(".exchange-send-messsage .startDateHour").text(orderExchangeDateHour);
  },

  _ExpireDate(day, month, year) {
    if (month === 11) {
      const expireMonth = 01,
        expireYear = parseInt(year) + 1;
      return `${day}/${expireMonth}/${expireYear}`, expireYear;
    } else {
      return `${day}/${institutional._formatMonth(
        parseInt(month + 1)
      )}/${year}`;
    }
  },

  _formatHour(hour) {
    if (hour < 10) {
      return `0${hour}`;
    } else {
      return hour;
    }
  },

  _formatMonth(month) {
    var months = [
      "01",
      "02",
      "03",
      "04",
      "05",
      "06",
      "07",
      "08",
      "09",
      "10",
      "11",
      "12",
    ];

    return months[month];
  },

  _sendToExchangeMD(myExchangeData) {
    $.ajax({
      headers: {
        "Content-Type": "application/json",
      },
      url: "/api/dataentities/TD/documents",
      type: "POST",
      data: JSON.stringify(myExchangeData),
    }).done((response) => {
      institutional._showSendMessage();
      institutional._hideLoadAnimation();
    });
  },

  _showSendMessage() {
    $(".exchange").addClass("is--hide");
    $(".exchange-send-messsage").removeClass("is--hide");
  },

  _showLoadAnimation() {
    $(".js--animation-load-hide").addClass("is--hide");
    $(".js--animation-load-show").removeClass("is--hide");
  },

  _hideLoadAnimation() {
    $(".js--animation-load-hide").removeClass("is--hide");
    $(".js--animation-load-show").addClass("is--hide");
  },
};

var emptysearch = {
  keyWord: function () {
    $(".box-emptySearch p span").text($("meta[name=Abstract]").attr("content"));
  },
  slide: function () {
    $(".slide-shelf .shelf ul").slick({
      infinite: true,
      slidesToShow: 4,
      slidesToScroll: 4,
      infinite: true,
      speed: 500,
      arrows: true,
      dots: true,
      prevArrow:
        '<button type="button" class="slick-prev"><i class="ico-Seta"></i></button>',
      nextArrow:
        '<button type="button" class="slick-next"><i class="ico-Seta"></i></button>',
      responsive: [
        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 3,
            slidesToScroll: 3,
            infinite: true,
            dots: true,
          },
        },
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 2,
            slidesToScroll: 2,
          },
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1,
          },
        },
      ],
    });
  },
  init: function () {
    emptysearch.slide();
    emptysearch.keyWord();
  },
};

var searchResult = {
  init: function () {},
};

var brandArtist = {
  checkImgOnline: function (file, callBack) {
    var ajax = new XMLHttpRequest();

    ajax.open("GET", file, true);
    ajax.send();

    ajax.onreadystatechange = function () {
      if (ajax.readyState == 4) {
        var jpg = ajax.responseText;

        if (ajax.status === 200) {
          console.log("A imagem " + file + " existe");
          callBack();
        } else {
          console.log("A imagem " + file + " NAO existe");
        }
      }
    };
  },
  replaceLogo: function () {
    if (window.location.search.indexOf("utm_source=") >= 0) {
      var logoSrc = window.location.search.split("utm_source=")[1];
      logoSrc =
        logoSrc.indexOf("&") > 0
          ? window.location.search.split("utm_source=")[1].split("&")[0]
          : logoSrc;
      logoSrc =
        decodeURIComponent(logoSrc) +
        "-logo.png?v=" +
        Math.random() * (+10000 - +0) +
        +0;
      logoSrc = "/arquivos/" + logoSrc.replace(/[ ]/g, "-").toLowerCase();

      this.checkImgOnline(logoSrc, function () {
        $(".no-menu a img").attr("src", logoSrc);
        setTimeout(function () {
          $(".no-menu").css("visibility", "visible");
        }, 500);
      });
    }

    $(".pager.bottom").after(
      $("<div>", {
        class: "section-artist",
      }).append(
        $("<div>", {
          class: "content",
        })
      )
    );
  },

  artista: function () {
    $(".section-artist .content").html("");

    $.get(
      '/api/dataentities/AR/search?_fields=thumb,imagem,link,name,texto,id&_where=link="' +
        window.location.pathname +
        '"'
    ).done(function (data) {
      if (data.length > 0) {
        var data = data[0];
        var imgSrc =
          "https://universalmusic.vtexcrm.com.br/DynamicForm/GetFile?dataEntityInstanceId=AR-" +
          data.id +
          "&fileName=" +
          data.imagem;

        $(".section-artist .content").append(
          $("<div>", {
            class: "col-text",
          }).append(
            $("<h3>", {
              class: "secondary-title",
              text: data.name,
            })
          ),
          $("<div>", {
            class: "col-banner",
          }).append(
            $("<img>", {
              src: imgSrc,
            })
          )
        );

        $(".section-artist .content .col-text").append(data.texto);
      }
    });
  },
  init: function () {
    this.replaceLogo();
    this.artista();
  },
};

var flags = {
  init: function () {
    flags.checkedFlags();
    flags.shelfCheckedFlags();
    flags.checkFlagsAfterClick();
  },
  checkedFlags: function () {
    if ($(".mainProductImage p.flag").length < 2) {
      $(".mainProductImage p.flag").addClass("flag-top");
    }
  },
  shelfCheckedFlags: function () {
    $(".productList li").each(function () {
      if ($(this).find("p.flag.importado").length) {
        $(this).find("div.flagDiscount").addClass("tree-flags");
      }
    });
  },
  checkFlagsAfterClick: function () {
    $(".btn-load-more").on("click", function () {
      setTimeout(() => {
        flags.shelfCheckedFlags();
      }, 2000);
    });
  },
};

var account = {
  init: function () {
    this.cancelBtn();
    this.insertExchangeAndReturn();
  },

  cancelBtn: function () {
    $("body").on("click", ".myo-cancel-btn", function (e) {
      e.preventDefault();
      alert(
        "Para solicitar o cancelamento do seu pedido entre em contato com nosso SAC através do e-mail contato@umusicstore.com ou pelo telefone (21) 3030-4042"
      );
    });
  },

  insertExchangeAndReturn: function () {
    $('.vtex-account_menu-link[href="#/orders"]').after(
      `<a class="vtex-account_menu-link f6 no-underline db hover-near-black pv5 mv3 pl5 bl bw2 nowrap c-muted-1 b--transparent" href="/Institucional/trocas-e-devolucoes">Trocas e devoluções</a>`
    );
  },
};

var cookies = {
  init: function () {
    this.acceptCookies();
  },
  acceptCookies() {
    if (!localStorage.getItem("acceptedCookies")) {
      $(".container-cookies").removeClass("is--hide");
      $(".js-container-button").on("click", () => {
        localStorage.setItem("acceptedCookies", true);
        $(".container-cookies").addClass("is--hide");
      });
    }
  },
};
$(document).ready(function () {
  $(".helperComplement").remove();
  commonFunctions.init();

  if (IS_CATALOG) {
    catalog.init();
    brandArtist.replaceLogo();
  }

  if (IS_PRODUCT) {
    product.init();
    productData.init();
    productBuyTogether.init();
  }

  if (IS_INSTITUCIONAL) {
    institutional.init();
  }

  if (IS_EMPTYSEARCH) {
    emptysearch.init();
  }

  if (IS_SYSTEM) {
    catalog.slideSistema();
  }

  if (IS_SEARCH) {
  }

  if (IS_ACCOUNT) {
    account.init();
  }

  if (IS_HOME) {
    home.init();
  }

  if (IS_BRAND) {
    brandArtist.artista();
  }

  if ($("body").hasClass("login")) {
    $("body").on("click", ".close.vtexIdUI-close", function () {
      window.location.href = "/";
    });
  }
  tabelaMedidas();
  flags.init();
  cookies.init();
});

function tabelaMedidas() {
  $(".tb_header ul li").click(function () {
    var identificador = $("a", this).data("identifyer");

    $(".tb_header ul li").removeClass("active");
    $(this).addClass("active");

    $(".tb_body").removeClass("tb_visible");
    $("#" + identificador).addClass("tb_visible");
  });

  if (vtxctx.categoryId == 9 || vtxctx.categoryId == 11) {
    $("body.product .main-product .chooseProduct .openTabelaMedidas").show();
  }

  $(".openTabelaMedidas a").click(function () {
    $(".tabela-medidas").css("display", "block");
    $(".maskMedidas").addClass("activa");
  });

  $("p.close").click(function () {
    $(".tabela-medidas").css("display", "none");
    $(".maskMedidas").removeClass("activa");
  });

  $("p.mostraCroqui").click(function () {
    $(this).next("figure").css("display", "block");
  });
}

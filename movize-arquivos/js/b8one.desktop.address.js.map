{"version":3,"sources":["webpack:///./src/js/general/services/b8one.vtexCatalogService.js","webpack:///./src/js/store/desktop/address/index.js","webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/general/components/b8one.customSelect.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/general/services/b8one.httpClient.js"],"names":["VtexCatalogService","origin","this","api","axios","create","baseURL","categoryID","subcategoryID","_from","_to","orderBy","params","URLSearchParams","append","forEach","order","get","console","error","products","initial","end","getProductsByCategories","data","status","productId","Address","setHandledButtonSave","setHandledFormsChange","cartService","CartService","vtexCatalogService","customSelectInstances","isToAddressUnknown","init","eventHandlerBinds","createCustomSelect","setHandledButtonUnknownAddressClick","getAddressData","buttonSave","document","querySelector","buttonNext","addEventListener","e","dispatchEvent","window","initSaveCustomDataEvent","saveData","endSaveCustomDataEvent","classList","toggle","validateForms","location","assign","fieldsWithDefaultData","to_address_name","to_address_number","to_address_county","forms","filter","form","contains","reduce","obj1","addressFields","elements","type","value","id","obj2","checked","hasOwnProperty","key","orderInfoAddressFields","to_address","to_city","to_state","to_address_complement","to_address_zipcode","Object","keys","obj","addressKEY","addressValue","addressType","getAddressFieldsForOrderInfo","address","getAddressForOrderForm","needStorageInput","fromHomeTypeValue","toHomeTypeValue","orderInfoCommonFields","current_step","user_need_storage","home_type","from_home_type","to_home_type","orderInfoFields","orderInfoFieldsArray","entries","arr","includes","orderInfoFieldsForCustomData","Promise","all","updateCheckoutAddress","setMultipleCustomDataFields","log","querySelectorAll","cardSelect","index","selectElement","selectCustom","customSelectList","customSelectSelected","customSelectInstance","CustomSelect","customSelectListItemClassName","customSelectListItemClassNameActive","selectOpenCallback","customSelecItem","close","selectListHeight","offsetHeight","add","style","maxHeight","selectCloseCallback","remove","push","getCurrent","customData","storeItemsChangeCheckbox","customApps","customApp","fields","toLowerCase","getElementById","setCurrentSelectedItem","target","handledFormChange","map","input","required","noValidate","length","checkValidity","buttonUnknownAddress","addressStreetNameElement","addressZipcodeElement","addressCountyElement","addressNumberElement","parentElement","element","toggleAttribute","Ensure","undefined","isUndefined","object","props","getMissingProps","missingProps","prop","selectChangeCallback","isOpen","Element","Function","createSelectList","setListenerForCurrentSelected","options","selectedIndex","textContent","newValue","dataset","prevListItemActive","changeOption","option","listItem","createElement","setAttribute","trim","handleSelectChange","open","body","className","event","eventChange","Event","bubbles","Helper","_logger","Logger","language","navigator","userLanguage","currency","currencyLocale","minimumFractionDigits","elem","selector","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","i","item","parents","parentNode","serialized","field","name","disabled","n","selected","encodeURIComponent","join","Math","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","split","heightViewport","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","mapAccents","a","o","u","c","pattern","replace","RegExp","toFixed","max","Intl","NumberFormat","format","logName","message","errorObj","info","warn","_VTEX_API_ENDPOINT","_httpClient","HttpClient","skuId","productQuantity","sellerId","current","indexFound","items","findIndex","x","parseInt","quantity","endpointUrl","orderFormId","payload","orderItems","seller","patch","skus","vtexjs","checkout","getOrderForm","skusCustomProducts","getCustomProducts","sku","isCustom","skuToIgnore","indexToRemove","indexList","removeMoreProducts","response","productsToAdd","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","addToCart","customProducts","newQuantity","customProductItem","currentCustomProduct","customProductQuantity","values","itemIndex","expectedOrderFormSections","noSplitItem","itemsIndex","updateProducts","postalCode","country","calculateShipping","orderForm","simulateShipping","orderFormSimulated","logisticsInfo","shippingData","sendAttachment","availableAddresses","selectedAddresses","appName","endpoint","put","appFieldName","appFieldValue","delete","_execute","httpVerb","header","method","headers","accept","JSON","stringify","fetch","then","validateResponse","parseResponseToJson","catch","ok","json","resolve","reject","Error","statusText"],"mappings":"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","file":"js/b8one.desktop.address.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class VtexCatalogService {\r\n  /**\r\n   * @param  {String} origin='' Origin example => https://www.example.com\r\n   */\r\n  constructor(origin = '') {\r\n    this.api = axios.create({\r\n      baseURL: `${origin}/api/catalog_system`,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function is a abstraction of VTEX Search API for get and return products by categoryID (Parent) and subcategoryID (child)\r\n   * and return an array of products, also you can order the products with orderBy param, fetch max 50 products per request.\r\n   *\r\n   * For more information go to the follow link:\r\n   * https://documenter.getpostman.com/view/845/vtex-search-api/Hs43?version=latest#e0ec3923-faf7-5049-8634-f6d617ce5f67\r\n   *\r\n   * @param  {String|Number} categoryID\r\n   * @param  {String|Number} subcategoryID\r\n   * @param  {String|Number} _from=0\r\n   * @param  {String|Number} _to=49\r\n   * @param  {Array} orderBy=['OrderByNameASC']\r\n   * @return {Array} Array of products.\r\n   */\r\n  async getProductsByCategories(\r\n    categoryID,\r\n    subcategoryID,\r\n    _from = 0,\r\n    _to = 49,\r\n    orderBy = ['OrderByNameASC']\r\n  ) {\r\n    try {\r\n      const params = new URLSearchParams();\r\n\r\n      params.append('_to', _to);\r\n      params.append('_from', _from);\r\n      params.append('fq', `C:/${categoryID}/${subcategoryID}`);\r\n\r\n      orderBy.forEach(order => params.append('O', order));\r\n\r\n      return await this.api.get('/pub/products/search', { params });\r\n    } catch (error) {\r\n      console.error(\r\n        'Error in VtexCatalogService on method getProductsByCategories',\r\n        error\r\n      );\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * This function get and return all products by categoryID (Parent) and subcategoryID (child)\r\n   * and return an array of products.\r\n   * @param  {String|Number} categoryID\r\n   * @param  {String|Number} subcategoryID\r\n   * @return {Array} Array of products.\r\n   */\r\n  async getAllProductsByCategories(categoryID, subcategoryID) {\r\n    try {\r\n      let products = [];\r\n      let initial = 0;\r\n      let end = 49;\r\n\r\n      while (true) {\r\n        const { data, status } = await this.getProductsByCategories(\r\n          categoryID,\r\n          subcategoryID,\r\n          initial,\r\n          end\r\n        );\r\n\r\n        initial = end + 1;\r\n        end = end * 2 + 1;\r\n\r\n        products = [...products, ...data];\r\n\r\n        if (status === 200) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      return products;\r\n    } catch (error) {\r\n      console.error(\r\n        'Error in VtexCatalogService on method getAllProductsByCategories',\r\n        error\r\n      );\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * This function get and return all categories of the category tree.\r\n   * @return {Array} Array of categories.\r\n   */\r\n  async getAllCategories() {\r\n    try {\r\n      return await this.api.get('/pub/category/tree/1');\r\n    } catch (error) {\r\n      console.error(\r\n        'Error in VtexCatalogService on method getAllCategories',\r\n        error\r\n      );\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * @param  {String|Number} productId The id of the product\r\n   * @return {Object} Product Object with SKUS Variations.\r\n   */\r\n  async getProductVariations(productId) {\r\n    try {\r\n      return await this.api.get(`/pub/products/variations/${productId}`);\r\n    } catch (error) {\r\n      console.error(\r\n        'Error in VtexCatalogService on method getProductVariations',\r\n        error\r\n      );\r\n    }\r\n\r\n    return;\r\n  }\r\n}\r\n","// Components\r\nimport CustomSelect from 'Components/b8one.customSelect.js';\r\n\r\n// Services\r\nimport CartService from 'Services/b8one.cartService.js';\r\nimport VtexCatalogService from 'Services/b8one.vtexCatalogService.js';\r\n\r\nclass Address {\r\n  constructor() {\r\n    this.cartService = new CartService();\r\n    this.vtexCatalogService = new VtexCatalogService();\r\n\r\n    this.customSelectInstances = [];\r\n    this.isToAddressUnknown = false;\r\n\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    this.eventHandlerBinds();\r\n    this.createCustomSelect();\r\n    this.setHandledButtonUnknownAddressClick();\r\n\r\n    await this.getAddressData();\r\n  }\r\n\r\n  eventHandlerBinds = () => {\r\n    this.setHandledButtonSave();\r\n    this.setHandledFormsChange();\r\n  };\r\n\r\n  setHandledButtonSave() {\r\n    const buttonSave = document.querySelector('.js-button-save');\r\n    const buttonNext = document.querySelector('.button--primary');\r\n\r\n    buttonSave.addEventListener('click', async e => {\r\n      document.dispatchEvent(window.initSaveCustomDataEvent);\r\n\r\n      await this.saveData();\r\n\r\n      document.dispatchEvent(window.endSaveCustomDataEvent);\r\n    });\r\n\r\n    buttonNext.addEventListener('click', async e => {\r\n      buttonNext.classList.toggle('js-loading');\r\n      await this.saveData();\r\n\r\n      if (this.validateForms()) {\r\n        buttonNext.classList.toggle('js-loading');\r\n        window.location.assign('/seguro-info');\r\n      }\r\n\r\n      buttonNext.classList.toggle('js-loading');\r\n    });\r\n  }\r\n\r\n  getAddressFieldsForOrderInfo() {\r\n    const fieldsWithDefaultData = {\r\n      to_address_name: 'Sem Endereço',\r\n      to_address_number: 'Sem Numero',\r\n      to_address_county: 'Sem Bairro',\r\n    };\r\n\r\n    const orderInfoAddressFields = [...document.forms]\r\n      .filter(form => form.classList.contains('address__form'))\r\n      .reduce((obj1, form) => {\r\n        const addressFields = [...form.elements]\r\n          .filter(({ type, classList, value, id }) => {\r\n            if (classList.contains('js-address-complement-to') && value === '')\r\n              return false;\r\n\r\n            if (!id) return false;\r\n\r\n            return type !== 'button';\r\n          })\r\n          .reduce((obj2, { id, value, checked }) => {\r\n            if (\r\n              this.isToAddressUnknown &&\r\n              fieldsWithDefaultData.hasOwnProperty(id)\r\n            ) {\r\n              value = fieldsWithDefaultData[id];\r\n            }\r\n\r\n            return {\r\n              ...obj2,\r\n              [id]: checked ? checked : value,\r\n            };\r\n          }, {});\r\n\r\n        const key = form.classList.contains('js-address-from')\r\n          ? 'from_address'\r\n          : 'to_address';\r\n\r\n        return {\r\n          ...obj1,\r\n          [key]: addressFields,\r\n        };\r\n      }, {});\r\n\r\n    return orderInfoAddressFields;\r\n  }\r\n\r\n  getAddressForOrderForm(orderInfoAddressFields) {\r\n    const { to_address } = orderInfoAddressFields;\r\n\r\n    const addressFields = {\r\n      to_city: 'city',\r\n      to_state: 'state',\r\n      to_address_name: 'street',\r\n      to_address_complement: 'complement',\r\n      to_address_county: 'neighborhood',\r\n      to_address_number: 'number',\r\n      to_address_zipcode: 'postalCode',\r\n    };\r\n\r\n    const address = Object.keys(to_address)\r\n      .filter(key => addressFields.hasOwnProperty(key))\r\n      .reduce(\r\n        (obj, key) => {\r\n          const addressKEY = addressFields[key];\r\n          const addressValue = to_address[key];\r\n\r\n          return { ...obj, [addressKEY]: addressValue };\r\n        },\r\n        {\r\n          addressType: 'residential',\r\n        }\r\n      );\r\n\r\n    return address;\r\n  }\r\n\r\n  async saveData() {\r\n    try {\r\n      const orderInfoAddressFields = this.getAddressFieldsForOrderInfo();\r\n      const address = this.getAddressForOrderForm(orderInfoAddressFields);\r\n\r\n      const needStorageInput = document.querySelector('#store-items-change');\r\n\r\n      const fromHomeTypeValue = document.querySelector(\r\n        '.js-address-from-home-type'\r\n      );\r\n      const toHomeTypeValue = document.querySelector(\r\n        '.js-address-to-home-type'\r\n      );\r\n\r\n      const orderInfoCommonFields = {\r\n        current_step: 'address',\r\n        user_need_storage: needStorageInput.checked,\r\n        home_type: fromHomeTypeValue.value,\r\n        from_home_type: fromHomeTypeValue.value,\r\n        to_home_type: toHomeTypeValue.value,\r\n      };\r\n\r\n      const orderInfoFields = {\r\n        ...orderInfoCommonFields,\r\n        ...orderInfoAddressFields,\r\n      };\r\n\r\n      const orderInfoFieldsArray = Object.entries(orderInfoFields)\r\n        .reduce((arr, [key, value]) => {\r\n          if (['from_address', 'to_address'].includes(key)) {\r\n            arr = [...arr, ...Object.entries(value)];\r\n          } else {\r\n            arr = [...arr, [key, value]];\r\n          }\r\n\r\n          return arr;\r\n        }, [])\r\n        .filter(([key, value]) => value !== '');\r\n\r\n      const orderInfoFieldsForCustomData = orderInfoFieldsArray.reduce(\r\n        (obj, [key, value]) => ({ ...obj, [key]: value }),\r\n        {}\r\n      );\r\n\r\n      await Promise.all([\r\n        this.cartService.updateCheckoutAddress(address),\r\n        this.cartService.setMultipleCustomDataFields(\r\n          'orderinfo',\r\n          orderInfoFieldsForCustomData\r\n        ),\r\n      ]);\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  }\r\n\r\n  createCustomSelect() {\r\n    const cardSelects = [\r\n      ...document.querySelectorAll('.address__select-custom'),\r\n    ];\r\n\r\n    cardSelects.forEach((cardSelect, index) => {\r\n      const selectElement = cardSelect.querySelector('.select__native');\r\n      const selectCustom = cardSelect.querySelector('.select__custom');\r\n      const customSelectList = cardSelect.querySelector('.select__list');\r\n      const customSelectSelected = cardSelect.querySelector(\r\n        '.select__custom-selected'\r\n      );\r\n\r\n      const customSelectInstance = new CustomSelect({\r\n        selectElement,\r\n        customSelectList,\r\n        customSelectSelected,\r\n        customSelectListItemClassName: '',\r\n        customSelectListItemClassNameActive: 'active',\r\n        selectOpenCallback: () => {\r\n          this.customSelectInstances.forEach(customSelecItem => {\r\n            customSelecItem.close();\r\n          });\r\n\r\n          const selectListHeight = customSelectList.offsetHeight;\r\n\r\n          selectCustom.classList.add('select__custom--open');\r\n          selectCustom.style.maxHeight = `${selectListHeight}px`;\r\n        },\r\n        selectCloseCallback: () => {\r\n          selectCustom.classList.remove('select__custom--open');\r\n          selectCustom.style.maxHeight = 0;\r\n        },\r\n      });\r\n\r\n      this.customSelectInstances.push(customSelectInstance);\r\n    });\r\n  }\r\n\r\n  async getAddressData() {\r\n    const { customData } = await this.cartService.getCurrent();\r\n\r\n    if (!customData) return;\r\n\r\n    const storeItemsChangeCheckbox = document.querySelector(\r\n      '#store-items-change'\r\n    );\r\n\r\n    customData.customApps\r\n      .filter(customApp => customApp.id === 'orderinfo')\r\n      .forEach(customApp => {\r\n        Object.entries(customApp.fields).forEach(([id, value]) => {\r\n          if (id === 'user_need_storage') {\r\n            if (value.toLowerCase() == 'true') {\r\n              storeItemsChangeCheckbox.checked = value;\r\n            }\r\n          } else if (id.includes('from_') || id.includes('to_')) {\r\n            const inputElement = document.getElementById(id);\r\n\r\n            inputElement.value = value;\r\n          }\r\n        });\r\n      });\r\n\r\n    this.customSelectInstances.forEach(customSelectInstance => {\r\n      customSelectInstance.setCurrentSelectedItem();\r\n    });\r\n  }\r\n\r\n  handledFormChange(form) {\r\n    form.addEventListener('change', ({ target }) => {\r\n      target.classList.remove('address__input--invalid');\r\n    });\r\n  }\r\n\r\n  setHandledFormsChange() {\r\n    [...document.forms].forEach(form => this.handledFormChange(form));\r\n  }\r\n\r\n  validateForms() {\r\n    const validity = ![...document.forms]\r\n      .map(form => {\r\n        const inputs = [...form.elements]\r\n          .filter(input => input.value === '' && input.required)\r\n          .map(input => {\r\n            input.classList.add('address__input--invalid');\r\n\r\n            form.noValidate = true;\r\n\r\n            return input;\r\n          });\r\n\r\n        if (inputs.length === 0) {\r\n          form.noValidate = false;\r\n        }\r\n\r\n        return form.checkValidity() && !form.noValidate;\r\n      })\r\n      .includes(false);\r\n\r\n    return validity;\r\n  }\r\n\r\n  setHandledButtonUnknownAddressClick() {\r\n    const buttonUnknownAddress = document.querySelector(\r\n      '.js-address-to .address__button'\r\n    );\r\n\r\n    buttonUnknownAddress.addEventListener('click', e => {\r\n      buttonUnknownAddress.classList.toggle('address__button--mini-active');\r\n\r\n      this.isToAddressUnknown = !this.isToAddressUnknown;\r\n\r\n      const addressStreetNameElement = document.getElementById(\r\n        'to_address_name'\r\n      );\r\n      const addressZipcodeElement = document.getElementById(\r\n        'to_address_zipcode'\r\n      );\r\n      const addressCountyElement = document.getElementById('to_address_county');\r\n      const addressNumberElement = document.getElementById('to_address_number');\r\n\r\n      [\r\n        addressStreetNameElement,\r\n        addressCountyElement,\r\n        addressNumberElement,\r\n        addressZipcodeElement,\r\n      ].forEach(({ parentElement }) => {\r\n        parentElement.classList.toggle('address__field--required');\r\n      });\r\n\r\n      [\r\n        addressStreetNameElement,\r\n        addressCountyElement,\r\n        addressNumberElement,\r\n        addressZipcodeElement,\r\n      ].forEach(element => {\r\n        element.toggleAttribute('required');\r\n        element.toggleAttribute('disabled');\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', e => {\r\n  new Address();\r\n});\r\n","/**\r\n * Ensure Abstraction class\r\n */\r\nclass Ensure {\r\n  /**\r\n   * Ensure value is Undefined\r\n   * @param {*} value Value to be validated\r\n   * @return {boolean}\r\n   */\r\n  static isUndefined(value = undefined) {\r\n    return typeof value === 'undefined' ||\r\n      value === null ||\r\n      value === '' ||\r\n      value === {} ||\r\n      value === [];\r\n    // || JSON.stringify(value) === JSON.stringify({});\r\n  }\r\n\r\n  /**\r\n   * Ensure Input validity\r\n   * @param {*} input to validate\r\n   * @return {boolean} true if is valid\r\n   */\r\n  static isInputValid(input) {\r\n    return !this.isUndefined(input) && input.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Verify if object has properties\r\n   * @param {Object} object - Object to be verified\r\n   * @param {Array} props - properties to search on object\r\n   * @return {Boolean} True if object has all properties\r\n   */\r\n  static hasProps(object, props) {\r\n    const missingPropsResult = this.getMissingProps(object, props);\r\n    return missingPropsResult.length <= 0;\r\n  }\r\n\r\n  /**\r\n   * Get Object missing properties\r\n   * @param {Object} object - Object to be verified\r\n   * @param {Array} props - properties to search on object\r\n   * @return {Array} missing properties\r\n   */\r\n  static getMissingProps(object, props) {\r\n    let missingProps = [];\r\n    [...props].forEach((prop) => {\r\n      const result = prop in object;\r\n      if (!result) {\r\n        missingProps.push(prop);\r\n      }\r\n    });\r\n\r\n    return missingProps;\r\n  }\r\n}\r\n\r\nexport default Ensure;\r\n","export default class CustomSelect {\r\n  constructor({\r\n    selectElement,\r\n    customSelectList,\r\n    customSelectSelected,\r\n    customSelectListItemClassName,\r\n    customSelectListItemClassNameActive,\r\n    selectChangeCallback,\r\n    selectOpenCallback,\r\n    selectCloseCallback,\r\n  }) {\r\n    this.isOpen = false;\r\n\r\n    this.selectElement =\r\n      selectElement instanceof Element\r\n        ? selectElement\r\n        : document.querySelector(selectElement);\r\n\r\n    this.customSelectList =\r\n      customSelectList instanceof Element\r\n        ? customSelectList\r\n        : document.querySelector(customSelectList);\r\n\r\n    this.customSelectSelected =\r\n      customSelectSelected instanceof Element\r\n        ? customSelectSelected\r\n        : document.querySelector(customSelectSelected);\r\n\r\n    this.selectChangeCallback = selectChangeCallback || new Function();\r\n    this.selectOpenCallback = selectOpenCallback || new Function();\r\n    this.selectCloseCallback = selectCloseCallback || new Function();\r\n    this.customSelectListItemClassName = customSelectListItemClassName || '';\r\n    this.customSelectListItemClassNameActive =\r\n      customSelectListItemClassNameActive || '';\r\n\r\n    this.setCurrentSelectedItem();\r\n    this.createSelectList();\r\n    this.setListenerForCurrentSelected();\r\n  }\r\n\r\n  setCurrentSelectedItem() {\r\n    let { options, selectedIndex } = this.selectElement;\r\n\r\n    this.customSelectSelected.textContent = options[selectedIndex].textContent;\r\n  }\r\n\r\n  handleSelectChange(target) {\r\n    let { value } = this.selectElement;\r\n    let { value: newValue } = target.dataset;\r\n\r\n    const prevListItemActive = this.customSelectList.querySelector(\r\n      `.${this.customSelectListItemClassNameActive}`\r\n    );\r\n\r\n    if (prevListItemActive) {\r\n      prevListItemActive.classList.remove(\r\n        this.customSelectListItemClassNameActive\r\n      );\r\n    }\r\n\r\n    target.classList.add(this.customSelectListItemClassNameActive);\r\n\r\n    this.close();\r\n\r\n    if (value !== newValue) {\r\n      this.changeOption(newValue);\r\n    }\r\n  }\r\n\r\n  createSelectList() {\r\n    [...this.selectElement].forEach(option => {\r\n      const listItem = document.createElement('li');\r\n      listItem.setAttribute('class', this.customSelectListItemClassName);\r\n      listItem.dataset['value'] = option.value;\r\n\r\n      listItem.textContent = option.textContent.trim();\r\n\r\n      listItem.addEventListener('click', ({ target }) =>\r\n        this.handleSelectChange(target)\r\n      );\r\n\r\n      this.customSelectList.append(listItem);\r\n    });\r\n  }\r\n\r\n  setListenerForCurrentSelected() {\r\n    this.customSelectSelected.addEventListener('click', () => {\r\n      this.open();\r\n\r\n      document.body.addEventListener('click', ({ target }) => {\r\n        let close = !target.className.includes('custom-select');\r\n\r\n        if (close) this.close();\r\n      });\r\n    });\r\n  }\r\n\r\n  open(event = null) {\r\n    this.isOpen = true;\r\n    this.selectOpenCallback(event);\r\n    this.customSelectList.classList.add('open');\r\n  }\r\n\r\n  close() {\r\n    this.isOpen = false;\r\n    this.selectCloseCallback();\r\n    this.customSelectList.classList.remove('open');\r\n  }\r\n\r\n  changeOption(value) {\r\n    this.selectElement.value = value;\r\n\r\n    const eventChange = new Event('change', { bubbles: true });\r\n\r\n    this.selectElement.dispatchEvent(eventChange);\r\n\r\n    this.setCurrentSelectedItem();\r\n    this.selectChangeCallback({\r\n      value,\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable max-len */\r\nimport { Logger } from './';\r\n\r\n/**\r\n * Helper Abstraction class\r\n */\r\nclass Helper {\r\n  /**\r\n   * Helper constructor\r\n   * @param {*} props\r\n   */\r\n  constructor(props) {\r\n    this._logger = new Logger('Ensure');\r\n    this.props = props || {\r\n      language: navigator.language || navigator.userLanguage,\r\n      currency: 'BRL',\r\n      currencyLocale: 'pt-br',\r\n      minimumFractionDigits: 2,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * format currency\r\n   * @param {*} value\r\n   * @param {*} minimumFractionDigits\r\n   * @return {*}\r\n   */\r\n  formatPrice(value) {\r\n    value = value / 100;\r\n    value = (value * 1).toFixed(\r\n      Math.max(0, ~~this.props.minimumFractionDigits)\r\n    );\r\n\r\n    return new Intl.NumberFormat(this.props.currencyLocale, {\r\n      style: 'currency',\r\n      currency: this.props.currency,\r\n      minimumFractionDigits: this.props.minimumFractionDigits,\r\n    }).format(value);\r\n  }\r\n\r\n  static getParents(elem, selector) {\r\n    // Element.matches() polyfill\r\n    if (!Element.prototype.matches) {\r\n      Element.prototype.matches =\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\r\n              s\r\n            ),\r\n            i = matches.length;\r\n\r\n          while (--i >= 0 && matches.item(i) !== this) {}\r\n\r\n          return i > -1;\r\n        };\r\n    }\r\n\r\n    // Set up a parent array\r\n    let parents = [];\r\n\r\n    // Push each parent element to the array\r\n    for (; elem && elem !== document; elem = elem.parentNode) {\r\n      if (selector) {\r\n        if (elem.matches(selector)) {\r\n          parents.push(elem);\r\n        }\r\n\r\n        continue;\r\n      }\r\n\r\n      parents.push(elem);\r\n    }\r\n\r\n    // Return our parent array\r\n    return parents;\r\n  }\r\n\r\n  static serializeForm(form) {\r\n    // Setup our serialized data\r\n    let serialized = [];\r\n\r\n    // Loop through each field in the form\r\n    for (let i = 0; i < form.elements.length; i++) {\r\n      let field = form.elements[i];\r\n\r\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n      if (\r\n        !field.name ||\r\n        field.disabled ||\r\n        field.type === 'file' ||\r\n        field.type === 'reset' ||\r\n        field.type === 'submit' ||\r\n        field.type === 'button'\r\n      )\r\n        continue;\r\n\r\n      // If a multi-select, get all selections\r\n      if (field.type === 'select-multiple') {\r\n        for (let n = 0; n < field.options.length; n++) {\r\n          if (!field.options[n].selected) continue;\r\n\r\n          serialized.push(\r\n            encodeURIComponent(field.name) +\r\n              '=' +\r\n              encodeURIComponent(field.options[n].value)\r\n          );\r\n        }\r\n      }\r\n\r\n      // Convert field data to a query string\r\n      else if (\r\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\r\n        field.checked\r\n      ) {\r\n        serialized.push(\r\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\r\n        );\r\n      }\r\n    }\r\n\r\n    return serialized.join('&');\r\n  }\r\n\r\n  static getFormData(form) {\r\n    // Setup our serialized data\r\n    let data = {};\r\n\r\n    // Loop through each field in the form\r\n    for (let i = 0; i < form.elements.length; i++) {\r\n      let field = form.elements[i];\r\n\r\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n      if (\r\n        !field.name ||\r\n        field.disabled ||\r\n        field.type === 'file' ||\r\n        field.type === 'reset' ||\r\n        field.type === 'submit' ||\r\n        field.type === 'button'\r\n      )\r\n        continue;\r\n\r\n      // If a multi-select, get all selections\r\n      if (field.type === 'select-multiple') {\r\n        for (let n = 0; n < field.options.length; n++) {\r\n          if (!field.options[n].selected) continue;\r\n\r\n          data[field.name] = field.options[n].value;\r\n        }\r\n      }\r\n\r\n      // Convert field data to a query string\r\n      else if (\r\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\r\n        field.checked\r\n      ) {\r\n        data[field.name] = field.value;\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  static getRandomID() {\r\n    // Generate unique IDs for use as pseudo-private/protected names.\r\n    // Similar in concept to\r\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\r\n    //\r\n    // The goals of this function are twofold:\r\n    //\r\n    // * Provide a way to generate a string guaranteed to be unique when compared\r\n    //   to other strings generated by this function.\r\n    // * Make the string complex enough that it is highly unlikely to be\r\n    //   accidentally duplicated by hand (this is key if you're using `ID`\r\n    //   as a private/protected name on an object).\r\n    //\r\n    // Use:\r\n    //\r\n    //     var privateName = ID();\r\n    //     var o = { 'public': 'foo' };\r\n    //     o[privateName] = 'bar';\r\n\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n\r\n    return (\r\n      '_' +\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9)\r\n    );\r\n  }\r\n\r\n  static setCookie(cname, cvalue, exdays) {\r\n    const date = new Date();\r\n\r\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n\r\n    const expires = 'expires=' + date.toUTCString();\r\n\r\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\r\n  }\r\n\r\n  static getCookie(cname) {\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n\r\n    const cookie = decodedCookie\r\n      .split(';')\r\n      .filter(cookie => cookie.includes(cname))[0];\r\n\r\n    return cookie || '';\r\n  }\r\n\r\n  static isInViewport(element) {\r\n    const heightViewport =\r\n      window.innerHeight || document.documentElement.clientHeight;\r\n\r\n    const widthViewport =\r\n      window.innerWidth || document.documentElement.clientWidth;\r\n\r\n    const { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return (\r\n      top >= 0 &&\r\n      left >= 0 &&\r\n      bottom <= heightViewport &&\r\n      right <= widthViewport\r\n    );\r\n  }\r\n\r\n  static removeAccents(str) {\r\n    const mapAccents = {\r\n      a: 'á|à|ã|â|À|Á|Ã|Â',\r\n      e: 'é|è|ê|É|È|Ê',\r\n      i: 'í|ì|î|Í|Ì|Î',\r\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\r\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\r\n      c: 'ç|Ç',\r\n      n: 'ñ|Ñ',\r\n    };\r\n\r\n    for (let pattern in mapAccents) {\r\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\r\n    }\r\n\r\n    return str;\r\n  }\r\n}\r\n\r\nexport default Helper;\r\n","/* eslint no-console: 0 */\r\n\r\n/**\r\n * Logger Abstraction class\r\n */\r\nclass Logger {\r\n  /**\r\n   * Logger constructor\r\n   * @param {string} logName Application name to log\r\n   */\r\n  constructor(logName = 'B8ONE Logger Component') {\r\n    this.logName = logName;\r\n  }\r\n\r\n  /**\r\n   * Log error message\r\n   * @param {*} message - Message text\r\n   * @param {*} errorObj - Message object\r\n   */\r\n  error(message = '', errorObj = {}) {\r\n    console.error(message, errorObj);\r\n  }\r\n\r\n  /**\r\n   * Log information message\r\n   * @param {*} message - Message text\r\n   */\r\n  info(message = '') {\r\n    console.info(message);\r\n  }\r\n\r\n  /**\r\n   * Log warning message\r\n   * @param {*} message - Message text\r\n   */\r\n  warning(message = '') {\r\n    console.warn(this.logName, message);\r\n  }\r\n\r\n  /**\r\n   * Generic log\r\n   * @param {String} message - log's message\r\n   */\r\n  log(message = '') {\r\n    console.log(message);\r\n  }\r\n\r\n  /**\r\n   * Generic log\r\n   * @param {String} message - log's message\r\n   * @param {*} object - object to be logged\r\n   */\r\n  log(message = '', object = {}) {\r\n    console.log(message, object);\r\n  }\r\n}\r\n\r\nexport default Logger;\r\n","/* eslint-disable max-len */\r\n\r\nimport { Ensure, Logger } from '../common';\r\nimport HttpClient from './b8one.httpClient';\r\n\r\n/**\r\n * Cart Abstraction class\r\n */\r\nclass CartService {\r\n  /**\r\n   * Cart constructor\r\n   */\r\n  constructor() {\r\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\r\n\r\n    this._logger = new Logger('Cart service');\r\n    this._httpClient = new HttpClient();\r\n  }\r\n\r\n  /**\r\n   * Get current cart\r\n   * @return {*} Cart object\r\n   */\r\n  async getCurrent() {\r\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\r\n  }\r\n\r\n  /**\r\n   * Add item to cart\r\n   * @param {*} skuId - Product sku Id (SKU)\r\n   * @param {*} productQuantity - Product Quantity\r\n   * @param {*} sellerId - Seller id\r\n   */\r\n  async add(skuId, productQuantity, sellerId = 1) {\r\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\r\n\r\n    if (!Ensure.isUndefined(skuId)) {\r\n      const current = await this.getCurrent();\r\n      const indexFound = current.items.findIndex(x => x.id === skuId);\r\n\r\n      if (indexFound > -1) {\r\n        productQuantity =\r\n          parseInt(productQuantity) +\r\n          parseInt(current.items[indexFound].quantity);\r\n      }\r\n\r\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n\r\n      const payload = {\r\n        orderItems: [\r\n          {\r\n            seller: sellerId.toString(),\r\n            quantity: parseInt(productQuantity),\r\n            id: skuId.toString(),\r\n          },\r\n        ],\r\n      };\r\n\r\n      return this._httpClient.patch(endpointUrl, payload);\r\n    }\r\n  }\r\n\r\n  async checkoutCRUD(skus) {\r\n    let { items } = await window.vtexjs.checkout.getOrderForm();\r\n\r\n    const skusCustomProducts = this.getCustomProducts(skus);\r\n\r\n    skus = skus.filter(sku => !sku.isCustom);\r\n    skus = [...skus, ...skusCustomProducts];\r\n\r\n    const skuToIgnore = [19, 698, 25, 26];\r\n\r\n    const indexToRemove = items.reduce((indexList, item, index) => {\r\n      const customProductSKUs = [25, 26];\r\n\r\n      if (customProductSKUs.includes(parseInt(item.id))) {\r\n        return [...indexList, index];\r\n      }\r\n\r\n      return indexList;\r\n    }, []);\r\n\r\n    if (indexToRemove.length > 0) {\r\n      const response = await this.removeMoreProducts(indexToRemove);\r\n\r\n      response && (items = response.items);\r\n    }\r\n\r\n    const productsToAdd = skus\r\n      .filter(sku => sku.quantity > 0)\r\n      .filter(sku => {\r\n        let index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        return index === -1 && sku.quantity > 0;\r\n      })\r\n      .map(sku => ({\r\n        quantity: sku.quantity,\r\n        seller: 1,\r\n        id: sku.skuId || sku.id,\r\n      }));\r\n\r\n    console.log('productsToAdd', productsToAdd);\r\n\r\n    const productsToUpdate = skus\r\n      .filter(sku => sku.quantity > 0)\r\n      .filter(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        if (index !== -1) {\r\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\r\n          const diffQuantity =\r\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\r\n\r\n          return sameSku && diffQuantity && sku.quantity > 0;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        return {\r\n          index,\r\n          quantity: sku.quantity,\r\n        };\r\n      });\r\n\r\n    console.log('productsToUpdate', productsToUpdate);\r\n\r\n    const productsToReplaceSKU = skus\r\n      .filter(\r\n        sku =>\r\n          sku.quantity > 0 &&\r\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\r\n      )\r\n      .filter(sku => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        if (index !== -1) {\r\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\r\n\r\n          return diffSku;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        const oldSKU = {\r\n          index,\r\n          seller: 1,\r\n          quantity: 0,\r\n        };\r\n\r\n        const newSKU = {\r\n          seller: 1,\r\n          id: sku.skuId,\r\n          quantity: sku.quantity,\r\n        };\r\n\r\n        return [oldSKU, newSKU];\r\n      })\r\n      .reduce((itemsList, current) => {\r\n        const [oldSKU, newSKU] = current;\r\n\r\n        return [...itemsList, oldSKU, newSKU];\r\n      }, []);\r\n\r\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\r\n\r\n    const productsToRemove = skus\r\n      .filter(sku => sku.quantity < 1)\r\n      .filter(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        if (index !== -1) {\r\n          return sku.quantity == 0;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        return {\r\n          index,\r\n          quantity: 0,\r\n        };\r\n      });\r\n\r\n    console.log('productsToRemove', productsToRemove);\r\n\r\n    if (productsToUpdate[0]) {\r\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\r\n    }\r\n\r\n    if (productsToReplaceSKU[0]) {\r\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\r\n    }\r\n\r\n    if (productsToRemove[0]) {\r\n      await window.vtexjs.checkout.removeItems(productsToRemove);\r\n    }\r\n\r\n    if (productsToAdd[0]) {\r\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\r\n    }\r\n  }\r\n\r\n  getCustomProducts(skus) {\r\n    const customProducts = {};\r\n\r\n    skus\r\n      .filter(({ isCustom }) => isCustom === true)\r\n      .forEach(({ skuId, quantity, customProductItem }) => {\r\n        let currentCustomProduct = customProducts[skuId];\r\n\r\n        const customProductQuantity =\r\n          parseInt(customProductItem.quantity) * parseInt(quantity);\r\n\r\n        if (currentCustomProduct) {\r\n          const newQuantity =\r\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\r\n\r\n          currentCustomProduct = {\r\n            ...currentCustomProduct,\r\n            quantity: newQuantity,\r\n          };\r\n        } else {\r\n          currentCustomProduct = {\r\n            ...customProductItem,\r\n            quantity: customProductQuantity,\r\n            isCustom: true,\r\n          };\r\n        }\r\n\r\n        customProducts[skuId] = currentCustomProduct;\r\n      });\r\n\r\n    return Object.values(customProducts);\r\n  }\r\n\r\n  async getProductIndexInOrderForm(productId) {\r\n    const { items } = await this.getCurrent();\r\n\r\n    const index = items.findIndex(item => item.productId == productId);\r\n\r\n    if (index !== -1) return index;\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Remove item to cart\r\n   * @param {JSON} itemIndex - Product item index to be removed\r\n   */\r\n  async remove(itemIndex) {\r\n    const current = await this.getCurrent();\r\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n    const payload = {\r\n      orderItems: [\r\n        {\r\n          index: itemIndex,\r\n          quantity: 0,\r\n        },\r\n      ],\r\n      expectedOrderFormSections: ['items'],\r\n      noSplitItem: true,\r\n    };\r\n\r\n    await this._httpClient.patch(endpointUrl, payload);\r\n  }\r\n\r\n  /**\r\n   * Remove items of cart\r\n   * @param {Array} itemsIndex - Products items index to be removed\r\n   */\r\n  async removeMoreProducts(itemsIndex) {\r\n    const current = await this.getCurrent();\r\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n    const payload = {\r\n      orderItems: itemsIndex.map(index => ({\r\n        index,\r\n        quantity: 0,\r\n      })),\r\n      expectedOrderFormSections: ['items'],\r\n      noSplitItem: true,\r\n    };\r\n\r\n    return await this._httpClient.patch(endpointUrl, payload);\r\n  }\r\n\r\n  async updateProduct(skuId, quantity, seller = 1) {\r\n    const newSKU = {\r\n      seller,\r\n      quantity,\r\n      id: skuId,\r\n    };\r\n\r\n    return await this.updateProducts([newSKU]);\r\n  }\r\n\r\n  async updateProducts(skus) {\r\n    const { items, orderFormId } = await this.getCurrent();\r\n\r\n    skus = skus\r\n      .map(({ id, quantity, seller }) => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.id) === parseInt(id)\r\n        );\r\n\r\n        return {\r\n          id,\r\n          index,\r\n          quantity,\r\n          seller: seller || 1,\r\n        };\r\n      })\r\n      .filter(sku => sku.index !== -1);\r\n\r\n    if (skus.length > 0) {\r\n      const payload = {\r\n        orderItems: skus,\r\n      };\r\n\r\n      return await this._httpClient.patch(\r\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\r\n        payload\r\n      );\r\n    }\r\n  }\r\n\r\n  async simulateOrderForm(postalCode, country = 'BRA') {\r\n    try {\r\n      await vtexjs.checkout.getOrderForm();\r\n\r\n      const orderForm = await vtexjs.checkout.calculateShipping({\r\n        postalCode,\r\n        country,\r\n      });\r\n\r\n      return orderForm;\r\n    } catch (error) {\r\n      console.error('Error in simulateOrderForm', error);\r\n    }\r\n  }\r\n\r\n  async simulateShipping(items, postalCode, country = 'BRA') {\r\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\r\n      items,\r\n      postalCode,\r\n      country\r\n    );\r\n\r\n    return orderFormSimulated;\r\n  }\r\n\r\n  async updateCheckoutTransporterSLA(logisticsInfo) {\r\n    await vtexjs.checkout.getOrderForm();\r\n\r\n    const { shippingData } = vtexjs.checkout.orderForm;\r\n\r\n    shippingData.logisticsInfo = logisticsInfo;\r\n\r\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\r\n  }\r\n\r\n  async updateCheckoutAddress(address) {\r\n    console.log(address);\r\n    await vtexjs.checkout.getOrderForm();\r\n\r\n    const { shippingData } = vtexjs.checkout.orderForm;\r\n\r\n    shippingData.availableAddresses = [\r\n      {\r\n        ...shippingData.address,\r\n        ...address,\r\n      },\r\n    ];\r\n\r\n    shippingData.selectedAddresses = [\r\n      {\r\n        ...shippingData.address,\r\n        ...address,\r\n      },\r\n    ];\r\n\r\n    shippingData.address = {\r\n      ...shippingData.address,\r\n      ...address,\r\n    };\r\n\r\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\r\n  }\r\n\r\n  async setMultipleCustomDataFields(appName, fields) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\r\n\r\n    try {\r\n      return await this._httpClient.put(endpoint, fields);\r\n    } catch (error) {\r\n      console.error('setMultipleCustomDataFields', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\r\n\r\n    const payload = { value: appFieldValue };\r\n\r\n    try {\r\n      return await this._httpClient.put(endpoint, payload);\r\n    } catch (error) {\r\n      console.error('setSingleCustomDataField', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async removeSingleCustomDataField(appName, appFieldName) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\r\n\r\n    const payload = { value: null };\r\n\r\n    try {\r\n      return await this._httpClient.delete(endpoint, payload);\r\n    } catch (error) {\r\n      console.error('removeSingleCustomDataField', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Cart's payload method factory\r\n   * @param {*} skuId - Product Id (SKU)\r\n   * @param {*} productQuantity - Product Quantity\r\n   * @param {*} sellerId - Seller id\r\n   * @return {JSON} cart paylod\r\n   */\r\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\r\n    return {\r\n      id: skuId,\r\n      quantity: productQuantity,\r\n      seller: sellerId,\r\n    };\r\n  }\r\n}\r\n\r\nexport default CartService;\r\n","import fetch from 'unfetch';\r\nimport { Ensure, Logger } from '../common';\r\n\r\n/**\r\n * HttpClient Abstraction class\r\n */\r\nclass HttpClient {\r\n  /**\r\n   * HttpClient constructor\r\n   */\r\n  constructor() {\r\n    this._logger = new Logger('httpClient');\r\n  }\r\n\r\n  /**\r\n   * Get\r\n   * @param {String} endpointUrl\r\n   * @return {Promise}\r\n   */\r\n  get(endpointUrl) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'GET');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete\r\n   * @param {String} endpointUrl\r\n   * @return {Promise}\r\n   */\r\n  delete(endpointUrl) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'DELETE');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  post(endpointUrl, payload = {}) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'POST', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  put(endpointUrl, payload) {\r\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\r\n      return this._execute(endpointUrl, 'PUT', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  patch(endpointUrl, payload) {\r\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\r\n      return this._execute(endpointUrl, 'PATCH', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} endpointUrl\r\n   * @param {String} httpVerb\r\n   * @param {Object} payload\r\n   * @return {Promise}\r\n   */\r\n  _execute(endpointUrl, httpVerb, payload) {\r\n    let header = {\r\n      method: httpVerb,\r\n      headers: {\r\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\r\n        // 'Content-Type': 'application/json',\r\n        accept: 'application/vnd.vtex.masterdata.v10+json',\r\n        'content-type': 'application/json; charset=utf-8',\r\n      },\r\n    };\r\n\r\n    if (payload) {\r\n      header['body'] = JSON.stringify(payload);\r\n    }\r\n\r\n    return fetch(endpointUrl, header)\r\n      .then(this.validateResponse)\r\n      .then(this.parseResponseToJson)\r\n      .then(data => {\r\n        return data;\r\n      })\r\n      .catch(error => {\r\n        this._logger.log('Request succeeded with JSON response', error);\r\n        return error;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Parse response data to json object\r\n   * @param {*} response - Request response\r\n   * @return {JSON} json data\r\n   */\r\n  async parseResponseToJson(response) {\r\n    if (!response.ok) {\r\n      return response;\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  /**\r\n   * Response validation\r\n   * @param {*} response\r\n   * @return {Promise} promise result\r\n   */\r\n  validateResponse(response) {\r\n    if (response.ok) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n}\r\n\r\nexport default HttpClient;\r\n"],"sourceRoot":""}
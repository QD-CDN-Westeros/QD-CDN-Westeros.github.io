{"version":3,"sources":["webpack:///./src/js/general/services/b8one.vtexCatalogService.js","webpack:///./src/js/general/repositories/b8one.masterdataRepository.js","webpack:///./src/js/general/utils/currency/index.js","webpack:///./src/js/general/repositories/b8one.addressRepository.js","webpack:///./src/js/general/components/b8one.modalComponent.js","webpack:///./src/js/general/utils/skusToIgnore/index.js","webpack:///./src/js/general/services/b8one.storageService.js","webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/general/services/b8one.insuranceService.js","webpack:///./src/js/general/components/b8one.customSelect.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/general/services/b8one.httpClient.js","webpack:///./src/js/store/desktop/order-summary/index.js"],"names":["VtexCatalogService","origin","this","api","axios","create","baseURL","categoryID","subcategoryID","_from","_to","orderBy","params","URLSearchParams","append","forEach","order","get","console","error","products","initial","end","getProductsByCategories","data","status","productId","MasterdataRepository","entityCode","entityCode_","httpClient_","HttpClient","_VTEX_MASTERDATA_ENDPOINT","entityPayload","apiEndpoint","put","then","res","patch","documentId","fields","delete","field","fileName","getAttachmentUrl","REAL","value","currency","symbol","precision","separator","decimal","formatWithSymbol","AddressRepository","_httpClient","_VTEX_API_ENDPOINT","userEmail","newAddress","post","documentID","getAllAddressesByUserEmail","addresses","addressesPromises","map","address","removeAddressByDocumentID","id","Promise","all","ModalComponent","modal","modalShowCLass","openModalCallback","closeModalCallback","isOpen","openCallback","Function","closeCallback","Element","document","querySelector","classList","add","remove","StorageService","cartService","CartService","vtexCatalogService","getCurrent","items","filter","product","SKUS_TO_IGNORE","includes","parseInt","quantity","getProductVariations","skuSelected","skus","sku","weight","measures","total","productsWeightArray","totalWeight","Math","round","reduce","storageQuantity","storageSKUID","index","findIndex","userSelectedStorageMonths","customData","orderInfo","customApps","customApp","storageProduct","totalSKUsInOrderForm","length","getTotalStorageQuantity","user_need_storage","isQuantityDifferent","updateProduct","toLowerCase","addSKUStorageToOrderForm","removeSKUStorageInOrderForm","Ensure","undefined","input","isUndefined","checkValidity","object","props","getMissingProps","missingProps","prop","push","InsuranceService","price","skuIndex","orderFormId","endpoint","fetch","method","body","JSON","stringify","headers","Accept","json","CustomSelect","selectElement","customSelectList","customSelectSelected","customSelectListItemClassName","customSelectListItemClassNameActive","selectChangeCallback","selectOpenCallback","selectCloseCallback","setCurrentSelectedItem","createSelectList","setListenerForCurrentSelected","options","selectedIndex","textContent","target","newValue","dataset","prevListItemActive","close","changeOption","option","listItem","createElement","setAttribute","trim","addEventListener","handleSelectChange","open","className","event","eventChange","Event","bubbles","dispatchEvent","Helper","_logger","Logger","language","navigator","userLanguage","currencyLocale","minimumFractionDigits","elem","selector","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","i","item","parents","parentNode","form","serialized","elements","name","disabled","type","n","selected","encodeURIComponent","checked","join","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","split","element","heightViewport","window","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","pattern","mapAccents","a","e","o","u","c","replace","RegExp","toFixed","max","Intl","NumberFormat","style","format","logName","message","errorObj","info","warn","log","skuId","productQuantity","sellerId","current","indexFound","x","endpointUrl","payload","orderItems","seller","vtexjs","checkout","getOrderForm","skusCustomProducts","getCustomProducts","isCustom","skuToIgnore","indexToRemove","indexList","removeMoreProducts","response","productsToAdd","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","addToCart","customProducts","customProductItem","currentCustomProduct","customProductQuantity","newQuantity","Object","values","itemIndex","expectedOrderFormSections","noSplitItem","itemsIndex","updateProducts","postalCode","country","calculateShipping","orderForm","simulateShipping","orderFormSimulated","logisticsInfo","shippingData","sendAttachment","availableAddresses","selectedAddresses","appName","appFieldName","appFieldValue","_execute","httpVerb","header","accept","validateResponse","parseResponseToJson","catch","ok","resolve","reject","Error","statusText","OrderSummaryPage","addressCep","dateSelected","modalDate","calendarInstance","insuranceItems","httpClient","storageService","addressRepository","insuranceService","helper","userIsDefined","transporterSelected","totalInsuranceFormatted","totalInsurance","totalOrderSummary","totalTransporterSelected","totalStorageMonth","totalStorage","totalizers","customSelectStorageServiceInstance","liftingQuantity","lifting","tableContentElement","init","$","user","IsUserDefined","initModalRemoveProduct","initModalDate","initTermsModal","setHandledTermsCheckboxChange","handleGoToPaymentButton","setHandledButtonEditDateClick","setHandledButtonSaveClick","updateOrderForm","updateShippingData","getStorageMonths","setTransporterSelected","setTotalInsurance","getProductsInCustomData","setDate","getAddress","getInsuranceItems","setAddressCep","getLiftingFromCustomData","addServicesToDOM","updateSelectedSLA","initCalendar","setTotalTransporterSelected","setTotalOrderSummary","setTotalTransporterSelectedElement","setTotalInsuranceElement","setTotalOrderSummaryElement","transporterHTML","createTransporterElement","orderFormProductsHTML","createProductstInOrderForm","customProductsHTML","createCustomProducts","addTransporterToDOM","addOrderFormProductsToDOM","addCustomProductsToDOM","shippingExplained","setHandledProducts","setHandledTransporterElement","setHandledUpdateButtonClick","removePageLoading","showInsuranceValue","elems","nome","call","el","shippingLink","shippingDateContainer","preventDefault","scrollTo","offsetTop","offsetHeight","flatpickr","inline","dateFormat","minDate","fp_incr","defaultDate","locale","Portuguese","appendTo","prevArrow","nextArrow","disable","getDay","priceFormatted","deliveryTypeSelected","btnContinue","btnClose","modalTerms","saveData","updateInsuranceValue","updateTranspoterValue","location","assign","loginUser","clientProfileData","customAppOrderInfo","addressType","city","to_city","neighborhood","to_address_county","number","to_address_number","to_address_zipcode","state","to_state","street","to_address_name","receiverName","firstName","lastName","email","shippingTotalizer","orderInfoApp","updateCheckoutAddress","updateCheckoutTransporterSLA","removeAllAddressesByUserEmail","addAddressToUser","userId","addressName","addressId","search","indexOf","vtexid","start","returnUrl","href","forceReload","show","buttonContinue","removeAttribute","multiply","modalRemoveProduct","modalRemoveProductButtonClose","buttonRemoveProduct","buttonCancelRemove","modalRemoveProductInstance","keys","hideErrorRemoveProductMessage","productIdToRemove","handledConfirmRemoveProduct","showErrorRemoveProductMessage","button","modalDateButtonClose","buttonCancel","formattedDate","formatDate","selectedDates","updateCalendarComponent","transporter","priceElement","prevPriceElementActive","transporterDeliveryType","buttonMinusQuantity","buttonAddQuantity","inputCheckbox","buttonRemove","inputProductQuantity","inputProductActive","inputProductRequiredLiftingOrigin","inputProductRequiredLiftingDestination","handledMinusQuantityProduct","handledAddQuantityProduct","handledSpecialPackagingProduct","handledRemoveProductClick","handledProductQuantityChange","handledProductActiveChange","handledLiftingOriginProduct","handledLiftingDestinationProduct","setHandledProduct","transporterDeliveryTypeSelected","transporterElement","deliveryTypes","courier_data","parse","orderDeliveryTypesByLessPrice","productQuantityElement","requiresLifting","liftingQuantityOrigin","liftingQuantityDestination","skuIdWithBox","skuIdWithoutBox","productSpecialPackaging","currentProduct","specialPackaging","active","productName","imgURL","description","productHTML","innerHTML","productData","productElement","productIndex","updateTotalOrderValue","parentElement","productNameElement","productImageElement","productAttributeElement","modalProductContainer","oldProduct","createCustomProductForModalRemove","createProductForModalRemove","src","prepend","newInsuranceValue","insuranceItem","setTotalizers","insuranceSKU","totalItemsWithDiscounts","totalizer","activeProductsWithoutCustoms","activeProductsCustoms","customProduct","storageSKU","liftingSKUS","activeProducts","logisticInfo","ids","courierIds","slas","sla","deliveryIds","courierId","getDeliveryTypes","deliveryType","newPrice","slaName","manualPrice","newPriceFormatted","formatPrice","updateTransporterElement","transporterVariations","key","getTransporterVariations","courierType","courier","imageUrl","requiredHTML","requiredLiftingHTML","customAttributes","eval","skuName","createProduct","createCustomProduct","products_data","transporterData","featuresText","logoURL","featuresX","descricao","prices","isSelected","createTransporterPriceElement","feature","moving_date","movingData","cardNumber","dateInstance","dayjs","day","mounth","year","dateFormatted","nextElementSibling","entries","obj","container","addressDirection","contains","cardContent","selectSpecialHandlyConditionSelected","selectHomeTypeSelected","specialHandlyCondition","complement","county","streetName","zipcode","homeType","firstParagraphContent","secondParagraphContent","thirdParagraphContent","makeCRUD","removeAllItems","productsWithQuantity","additionalWeightSKUs","getAdditionalWeightSKU","disassemblyAndAssemblySKUs","getDisassemblyAndAssemblySKU","liftingSKUs","getLiftingSKUs","getInsuranceSKU","getInsuranceDataInCustomData","totalInsurancePrice","checkoutCRUD","insuranceSkuIndex","getInsuranceSkuIndex","updateInsuranceSKUPrice","intValue","liftingTotalPrice","calculateLiftingTotalPrice","totalForSpecialPackaging","calculateTotalForSpecialPackaging","totalDisassemblyAndAssemblyPrice","calculateTotalForDisassemblyAndAssembly","updateServiceItem","orderInfoFieldsForCustomData","current_step","user_selected_storage_months","lifting_total_price","special_packaging_total_price","storage_months","selectedOptions","insuranceItemsForCustomData","insuranceFieldsForCustomData","setMultipleCustomDataFields","setSingleCustomDataField","buttonUpdate","buttonUpdateTextElement","hideUpdateErrorMessage","handledUpdateButtonClick","showUpdateErrorMessage","innerText","setTimeout","initSaveCustomDataEvent","endSaveCustomDataEvent","sort","b","totalLiftingPrice","liftingItems","getLiftingItems","liftingQuantityToSubtract","newTotal","liftingPrice","storageItem","getStorageItem","totalStoragePrice","divide","itemsWithSpecialPackaging","getItemsWithSpecialPackaging","totalSpecialPackagingPrice","disassemblyAndAssemblySKU","find","serviceName","serviceValue","serviceID","serviceItem","calculateStoragePrice","serviceStorageHTML","createServiceItem","serviceLiftingHTML","serviceSpecialPackagingHTML","serviceDisassemblyAndAssemblyHTML","serviceItemsTable","createCustomSelectForStorageService","updateCustomSelectStorageService","selectCustom","selectListHeight","maxHeight","selectedSla","getLiftingQuantity","additionalWeight","requiresAssembly","requiresDisassembly","insuranceApp"],"mappings":"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","file":"js/b8one.desktop.order-summary.js","sourcesContent":["import axios from 'axios';\n\nexport default class VtexCatalogService {\n  /**\n   * @param  {String} origin='' Origin example => https://www.example.com\n   */\n  constructor(origin = '') {\n    this.api = axios.create({\n      baseURL: `${origin}/api/catalog_system`,\n    });\n  }\n\n  /**\n   * This function is a abstraction of VTEX Search API for get and return products by categoryID (Parent) and subcategoryID (child)\n   * and return an array of products, also you can order the products with orderBy param, fetch max 50 products per request.\n   *\n   * For more information go to the follow link:\n   * https://documenter.getpostman.com/view/845/vtex-search-api/Hs43?version=latest#e0ec3923-faf7-5049-8634-f6d617ce5f67\n   *\n   * @param  {String|Number} categoryID\n   * @param  {String|Number} subcategoryID\n   * @param  {String|Number} _from=0\n   * @param  {String|Number} _to=49\n   * @param  {Array} orderBy=['OrderByNameASC']\n   * @return {Array} Array of products.\n   */\n  async getProductsByCategories(\n    categoryID,\n    subcategoryID,\n    _from = 0,\n    _to = 49,\n    orderBy = ['OrderByNameASC']\n  ) {\n    try {\n      const params = new URLSearchParams();\n\n      params.append('_to', _to);\n      params.append('_from', _from);\n      params.append('fq', `C:/${categoryID}/${subcategoryID}`);\n\n      orderBy.forEach(order => params.append('O', order));\n\n      return await this.api.get('/pub/products/search', { params });\n    } catch (error) {\n      console.error(\n        'Error in VtexCatalogService on method getProductsByCategories',\n        error\n      );\n    }\n\n    return;\n  }\n\n  /**\n   * This function get and return all products by categoryID (Parent) and subcategoryID (child)\n   * and return an array of products.\n   * @param  {String|Number} categoryID\n   * @param  {String|Number} subcategoryID\n   * @return {Array} Array of products.\n   */\n  async getAllProductsByCategories(categoryID, subcategoryID) {\n    try {\n      let products = [];\n      let initial = 0;\n      let end = 49;\n\n      while (true) {\n        const { data, status } = await this.getProductsByCategories(\n          categoryID,\n          subcategoryID,\n          initial,\n          end\n        );\n\n        initial = end + 1;\n        end = end * 2 + 1;\n\n        products = [...products, ...data];\n\n        if (status === 200) {\n          break;\n        }\n      }\n\n      return products;\n    } catch (error) {\n      console.error(\n        'Error in VtexCatalogService on method getAllProductsByCategories',\n        error\n      );\n    }\n\n    return;\n  }\n\n  /**\n   * This function get and return all categories of the category tree.\n   * @return {Array} Array of categories.\n   */\n  async getAllCategories() {\n    try {\n      return await this.api.get('/pub/category/tree/1');\n    } catch (error) {\n      console.error(\n        'Error in VtexCatalogService on method getAllCategories',\n        error\n      );\n    }\n\n    return;\n  }\n\n  /**\n   * @param  {String|Number} productId The id of the product\n   * @return {Object} Product Object with SKUS Variations.\n   */\n  async getProductVariations(productId) {\n    try {\n      return await this.api.get(`/pub/products/variations/${productId}`);\n    } catch (error) {\n      console.error(\n        'Error in VtexCatalogService on method getProductVariations',\n        error\n      );\n    }\n\n    return;\n  }\n}\n","import HttpClient from '../services/b8one.httpClient';\n\n/**\n * Masterdata Base Repository\n */\nclass MasterdataRepository {\n  /**\n   * Masterdata Repository constructor\n   * @param {*} entityCode\n   */\n  constructor(entityCode) {\n    const STORE_ID = 'TR';\n\n    this.entityCode_ = entityCode;\n    this.httpClient_ = new HttpClient();\n\n    // this._VTEX_MASTERDATA_ENDPOINT = `//api.vtexcrm.com.br/${STORE_ID}/dataentities/${entityCode}`;\n    this._VTEX_MASTERDATA_ENDPOINT = `/api/dataentities/${entityCode}`;\n  }\n\n  /**\n   * add\n   * @param {*} entityPayload\n   * @return {*}\n   */\n  add(entityPayload) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents`;\n\n    return this.httpClient_.put(apiEndpoint, entityPayload).then(\n      res => {\n        return res;\n      },\n      error => {\n        return error;\n      }\n    );\n  }\n\n  /**\n   * update..\n   * @param {*} entityPayload\n   * @return {*}\n   */\n  update(entityPayload) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents`;\n\n    return this.httpClient_.patch(apiEndpoint, entityPayload).then(\n      res => {\n        return res;\n      },\n      error => error\n    );\n  }\n\n  /**\n   * search\n   * @param {*} params\n   * @return {*}\n   */\n  search(params) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/search?${params}`;\n\n    return this.httpClient_.get(apiEndpoint).then(res => {\n      return res;\n    });\n  }\n\n  /**\n   * Get Document by document ID\n   * @param {GUID} documentId Document Id\n   */\n  async getByDocumentId(documentId) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}`;\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n\n  async getByDocumentIdWithFields(documentId, fields) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}?_fields=${fields}`;\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n  /**\n   * delete\n   * @param {*} documentId\n   * @return {*}\n   */\n  delete(documentId) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}`;\n\n    return this.httpClient_.delete(apiEndpoint).then(res => {\n      return res;\n    });\n  }\n\n  /**\n   *\n   * @param {*} documentId\n   * @param {*} field\n   * @param {*} fileName\n   */\n  getAttachmentUrl(documentId = '', field = '', fileName = '') {\n    return `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}/${field}/attachments/${fileName}`;\n  }\n\n  /**\n   * Get attachments\n   * @param {*} documentId\n   * @param {*} field\n   * @param {*} fileName\n   */\n  async getAttachment(documentId = '', field = '', fileName = '') {\n    // /api/dataentities/{{data_entity_name}}/documents/{{id}}/{{field}}/attachments/{{file_name}}\n    const apiEndpoint = this.getAttachmentUrl(documentId, field, fileName);\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n}\n\nexport default MasterdataRepository;\n","import currency from 'currency.js';\n\nconst REAL = value =>\n  currency(value, {\n    symbol: 'R$ ',\n    precision: 2,\n    separator: '.',\n    decimal: ',',\n    formatWithSymbol: true,\n  });\n\nexport { REAL };\n","/* eslint-disable max-len */\nimport MasterdataRepository from './b8one.masterdataRepository';\n\nimport HttpClient from '../services/b8one.httpClient';\n\n/**\n * AddressRepository\n */\nclass AddressRepository extends MasterdataRepository {\n  /**\n   * AddressRepository constructor\n   */\n  constructor() {\n    super('AD');\n\n    this._httpClient = new HttpClient();\n    this._VTEX_API_ENDPOINT = '/api/dataentities/AD';\n  }\n\n  /**\n   * This function return the user addresses stored in the masterdata by userEmail\n   * @param  {String} userEmail\n   * @param  {String|Array} fields=['id']\n   */\n  async getAllAddressesByUserEmail(userEmail, fields = ['id']) {\n    return this._httpClient.get(\n      `${this._VTEX_API_ENDPOINT}/search?_where=userId=${userEmail}&_fields=${fields}`\n    );\n  }\n\n  /**\n   * This function add a new document to Entity, the newAddress object need to have\n   * the userID and addressName properties.\n   * @param  {Object} newAddress\n   */\n  async addAddressToUser(newAddress) {\n    return this._httpClient.post(\n      `${this._VTEX_API_ENDPOINT}/documents`,\n      newAddress\n    );\n  }\n\n  /**\n   * Remove a document of Address Entity by document ID\n   * @param  {String} documentID\n   */\n  async removeAddressByDocumentID(documentID) {\n    return this._httpClient.delete(\n      `${this._VTEX_API_ENDPOINT}/documents/${documentID}`\n    );\n  }\n\n  /**\n   * Remove all document of Address Entity by userEmail\n   * @param  {String} userEmail\n   */\n  async removeAllAddressesByUserEmail(userEmail) {\n    try {\n      const addresses = await this.getAllAddressesByUserEmail(userEmail);\n\n      const addressesPromises = addresses.map(\n        async address => await this.removeAddressByDocumentID(address.id)\n      );\n\n      return await Promise.all(addressesPromises);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nexport default AddressRepository;\n","/*\n  *\n  * Author: Enrique Mora <enriquebeta7@gmail.com>\n  *\n*/\n\nexport default class ModalComponent {\n\t/**\n\t * @param  { Element | String } modal\n\t * @param  { String } modalShowCLass\n\t * @param  { Function } openModalCallback\n\t * @param  { Function } closeModalCallback\n   * @requires modal\n\t */\n\tconstructor({\n\t\tmodal,\n\t\tmodalShowCLass,\n\t\topenModalCallback,\n\t\tcloseModalCallback,\n\t}) {\n\t\tthis.isOpen = false;\n\t\tthis.modalShowCLass = modalShowCLass || 'show';\n\t\tthis.openCallback = openModalCallback || new Function();\n\t\tthis.closeCallback = closeModalCallback || new Function();\n\t\tthis.modal =\n\t\t\tmodal instanceof Element ? modal : document.querySelector(modal);\n\t}\n\n\tshow() {\n\t\t!this.isOpen && this.modal.classList.add(this.modalShowCLass);\n\t\tthis.isOpen = true;\n\n\t\tthis.openCallback(this);\n\t}\n\n\tclose() {\n\t\tthis.isOpen && this.modal.classList.remove(this.modalShowCLass);\n\t\tthis.isOpen = false;\n\n\t\tthis.closeCallback(this);\n\t}\n}\n","/**\n ** SKU IDs to ignore.\n *? IDs 19 and 698 are lifting products.\n *? IDs 25 and 26 are custom products.\n *? ID 33 is storage product.\n *? ID 35 is insurance sku.\n *? ID 696 is additional weight sku.\n *? ID 699 is disassembly and assembly sku.\n */\nexport default [19, 698, 25, 26, 33, 35, 696, 699];\n","// Services\nimport CartService from 'Services/b8one.cartService.js';\nimport VtexCatalogService from 'Services/b8one.vtexCatalogService.js';\n\n// Utils\nimport SKUS_TO_IGNORE from 'Utils/skusToIgnore';\n\nexport default class StorageService {\n  constructor() {\n    this.cartService = new CartService();\n    this.vtexCatalogService = new VtexCatalogService();\n  }\n\n  async getTotalStorageQuantity() {\n    const { items } = await this.cartService.getCurrent();\n\n    const productsWeightArray = await Promise.all(\n      items\n        .filter(product => !SKUS_TO_IGNORE.includes(parseInt(product.id)))\n        .map(async ({ productId, id, quantity }) => {\n          const { data } = await this.vtexCatalogService.getProductVariations(\n            productId\n          );\n\n          const skuSelected = data.skus.filter(\n            ({ sku }) => parseInt(sku) === parseInt(id)\n          )[0];\n\n          if (skuSelected) {\n            const { weight } = skuSelected.measures;\n            const total = weight * quantity;\n\n            return total;\n          }\n\n          return 0;\n        })\n    );\n\n    const totalWeight = Math.round(\n      productsWeightArray.reduce((total, weight) => total + weight, 0)\n    );\n\n    let storageQuantity = Math.round(totalWeight / 5);\n\n    storageQuantity = storageQuantity > 0 ? storageQuantity : 1;\n\n    return storageQuantity;\n  }\n\n  async addSKUStorageToOrderForm(storageSKUID, quantity) {\n    return await this.cartService.add(storageSKUID, quantity);\n  }\n\n  async removeSKUStorageInOrderForm(storageSKUID, products) {\n    const index = products.findIndex(\n      product => parseInt(product.id) === storageSKUID\n    );\n\n    if (index !== -1) {\n      return await this.cartService.remove(index);\n    }\n  }\n\n  async dispatchActionWorksWithStorageSKU(userSelectedStorageMonths = 1) {\n    const storageSKUID = 33;\n\n    const { customData, items } = await this.cartService.getCurrent();\n\n    if (!customData) return;\n\n    const orderInfo = customData.customApps.filter(\n      customApp => customApp.id === 'orderinfo'\n    )[0];\n\n    const storageProduct = items.filter(product => {\n      return parseInt(product.id) === storageSKUID;\n    })[0];\n\n    const totalSKUsInOrderForm = items.filter(\n      product => !SKUS_TO_IGNORE.includes(parseInt(product.id))\n    ).length;\n\n    if (!orderInfo) return;\n\n    let quantity = await this.getTotalStorageQuantity();\n\n    quantity *= userSelectedStorageMonths;\n\n    const { user_need_storage } = orderInfo.fields;\n\n    let isQuantityDifferent;\n\n    if (storageProduct) {\n      isQuantityDifferent = storageProduct.quantity !== quantity;\n    }\n\n    if (isQuantityDifferent && totalSKUsInOrderForm > 0) {\n      return await this.cartService.updateProduct(storageSKUID, quantity);\n    } else if (\n      user_need_storage.toLowerCase() === 'true' &&\n      totalSKUsInOrderForm > 0\n    ) {\n      return await this.addSKUStorageToOrderForm(storageSKUID, quantity);\n    } else {\n      return await this.removeSKUStorageInOrderForm(storageSKUID, items);\n    }\n  }\n}\n","/**\n * Ensure Abstraction class\n */\nclass Ensure {\n  /**\n   * Ensure value is Undefined\n   * @param {*} value Value to be validated\n   * @return {boolean}\n   */\n  static isUndefined(value = undefined) {\n    return typeof value === 'undefined' ||\n      value === null ||\n      value === '' ||\n      value === {} ||\n      value === [];\n    // || JSON.stringify(value) === JSON.stringify({});\n  }\n\n  /**\n   * Ensure Input validity\n   * @param {*} input to validate\n   * @return {boolean} true if is valid\n   */\n  static isInputValid(input) {\n    return !this.isUndefined(input) && input.checkValidity();\n  }\n\n  /**\n   * Verify if object has properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Boolean} True if object has all properties\n   */\n  static hasProps(object, props) {\n    const missingPropsResult = this.getMissingProps(object, props);\n    return missingPropsResult.length <= 0;\n  }\n\n  /**\n   * Get Object missing properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Array} missing properties\n   */\n  static getMissingProps(object, props) {\n    let missingProps = [];\n    [...props].forEach((prop) => {\n      const result = prop in object;\n      if (!result) {\n        missingProps.push(prop);\n      }\n    });\n\n    return missingProps;\n  }\n}\n\nexport default Ensure;\n","export default class InsuranceService {\n  constructor() {}\n\n  async updateInsuranceSKUPrice(price, skuIndex, orderFormId) {\n    if (skuIndex === -1 || !price) return;\n\n    const endpoint = `https://wcdlfckgi9.execute-api.us-east-2.amazonaws.com/v1/api/checkout/pub/orderform/${orderFormId}/items/${skuIndex}/price`;\n\n    return await (\n      await fetch(endpoint, {\n        method: 'PUT',\n        body: JSON.stringify({\n          price,\n        }),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n      })\n    ).json();\n  }\n}\n","export default class CustomSelect {\n  constructor({\n    selectElement,\n    customSelectList,\n    customSelectSelected,\n    customSelectListItemClassName,\n    customSelectListItemClassNameActive,\n    selectChangeCallback,\n    selectOpenCallback,\n    selectCloseCallback,\n  }) {\n    this.isOpen = false;\n\n    this.selectElement =\n      selectElement instanceof Element\n        ? selectElement\n        : document.querySelector(selectElement);\n\n    this.customSelectList =\n      customSelectList instanceof Element\n        ? customSelectList\n        : document.querySelector(customSelectList);\n\n    this.customSelectSelected =\n      customSelectSelected instanceof Element\n        ? customSelectSelected\n        : document.querySelector(customSelectSelected);\n\n    this.selectChangeCallback = selectChangeCallback || new Function();\n    this.selectOpenCallback = selectOpenCallback || new Function();\n    this.selectCloseCallback = selectCloseCallback || new Function();\n    this.customSelectListItemClassName = customSelectListItemClassName || '';\n    this.customSelectListItemClassNameActive =\n      customSelectListItemClassNameActive || '';\n\n    this.setCurrentSelectedItem();\n    this.createSelectList();\n    this.setListenerForCurrentSelected();\n  }\n\n  setCurrentSelectedItem() {\n    let { options, selectedIndex } = this.selectElement;\n\n    this.customSelectSelected.textContent = options[selectedIndex].textContent;\n  }\n\n  handleSelectChange(target) {\n    let { value } = this.selectElement;\n    let { value: newValue } = target.dataset;\n\n    const prevListItemActive = this.customSelectList.querySelector(\n      `.${this.customSelectListItemClassNameActive}`\n    );\n\n    if (prevListItemActive) {\n      prevListItemActive.classList.remove(\n        this.customSelectListItemClassNameActive\n      );\n    }\n\n    target.classList.add(this.customSelectListItemClassNameActive);\n\n    this.close();\n\n    if (value !== newValue) {\n      this.changeOption(newValue);\n    }\n  }\n\n  createSelectList() {\n    [...this.selectElement].forEach(option => {\n      const listItem = document.createElement('li');\n      listItem.setAttribute('class', this.customSelectListItemClassName);\n      listItem.dataset['value'] = option.value;\n\n      listItem.textContent = option.textContent.trim();\n\n      listItem.addEventListener('click', ({ target }) =>\n        this.handleSelectChange(target)\n      );\n\n      this.customSelectList.append(listItem);\n    });\n  }\n\n  setListenerForCurrentSelected() {\n    this.customSelectSelected.addEventListener('click', () => {\n      this.open();\n\n      document.body.addEventListener('click', ({ target }) => {\n        let close = !target.className.includes('custom-select');\n\n        if (close) this.close();\n      });\n    });\n  }\n\n  open(event = null) {\n    this.isOpen = true;\n    this.selectOpenCallback(event);\n    this.customSelectList.classList.add('open');\n  }\n\n  close() {\n    this.isOpen = false;\n    this.selectCloseCallback();\n    this.customSelectList.classList.remove('open');\n  }\n\n  changeOption(value) {\n    this.selectElement.value = value;\n\n    const eventChange = new Event('change', { bubbles: true });\n\n    this.selectElement.dispatchEvent(eventChange);\n\n    this.setCurrentSelectedItem();\n    this.selectChangeCallback({\n      value,\n    });\n  }\n}\n","/* eslint-disable max-len */\nimport { Logger } from './';\n\n/**\n * Helper Abstraction class\n */\nclass Helper {\n  /**\n   * Helper constructor\n   * @param {*} props\n   */\n  constructor(props) {\n    this._logger = new Logger('Ensure');\n    this.props = props || {\n      language: navigator.language || navigator.userLanguage,\n      currency: 'BRL',\n      currencyLocale: 'pt-br',\n      minimumFractionDigits: 2,\n    };\n  }\n\n  /**\n   * format currency\n   * @param {*} value\n   * @param {*} minimumFractionDigits\n   * @return {*}\n   */\n  formatPrice(value) {\n    value = value / 100;\n    value = (value * 1).toFixed(\n      Math.max(0, ~~this.props.minimumFractionDigits)\n    );\n\n    return new Intl.NumberFormat(this.props.currencyLocale, {\n      style: 'currency',\n      currency: this.props.currency,\n      minimumFractionDigits: this.props.minimumFractionDigits,\n    }).format(value);\n  }\n\n  static getParents(elem, selector) {\n    // Element.matches() polyfill\n    if (!Element.prototype.matches) {\n      Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\n              s\n            ),\n            i = matches.length;\n\n          while (--i >= 0 && matches.item(i) !== this) {}\n\n          return i > -1;\n        };\n    }\n\n    // Set up a parent array\n    let parents = [];\n\n    // Push each parent element to the array\n    for (; elem && elem !== document; elem = elem.parentNode) {\n      if (selector) {\n        if (elem.matches(selector)) {\n          parents.push(elem);\n        }\n\n        continue;\n      }\n\n      parents.push(elem);\n    }\n\n    // Return our parent array\n    return parents;\n  }\n\n  static serializeForm(form) {\n    // Setup our serialized data\n    let serialized = [];\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          serialized.push(\n            encodeURIComponent(field.name) +\n              '=' +\n              encodeURIComponent(field.options[n].value)\n          );\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        serialized.push(\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\n        );\n      }\n    }\n\n    return serialized.join('&');\n  }\n\n  static getFormData(form) {\n    // Setup our serialized data\n    let data = {};\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          data[field.name] = field.options[n].value;\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        data[field.name] = field.value;\n      }\n    }\n\n    return data;\n  }\n\n  static getRandomID() {\n    // Generate unique IDs for use as pseudo-private/protected names.\n    // Similar in concept to\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\n    //\n    // The goals of this function are twofold:\n    //\n    // * Provide a way to generate a string guaranteed to be unique when compared\n    //   to other strings generated by this function.\n    // * Make the string complex enough that it is highly unlikely to be\n    //   accidentally duplicated by hand (this is key if you're using `ID`\n    //   as a private/protected name on an object).\n    //\n    // Use:\n    //\n    //     var privateName = ID();\n    //     var o = { 'public': 'foo' };\n    //     o[privateName] = 'bar';\n\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n\n    return (\n      '_' +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  static setCookie(cname, cvalue, exdays) {\n    const date = new Date();\n\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\n\n    const expires = 'expires=' + date.toUTCString();\n\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\n  }\n\n  static getCookie(cname) {\n    const decodedCookie = decodeURIComponent(document.cookie);\n\n    const cookie = decodedCookie\n      .split(';')\n      .filter(cookie => cookie.includes(cname))[0];\n\n    return cookie || '';\n  }\n\n  static isInViewport(element) {\n    const heightViewport =\n      window.innerHeight || document.documentElement.clientHeight;\n\n    const widthViewport =\n      window.innerWidth || document.documentElement.clientWidth;\n\n    const { top, right, bottom, left } = element.getBoundingClientRect();\n\n    return (\n      top >= 0 &&\n      left >= 0 &&\n      bottom <= heightViewport &&\n      right <= widthViewport\n    );\n  }\n\n  static removeAccents(str) {\n    const mapAccents = {\n      a: 'á|à|ã|â|À|Á|Ã|Â',\n      e: 'é|è|ê|É|È|Ê',\n      i: 'í|ì|î|Í|Ì|Î',\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n      c: 'ç|Ç',\n      n: 'ñ|Ñ',\n    };\n\n    for (let pattern in mapAccents) {\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\n    }\n\n    return str;\n  }\n}\n\nexport default Helper;\n","/* eslint no-console: 0 */\n\n/**\n * Logger Abstraction class\n */\nclass Logger {\n  /**\n   * Logger constructor\n   * @param {string} logName Application name to log\n   */\n  constructor(logName = 'B8ONE Logger Component') {\n    this.logName = logName;\n  }\n\n  /**\n   * Log error message\n   * @param {*} message - Message text\n   * @param {*} errorObj - Message object\n   */\n  error(message = '', errorObj = {}) {\n    console.error(message, errorObj);\n  }\n\n  /**\n   * Log information message\n   * @param {*} message - Message text\n   */\n  info(message = '') {\n    console.info(message);\n  }\n\n  /**\n   * Log warning message\n   * @param {*} message - Message text\n   */\n  warning(message = '') {\n    console.warn(this.logName, message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   */\n  log(message = '') {\n    console.log(message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   * @param {*} object - object to be logged\n   */\n  log(message = '', object = {}) {\n    console.log(message, object);\n  }\n}\n\nexport default Logger;\n","/* eslint-disable max-len */\n\nimport { Ensure, Logger } from '../common';\nimport HttpClient from './b8one.httpClient';\n\n/**\n * Cart Abstraction class\n */\nclass CartService {\n  /**\n   * Cart constructor\n   */\n  constructor() {\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\n\n    this._logger = new Logger('Cart service');\n    this._httpClient = new HttpClient();\n  }\n\n  /**\n   * Get current cart\n   * @return {*} Cart object\n   */\n  async getCurrent() {\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\n  }\n\n  /**\n   * Add item to cart\n   * @param {*} skuId - Product sku Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   */\n  async add(skuId, productQuantity, sellerId = 1) {\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\n\n    if (!Ensure.isUndefined(skuId)) {\n      const current = await this.getCurrent();\n      const indexFound = current.items.findIndex(x => x.id === skuId);\n\n      if (indexFound > -1) {\n        productQuantity =\n          parseInt(productQuantity) +\n          parseInt(current.items[indexFound].quantity);\n      }\n\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n\n      const payload = {\n        orderItems: [\n          {\n            seller: sellerId.toString(),\n            quantity: parseInt(productQuantity),\n            id: skuId.toString(),\n          },\n        ],\n      };\n\n      return this._httpClient.patch(endpointUrl, payload);\n    }\n  }\n\n  async checkoutCRUD(skus) {\n    let { items } = await window.vtexjs.checkout.getOrderForm();\n\n    const skusCustomProducts = this.getCustomProducts(skus);\n\n    skus = skus.filter(sku => !sku.isCustom);\n    skus = [...skus, ...skusCustomProducts];\n\n    const skuToIgnore = [19, 698, 25, 26];\n\n    const indexToRemove = items.reduce((indexList, item, index) => {\n      const customProductSKUs = [25, 26];\n\n      if (customProductSKUs.includes(parseInt(item.id))) {\n        return [...indexList, index];\n      }\n\n      return indexList;\n    }, []);\n\n    if (indexToRemove.length > 0) {\n      const response = await this.removeMoreProducts(indexToRemove);\n\n      response && (items = response.items);\n    }\n\n    const productsToAdd = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        let index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        return index === -1 && sku.quantity > 0;\n      })\n      .map(sku => ({\n        quantity: sku.quantity,\n        seller: 1,\n        id: sku.skuId || sku.id,\n      }));\n\n    console.log('productsToAdd', productsToAdd);\n\n    const productsToUpdate = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\n          const diffQuantity =\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\n\n          return sameSku && diffQuantity && sku.quantity > 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: sku.quantity,\n        };\n      });\n\n    console.log('productsToUpdate', productsToUpdate);\n\n    const productsToReplaceSKU = skus\n      .filter(\n        sku =>\n          sku.quantity > 0 &&\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\n      )\n      .filter(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        if (index !== -1) {\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\n\n          return diffSku;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        const oldSKU = {\n          index,\n          seller: 1,\n          quantity: 0,\n        };\n\n        const newSKU = {\n          seller: 1,\n          id: sku.skuId,\n          quantity: sku.quantity,\n        };\n\n        return [oldSKU, newSKU];\n      })\n      .reduce((itemsList, current) => {\n        const [oldSKU, newSKU] = current;\n\n        return [...itemsList, oldSKU, newSKU];\n      }, []);\n\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\n\n    const productsToRemove = skus\n      .filter(sku => sku.quantity < 1)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          return sku.quantity == 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: 0,\n        };\n      });\n\n    console.log('productsToRemove', productsToRemove);\n\n    if (productsToUpdate[0]) {\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\n    }\n\n    if (productsToReplaceSKU[0]) {\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\n    }\n\n    if (productsToRemove[0]) {\n      await window.vtexjs.checkout.removeItems(productsToRemove);\n    }\n\n    if (productsToAdd[0]) {\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\n    }\n  }\n\n  getCustomProducts(skus) {\n    const customProducts = {};\n\n    skus\n      .filter(({ isCustom }) => isCustom === true)\n      .forEach(({ skuId, quantity, customProductItem }) => {\n        let currentCustomProduct = customProducts[skuId];\n\n        const customProductQuantity =\n          parseInt(customProductItem.quantity) * parseInt(quantity);\n\n        if (currentCustomProduct) {\n          const newQuantity =\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\n\n          currentCustomProduct = {\n            ...currentCustomProduct,\n            quantity: newQuantity,\n          };\n        } else {\n          currentCustomProduct = {\n            ...customProductItem,\n            quantity: customProductQuantity,\n            isCustom: true,\n          };\n        }\n\n        customProducts[skuId] = currentCustomProduct;\n      });\n\n    return Object.values(customProducts);\n  }\n\n  async getProductIndexInOrderForm(productId) {\n    const { items } = await this.getCurrent();\n\n    const index = items.findIndex(item => item.productId == productId);\n\n    if (index !== -1) return index;\n\n    return;\n  }\n\n  /**\n   * Remove item to cart\n   * @param {JSON} itemIndex - Product item index to be removed\n   */\n  async remove(itemIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: [\n        {\n          index: itemIndex,\n          quantity: 0,\n        },\n      ],\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  /**\n   * Remove items of cart\n   * @param {Array} itemsIndex - Products items index to be removed\n   */\n  async removeMoreProducts(itemsIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: itemsIndex.map(index => ({\n        index,\n        quantity: 0,\n      })),\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    return await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  async updateProduct(skuId, quantity, seller = 1) {\n    const newSKU = {\n      seller,\n      quantity,\n      id: skuId,\n    };\n\n    return await this.updateProducts([newSKU]);\n  }\n\n  async updateProducts(skus) {\n    const { items, orderFormId } = await this.getCurrent();\n\n    skus = skus\n      .map(({ id, quantity, seller }) => {\n        const index = items.findIndex(\n          item => parseInt(item.id) === parseInt(id)\n        );\n\n        return {\n          id,\n          index,\n          quantity,\n          seller: seller || 1,\n        };\n      })\n      .filter(sku => sku.index !== -1);\n\n    if (skus.length > 0) {\n      const payload = {\n        orderItems: skus,\n      };\n\n      return await this._httpClient.patch(\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\n        payload\n      );\n    }\n  }\n\n  async simulateOrderForm(postalCode, country = 'BRA') {\n    try {\n      await vtexjs.checkout.getOrderForm();\n\n      const orderForm = await vtexjs.checkout.calculateShipping({\n        postalCode,\n        country,\n      });\n\n      return orderForm;\n    } catch (error) {\n      console.error('Error in simulateOrderForm', error);\n    }\n  }\n\n  async simulateShipping(items, postalCode, country = 'BRA') {\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\n      items,\n      postalCode,\n      country\n    );\n\n    return orderFormSimulated;\n  }\n\n  async updateCheckoutTransporterSLA(logisticsInfo) {\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.logisticsInfo = logisticsInfo;\n\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async updateCheckoutAddress(address) {\n    console.log(address);\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.availableAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.selectedAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.address = {\n      ...shippingData.address,\n      ...address,\n    };\n\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async setMultipleCustomDataFields(appName, fields) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\n\n    try {\n      return await this._httpClient.put(endpoint, fields);\n    } catch (error) {\n      console.error('setMultipleCustomDataFields', error);\n    }\n\n    return;\n  }\n\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: appFieldValue };\n\n    try {\n      return await this._httpClient.put(endpoint, payload);\n    } catch (error) {\n      console.error('setSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  async removeSingleCustomDataField(appName, appFieldName) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: null };\n\n    try {\n      return await this._httpClient.delete(endpoint, payload);\n    } catch (error) {\n      console.error('removeSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  /**\n   * Cart's payload method factory\n   * @param {*} skuId - Product Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   * @return {JSON} cart paylod\n   */\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\n    return {\n      id: skuId,\n      quantity: productQuantity,\n      seller: sellerId,\n    };\n  }\n}\n\nexport default CartService;\n","import fetch from 'unfetch';\nimport { Ensure, Logger } from '../common';\n\n/**\n * HttpClient Abstraction class\n */\nclass HttpClient {\n  /**\n   * HttpClient constructor\n   */\n  constructor() {\n    this._logger = new Logger('httpClient');\n  }\n\n  /**\n   * Get\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  get(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'GET');\n    }\n  }\n\n  /**\n   * Delete\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  delete(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'DELETE');\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  post(endpointUrl, payload = {}) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'POST', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  put(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PUT', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  patch(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PATCH', payload);\n    }\n  }\n\n  /**\n   * @param {String} endpointUrl\n   * @param {String} httpVerb\n   * @param {Object} payload\n   * @return {Promise}\n   */\n  _execute(endpointUrl, httpVerb, payload) {\n    let header = {\n      method: httpVerb,\n      headers: {\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\n        // 'Content-Type': 'application/json',\n        accept: 'application/vnd.vtex.masterdata.v10+json',\n        'content-type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (payload) {\n      header['body'] = JSON.stringify(payload);\n    }\n\n    return fetch(endpointUrl, header)\n      .then(this.validateResponse)\n      .then(this.parseResponseToJson)\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        this._logger.log('Request succeeded with JSON response', error);\n        return error;\n      });\n  }\n\n  /**\n   * Parse response data to json object\n   * @param {*} response - Request response\n   * @return {JSON} json data\n   */\n  async parseResponseToJson(response) {\n    if (!response.ok) {\n      return response;\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Response validation\n   * @param {*} response\n   * @return {Promise} promise result\n   */\n  validateResponse(response) {\n    if (response.ok) {\n      return Promise.resolve(response);\n    } else {\n      return Promise.reject(new Error(response.statusText));\n    }\n  }\n}\n\nexport default HttpClient;\n","// Commons\nimport { Helper } from 'Commons';\n\n// Components\nimport ModalComponent from 'Components/b8one.modalComponent.js';\nimport CustomSelect from 'Components/b8one.customSelect.js';\n\n// Services\nimport HttpClient from 'Services/b8one.httpClient';\nimport CartService from 'Services/b8one.cartService.js';\nimport StorageService from 'Services/b8one.storageService.js';\nimport InsuranceService from 'Services/b8one.insuranceService.js';\nimport AddressRepository from 'Repositories/b8one.addressRepository.js';\n\n// Utils\nimport { REAL } from 'Utils/currency/';\nimport SKUS_TO_IGNORE from 'Utils/skusToIgnore';\n\n// Dependencies\nimport flatpickr from 'flatpickr';\nimport { Portuguese } from 'flatpickr/dist/l10n/pt.js';\nimport 'dayjs/locale/pt-br';\nimport dayjs from 'dayjs';\n\nclass OrderSummaryPage {\n  constructor() {\n    this.products = {};\n    this.addressCep = null;\n    this.logisticsInfo = null;\n    this.dateSelected = null;\n    this.modalDate = null;\n    this.calendarInstance = null;\n    this.insuranceItems = {};\n    this.cartService = new CartService();\n    this.httpClient = new HttpClient();\n    this.storageService = new StorageService();\n    this.addressRepository = new AddressRepository();\n    this.insuranceService = new InsuranceService();\n    this.helper = new Helper();\n    this.userIsDefined = null;\n\n    this.orderForm = {};\n\n    this.transporterSelected;\n    this.totalInsuranceFormatted;\n\n    this.totalInsurance = REAL('R$ 0,00');\n    this.totalOrderSummary = REAL('R$ 0,00');\n    this.totalTransporterSelected = REAL('R$ 0,00');\n    this.totalStorageMonth = 'R$ 0,00';\n    this.totalStorage = REAL('R$ 0,00');\n    this.userSelectedStorageMonths = 1;\n\n    this.totalizers = [];\n    this.customSelectStorageServiceInstance = null;\n    this.logisticsInfo = [];\n\n    this.liftingQuantity = 0;\n    this.lifting = 'içamento na origem e destino';\n\n    this.tableContentElement = document.querySelector(\n      '.summary-table .table__content'\n    );\n\n    window.OrderSummaryPage = this;\n\n    this.init();\n  }\n\n  async init() {\n    const user = await $.get('/no-cache/profileSystem/getProfile');\n    this.userIsDefined = user.IsUserDefined;\n\n    this.initModalRemoveProduct();\n    this.initModalDate();\n    this.initTermsModal();\n    this.setHandledTermsCheckboxChange();\n    this.handleGoToPaymentButton();\n\n    this.setHandledButtonEditDateClick();\n    this.setHandledButtonSaveClick();\n\n    this.updateOrderForm(await this.cartService.getCurrent());\n\n    await this.updateShippingData();\n\n    this.logisticsInfo = this.orderForm.shippingData.logisticsInfo;\n\n    this.getStorageMonths();\n    this.setTransporterSelected();\n    this.setTotalInsurance();\n    this.getProductsInCustomData();\n    this.setDate();\n    this.getAddress();\n    this.getInsuranceItems();\n    this.setAddressCep();\n    this.getLiftingFromCustomData();\n\n    this.addServicesToDOM();\n\n    this.updateSelectedSLA();\n    this.initCalendar();\n\n    this.setTotalTransporterSelected();\n    this.setTotalOrderSummary();\n\n    this.setTotalTransporterSelectedElement();\n    this.setTotalInsuranceElement();\n    this.setTotalOrderSummaryElement();\n\n    const transporterHTML = this.createTransporterElement(\n      this.transporterSelected\n    );\n    const orderFormProductsHTML = this.createProductstInOrderForm();\n    const customProductsHTML = this.createCustomProducts();\n\n    this.addTransporterToDOM(transporterHTML);\n    this.addOrderFormProductsToDOM(orderFormProductsHTML);\n    this.addCustomProductsToDOM(customProductsHTML);\n\n    this.shippingExplained();\n\n    this.setHandledProducts();\n    this.setHandledTransporterElement();\n    this.setHandledUpdateButtonClick();\n\n    this.removePageLoading();\n\n    this.showInsuranceValue(); //if not basic\n  }\n\n  // transporterSelected.nome\n  showInsuranceValue() {\n    console.log(this.transporterSelected.nome);\n    if (this.transporterSelected.nome != 'Básico') {\n      console.log(this.transporterSelected.nome);\n      var elems = document.querySelectorAll('.total.d-none');\n      [].forEach.call(elems, function (el) {\n        el.classList.remove('d-none');\n      });\n    }\n  }\n\n  shippingExplained() {\n    const shippingLink = document.querySelector(\n      'a[href=\"#entenda-o-prazo-de-entrega-da-sua-mudanca\"]'\n    );\n    const shippingDateContainer = document.querySelector(\n      '#entenda-o-prazo-de-entrega-da-sua-mudanca'\n    );\n    if (shippingLink == null || !shippingDateContainer == null) return;\n    document\n      .querySelector('a[href=\"#entenda-o-prazo-de-entrega-da-sua-mudanca\"]')\n      .addEventListener('click', e => {\n        e.preventDefault();\n\n        const shippingDateContainer = document.querySelector(\n          '#entenda-o-prazo-de-entrega-da-sua-mudanca'\n        );\n        const header = document.querySelector('.header');\n\n        window.scrollTo(\n          0,\n          shippingDateContainer.offsetTop - (header.offsetHeight + 48)\n        );\n      });\n  }\n\n  updateOrderForm(orderForm) {\n    if (orderForm) {\n      this.orderForm = orderForm;\n    }\n  }\n\n  getLiftingFromCustomData() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'orderinfo')\n      .forEach(customApp => {\n        const { lifting } = customApp.fields;\n\n        if (lifting) {\n          this.lifting = lifting;\n        }\n      });\n  }\n\n  initCalendar() {\n    this.calendarInstance = flatpickr('.js-calendar', {\n      inline: true,\n      dateFormat: 'd/m/Y',\n      minDate: new Date().fp_incr(7),\n      defaultDate: this.dateSelected,\n      locale: Portuguese,\n      appendTo: document.querySelector('.js-calendar'),\n      prevArrow: '<i class=\"fas fa-caret-left next-month-icon-left\"></i>',\n      nextArrow: '<i class=\"fas fa-caret-right next-month-icon-right\"></i>',\n      disable: [\n        function (date) {\n          return date.getDay() === 0 || date.getDay() === 6;\n        },\n      ],\n    });\n\n    this.calendarInstance.setDate(new Date(this.dateSelected));\n  }\n\n  setTotalTransporterSelected() {\n    const { priceFormatted } = this.transporterSelected.deliveryTypeSelected;\n\n    this.totalTransporterSelected = this.totalTransporterSelected.add(\n      priceFormatted\n    );\n  }\n\n  initTermsModal() {\n    const modal = document.querySelector('.modal__terms');\n    const btnContinue = modal.querySelector('.js-button-continue');\n    const btnClose = modal.querySelector('.js-button-close-modal');\n\n    this.modalTerms = new ModalComponent({\n      modal: modal,\n      modalShowCLass: 'wrapper-modal--show',\n    });\n\n    btnContinue.addEventListener('click', async () => {\n      btnContinue.classList.add('js-loading');\n\n      await this.saveData();\n\n      this.updateInsuranceValue();\n\n      await this.updateTranspoterValue();\n\n      btnContinue.classList.remove('js-loading');\n\n      if (this.userIsDefined) {\n        window.location.assign('/checkout/#/payment');\n      } else {\n        this.loginUser();\n      }\n    });\n\n    btnClose.addEventListener('click', () => this.modalTerms.close());\n  }\n\n  async updateShippingData() {\n    if (this.userIsDefined) {\n      const {\n        customData,\n        totalizers,\n        clientProfileData,\n        shippingData,\n      } = this.orderForm;\n\n      if (!customData) return;\n\n      const customAppOrderInfo = customData.customApps.filter(\n        customApp => customApp.id === 'orderinfo'\n      )[0];\n\n      if (customAppOrderInfo) {\n        const address = {\n          addressType: 'residential',\n          city: customAppOrderInfo.fields.to_city,\n          neighborhood: customAppOrderInfo.fields.to_address_county,\n          number: customAppOrderInfo.fields.to_address_number,\n          postalCode: customAppOrderInfo.fields.to_address_zipcode,\n          state: customAppOrderInfo.fields.to_state,\n          street: customAppOrderInfo.fields.to_address_name,\n          receiverName:\n            clientProfileData.firstName && clientProfileData.lastName\n              ? `${clientProfileData.firstName} ${clientProfileData.lastName}`\n              : clientProfileData.email.split('@')[0].replace(/\\W/g, ''),\n        };\n\n        const shippingTotalizer = totalizers.filter(\n          ({ id }) => id === 'Shipping'\n        )[0];\n\n        const orderInfoApp = customData.customApps.filter(\n          customApp => customApp.id === 'orderinfo'\n        )[0];\n\n        if (!shippingTotalizer) {\n          await window.vtexjs.checkout.getOrderForm();\n          await window.vtexjs.checkout.calculateShipping({\n            postalCode: orderInfoApp.fields.to_address_zipcode,\n            country: 'BRA',\n          });\n        }\n\n        this.updateOrderForm(\n          await this.cartService.updateCheckoutAddress(address)\n        );\n\n        this.updateOrderForm(\n          await this.cartService.updateCheckoutTransporterSLA(\n            this.logisticsInfo\n          )\n        );\n\n        await this.addressRepository.removeAllAddressesByUserEmail(\n          clientProfileData.email\n        );\n        await this.addressRepository.addAddressToUser({\n          ...address,\n          userId: clientProfileData.email,\n          addressName: shippingData.address.addressId,\n        });\n\n        if (window.location.search.indexOf('?logged=true') > -1) {\n          window.location.assign('/checkout/#/payment');\n        }\n      }\n    }\n\n    return;\n  }\n\n  loginUser() {\n    vtexid.start({\n      returnUrl: `${window.location.href}?logged=true`,\n      locale: 'pt-BR',\n      forceReload: false,\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  handleGoToPaymentButton() {\n    const btn = [...document.querySelectorAll('.js-toPayment-button')];\n\n    btn.forEach(item =>\n      item.addEventListener('click', () => {\n        this.modalTerms.show();\n      })\n    );\n  }\n\n  setHandledTermsCheckboxChange() {\n    const modalTerms = document.querySelector('.modal__terms');\n    const buttonContinue = document.querySelector(\n      '.modal__terms .js-button-continue'\n    );\n\n    modalTerms.addEventListener('change', e => {\n      const inputCheckboxes = [\n        ...document.querySelectorAll('.modal__terms .modal__fakeInput'),\n      ];\n\n      const allChecked = !inputCheckboxes\n        .map(input => input.checked)\n        .includes(false);\n\n      if (allChecked) {\n        buttonContinue.removeAttribute('disabled');\n      } else {\n        buttonContinue.setAttribute('disabled', true);\n      }\n    });\n  }\n\n  setTotalTransporterSelectedElement() {\n    const totalTransporterSelectedElements = [\n      ...document.querySelectorAll('.js-total-transporter-selected'),\n    ];\n\n    totalTransporterSelectedElements.forEach(item => {\n      item.textContent = this.totalTransporterSelected.format();\n    });\n  }\n\n  setTotalInsuranceElement() {\n    const totalInsuranceElements = [\n      ...document.querySelectorAll('.js-value-insurance'),\n    ];\n\n    totalInsuranceElements.forEach(item => {\n      item.textContent = this.totalInsurance.multiply(0.01).format();\n    });\n  }\n\n  setTotalInsurance() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'insurance')\n      .forEach(customApp => {\n        const { total } = customApp.fields;\n\n        if (total) {\n          this.totalInsurance = this.totalInsurance.add(total);\n          this.totalInsuranceFormatted = this.totalInsurance.format();\n        }\n      });\n  }\n\n  setTotalOrderSummaryElement() {\n    const totalOrderSummaryElements = [\n      ...document.querySelectorAll('.js-total-order-summary'),\n    ];\n\n    totalOrderSummaryElements.forEach(item => {\n      item.textContent = this.totalOrderSummary.format();\n    });\n  }\n\n  setTotalOrderSummary() {\n    this.totalOrderSummary = this.totalOrderSummary\n      .add(this.totalTransporterSelected.format())\n      .add(this.totalInsurance.multiply(0.01).format());\n  }\n\n  initModalRemoveProduct() {\n    const modalRemoveProduct = document.querySelector('.modal--remove-product');\n    const modalRemoveProductButtonClose = modalRemoveProduct.querySelector(\n      '.modal__close'\n    );\n\n    const buttonRemoveProduct = modalRemoveProduct.querySelector(\n      '.js-button-remove-product'\n    );\n\n    const buttonCancelRemove = modalRemoveProduct.querySelector(\n      '.js-button-cancel-remove-product'\n    );\n\n    this.modalRemoveProductInstance = new ModalComponent({\n      modal: modalRemoveProduct,\n      modalShowCLass: 'wrapper-modal--show',\n      closeModalCallback: () => {\n        if (Object.keys(this.products).length == 1) {\n          this.hideErrorRemoveProductMessage();\n        }\n      },\n    });\n\n    buttonRemoveProduct.addEventListener('click', ({ target }) => {\n      const { productIdToRemove } = target.dataset;\n\n      if (Object.keys(this.products).length > 1) {\n        this.handledConfirmRemoveProduct(\n          productIdToRemove,\n          this.products[productIdToRemove]\n        );\n        this.modalRemoveProductInstance.close();\n      } else {\n        this.showErrorRemoveProductMessage();\n      }\n    });\n\n    [modalRemoveProductButtonClose, buttonCancelRemove].forEach(button => {\n      button.addEventListener('click', e =>\n        this.modalRemoveProductInstance.close()\n      );\n    });\n  }\n\n  showErrorRemoveProductMessage() {\n    const modalRemoveErrorMessageElement = document.querySelector(\n      '.modal--remove-product .modal__paragraph--error'\n    );\n\n    modalRemoveErrorMessageElement.classList.add(\n      'modal__paragraph--error-show'\n    );\n  }\n\n  hideErrorRemoveProductMessage() {\n    const modalRemoveErrorMessageElement = document.querySelector(\n      '.modal--remove-product .modal__paragraph--error'\n    );\n\n    modalRemoveErrorMessageElement.classList.remove(\n      'modal__paragraph--error-show'\n    );\n  }\n\n  initModalDate() {\n    const modalDate = document.querySelector('.modal-date');\n\n    const modalDateButtonClose = modalDate.querySelector('.modal__close');\n\n    const buttonContinue = modalDate.querySelector('.js-button-continue');\n\n    const buttonCancel = modalDate.querySelector('.js-button-cancel');\n\n    this.modalDate = new ModalComponent({\n      modal: modalDate,\n      modalShowCLass: 'wrapper-modal--show',\n    });\n\n    buttonContinue.addEventListener('click', ({ target }) => {\n      const formattedDate = this.calendarInstance.formatDate(\n        this.calendarInstance.selectedDates[0],\n        'Y/m/d'\n      );\n\n      this.dateSelected = formattedDate;\n\n      this.updateCalendarComponent(formattedDate);\n\n      this.modalDate.close();\n    });\n\n    [modalDateButtonClose, buttonCancel].forEach(button => {\n      button.addEventListener('click', e => this.modalDate.close());\n    });\n  }\n\n  setHandledButtonEditDateClick() {\n    const buttonEdit = document.querySelector('.card__button--edit');\n\n    buttonEdit.addEventListener('click', e => {\n      this.modalDate.show();\n    });\n  }\n\n  setHandledTransporterElement() {\n    const transporter = document.querySelector('.transporter');\n\n    const priceElements = [...transporter.querySelectorAll('.price')];\n\n    priceElements.forEach(priceElement => {\n      priceElement.addEventListener('change', event => {\n        const prevPriceElementActive = document.querySelector('.price--active');\n\n        if (prevPriceElementActive) {\n          prevPriceElementActive.classList.remove('price--active');\n\n          const prevPriceElementActiveCheckbox = prevPriceElementActive.querySelector(\n            'input[type=\"checkbox\"]'\n          );\n\n          prevPriceElementActiveCheckbox.checked = false;\n        }\n\n        priceElement.classList.add('price--active');\n\n        const priceElementCheckbox = priceElement.querySelector(\n          'input[type=\"checkbox\"]'\n        );\n\n        priceElementCheckbox.checked = true;\n\n        const { transporterDeliveryType } = priceElement.dataset;\n\n        transporter.setAttribute(\n          'data-transporter-delivery-type-selected',\n          transporterDeliveryType\n        );\n\n        this.setTransporterSelected(transporter);\n      });\n    });\n  }\n\n  setHandledProduct(product) {\n    const buttonMinusQuantity = product.querySelector(\n      '.product__quantity--minus'\n    );\n    const buttonAddQuantity = product.querySelector('.product__quantity--add');\n    const inputCheckbox = product.querySelector('.js-input-special-packaging');\n\n    const buttonRemove = product.querySelector('.product__remove-button');\n\n    const inputProductQuantity = product.querySelector('.product__quantity');\n    const inputProductActive = product.querySelector(\n      '.js-input-product-active'\n    );\n\n    const inputProductRequiredLiftingOrigin = product.querySelector(\n      '.js-input-lifting-origin'\n    );\n\n    const inputProductRequiredLiftingDestination = product.querySelector(\n      '.js-input-lifting-destination'\n    );\n\n    buttonMinusQuantity.addEventListener('click', event =>\n      this.handledMinusQuantityProduct(event, product)\n    );\n\n    buttonAddQuantity.addEventListener('click', event =>\n      this.handledAddQuantityProduct(event, product)\n    );\n\n    inputCheckbox &&\n      inputCheckbox.addEventListener('change', event =>\n        this.handledSpecialPackagingProduct(event, product)\n      );\n\n    buttonRemove.addEventListener('click', event =>\n      this.handledRemoveProductClick(event, product)\n    );\n\n    inputProductQuantity.addEventListener('input', event =>\n      this.handledProductQuantityChange(event, product)\n    );\n\n    inputProductActive.addEventListener('change', event =>\n      this.handledProductActiveChange(event, product)\n    );\n\n    inputProductRequiredLiftingOrigin &&\n      inputProductRequiredLiftingOrigin.addEventListener('change', event =>\n        this.handledLiftingOriginProduct(event, product)\n      );\n\n    inputProductRequiredLiftingDestination &&\n      inputProductRequiredLiftingDestination.addEventListener('change', event =>\n        this.handledLiftingDestinationProduct(event, product)\n      );\n  }\n\n  setHandledProducts() {\n    const products = [...document.querySelectorAll('.summary-table .product')];\n\n    products.forEach(product => this.setHandledProduct(product));\n  }\n\n  setTotalizers(totalizers) {\n    this.totalizers = totalizers;\n  }\n\n  setTransporterSelected(transporterElement = null) {\n    if (!transporterElement) {\n      const { customData } = this.orderForm;\n\n      if (!customData) return;\n\n      customData.customApps\n        .filter(customApp => customApp.id === 'selectedcourier')\n        .forEach(customApp => {\n          const { courier_data } = customApp.fields;\n\n          this.transporterSelected = JSON.parse(courier_data);\n\n          this.orderDeliveryTypesByLessPrice();\n        });\n    } else {\n      const { transporterDeliveryTypeSelected } = transporterElement.dataset;\n\n      this.transporterSelected.deliveryTypeSelected = this.transporterSelected.deliveryTypes.filter(\n        ({ type }) => type === transporterDeliveryTypeSelected\n      )[0];\n    }\n  }\n\n  handledAddQuantityProduct(event, product) {\n    const { productId } = product.dataset;\n    const productQuantityElement = product.querySelector('.product__quantity');\n\n    const quantity = (product.dataset.productQuantity = ++productQuantityElement.value);\n\n    this.products[productId].quantity = quantity;\n\n    this.products[productId].liftingQuantity = this.products[productId]\n      .requiresLifting\n      ? 1 * parseInt(quantity)\n      : 0;\n\n    if (this.lifting === 'içamento na origem e destino') {\n      this.products[productId].liftingQuantityOrigin = this.products[\n        productId\n      ].liftingQuantity;\n      this.products[productId].liftingQuantityDestination = this.products[\n        productId\n      ].liftingQuantity;\n    } else if (this.lifting === 'içamento no origem') {\n      this.products[productId].liftingQuantityOrigin = this.products[\n        productId\n      ].liftingQuantity;\n    } else {\n      this.products[productId].liftingQuantityDestination = this.products[\n        productId\n      ].liftingQuantity;\n    }\n  }\n\n  handledMinusQuantityProduct(event, product) {\n    const { productId, productQuantity } = product.dataset;\n    const productQuantityElement = product.querySelector('.product__quantity');\n\n    if (productQuantity * 1 > 1) {\n      const newQuantity = (product.dataset.productQuantity = --productQuantityElement.value);\n\n      this.products[productId].quantity = newQuantity;\n\n      this.products[productId].liftingQuantity = this.products[productId]\n        .requiresLifting\n        ? 1 * parseInt(newQuantity)\n        : 0;\n\n      if (this.lifting === 'içamento na origem e destino') {\n        this.products[productId].liftingQuantityOrigin = this.products[\n          productId\n        ].liftingQuantity;\n        this.products[productId].liftingQuantityDestination = this.products[\n          productId\n        ].liftingQuantity;\n      } else if (this.lifting === 'içamento no origem') {\n        this.products[productId].liftingQuantityOrigin = this.products[\n          productId\n        ].liftingQuantity;\n      } else {\n        this.products[productId].liftingQuantityDestination = this.products[\n          productId\n        ].liftingQuantity;\n      }\n    }\n  }\n\n  handledProductQuantityChange(event, product) {\n    const { value } = event.target;\n    const { productId } = product.dataset;\n\n    if (value > 0) {\n      this.products[productId].quantity = value;\n      product.dataset.productQuantity = value;\n\n      this.products[productId].liftingQuantity = this.products[productId]\n        .requiresLifting\n        ? 1 * parseInt(value)\n        : 0;\n\n      if (this.lifting === 'içamento na origem e destino') {\n        this.products[productId].liftingQuantityOrigin = this.products[\n          productId\n        ].liftingQuantity;\n        this.products[productId].liftingQuantityDestination = this.products[\n          productId\n        ].liftingQuantity;\n      } else if (this.lifting === 'içamento no origem') {\n        this.products[productId].liftingQuantityOrigin = this.products[\n          productId\n        ].liftingQuantity;\n      } else {\n        this.products[productId].liftingQuantityDestination = this.products[\n          productId\n        ].liftingQuantity;\n      }\n    }\n  }\n\n  handledSpecialPackagingProduct(event, product) {\n    const { checked } = event.target;\n    let { productId, skuIdWithBox, skuIdWithoutBox } = product.dataset;\n\n    product.dataset.productSpecialPackaging = checked;\n\n    const currentProduct = this.products[productId];\n\n    skuIdWithBox *= 1;\n    skuIdWithoutBox *= 1;\n\n    currentProduct.specialPackaging = checked;\n    currentProduct.skuId = checked ? skuIdWithBox : skuIdWithoutBox;\n\n    if (currentProduct.isCustom) {\n      currentProduct.customProductItem.id = currentProduct.skuId;\n    }\n  }\n\n  handledProductActiveChange(event, product) {\n    const { checked } = event.target;\n    const { productId } = product.dataset;\n\n    this.products[productId].active = checked;\n  }\n\n  handledLiftingOriginProduct(event, product) {\n    const { checked } = event.target;\n    const { productId } = product.dataset;\n\n    if (checked) {\n      this.products[productId].liftingQuantityOrigin = this.products[\n        productId\n      ].liftingQuantity;\n    } else {\n      this.products[productId].liftingQuantityOrigin = 0;\n    }\n\n    if (\n      this.products[productId].liftingQuantityOrigin > 0 ||\n      this.products[productId].liftingQuantityDestination > 0\n    ) {\n      this.products[productId].requiresLifting = true;\n    } else {\n      this.products[productId].requiresLifting = false;\n    }\n  }\n\n  handledLiftingDestinationProduct(event, product) {\n    const { checked } = event.target;\n    const { productId } = product.dataset;\n\n    if (checked) {\n      this.products[productId].liftingQuantityDestination = this.products[\n        productId\n      ].liftingQuantity;\n    } else {\n      this.products[productId].liftingQuantityDestination = 0;\n    }\n\n    if (\n      this.products[productId].liftingQuantityOrigin > 0 ||\n      this.products[productId].liftingQuantityDestination > 0\n    ) {\n      this.products[productId].requiresLifting = true;\n    } else {\n      this.products[productId].requiresLifting = false;\n    }\n  }\n\n  createProductForModalRemove(productName, imgURL, description = '') {\n    const productHTML = document.createElement('article');\n\n    productHTML.setAttribute('class', 'product');\n\n    productHTML.innerHTML += `\n      <figure class=\"product__figure\">\n        <img \n          class=\"product__image js-modal-product-image\"\n          src=\"${imgURL}\"\n          alt=\"${productName}\"\n        />\n      </figure>\n    \n      <div class=\"product__group\">\n        <h3 class=\"product__name js-modal-product-name\">\n          ${productName}\n        </h3>\n        \n        <div class=\"product__attributes\">\n          <p class=\"attributes__item js-modal-product-attribute-item\">\n            ${description}\n          </p>\n        </div>\n      </div>\n    `;\n\n    return productHTML;\n  }\n\n  createCustomProductForModalRemove(productName, description = '') {\n    const productHTML = document.createElement('article');\n\n    productHTML.setAttribute('class', 'product');\n\n    productHTML.innerHTML += `\n      <div class=\"product__icon-container\">\n        <i class=\"far fa-box product__icon\"></i>\n      </div>\n    \n      <div class=\"product__group\">\n        <h3 class=\"product__name js-modal-product-name\">\n          ${productName}\n        </h3>\n        \n        <div class=\"product__attributes\">\n          <p class=\"attributes__item js-modal-product-attribute-item\">\n            ${description}\n          </p>\n        </div>\n      </div>\n    `;\n\n    return productHTML;\n  }\n\n  async handledConfirmRemoveProduct(productId, productData) {\n    const productElement = document.querySelector(\n      `[data-product-id=\"${productId}\"]`\n    );\n\n    if (!productData.isCustom) {\n      const productIndex = this.orderForm.items.findIndex(\n        item => item.productId == productId\n      );\n\n      if (productIndex !== -1) {\n        await this.cartService.remove(productIndex);\n      }\n    }\n\n    delete this.products[productId];\n    delete this.insuranceItems[productId];\n\n    this.updateOrderForm(await this.cartService.getCurrent());\n\n    await this.saveData();\n\n    this.updateInsuranceValue();\n\n    await this.updateTranspoterValue();\n\n    this.updateTotalOrderValue();\n\n    productElement.parentElement.remove();\n  }\n\n  handledRemoveProductClick(event, product) {\n    let productHTML;\n    const { productId } = product.dataset;\n    const { isCustom } = this.products[productId];\n\n    const productNameElement = product.querySelector('.product__name');\n    const productImageElement = product.querySelector('.product__image');\n    const productAttributeElement = product.querySelector('.attributes__item');\n\n    const modalRemoveProduct = document.querySelector('.modal--remove-product');\n    const modalProductContainer = modalRemoveProduct.querySelector(\n      '.product__container'\n    );\n\n    const buttonRemoveProduct = modalRemoveProduct.querySelector(\n      '.js-button-remove-product'\n    );\n\n    const oldProduct = modalRemoveProduct.querySelector('.product');\n\n    oldProduct && oldProduct.remove();\n\n    if (isCustom) {\n      productHTML = this.createCustomProductForModalRemove(\n        productNameElement.textContent,\n        productAttributeElement.textContent\n      );\n    } else {\n      productHTML = this.createProductForModalRemove(\n        productNameElement.textContent,\n        productImageElement.src,\n        productAttributeElement.textContent\n      );\n    }\n\n    modalProductContainer.prepend(productHTML);\n\n    buttonRemoveProduct.setAttribute('data-product-id-to-remove', productId);\n\n    this.modalRemoveProductInstance.show();\n  }\n\n  updateInsuranceValue(isSimulate = false) {\n    if (['skipped', 'none'].includes(this.insuranceItems)) return;\n\n    const newInsuranceValue = Object.values(this.insuranceItems)\n      .filter(({ productId }) => this.products[productId].active)\n      .reduce((total, insuranceItem) => {\n        return total.add(insuranceItem.totalInsuranceFormatted);\n      }, REAL('R$ 0,00'));\n\n    this.totalInsurance = newInsuranceValue;\n\n    this.setTotalInsuranceElement();\n  }\n\n  async updateTranspoterValue(isSimulate = false) {\n    const { items, totalizers } = this.orderForm;\n\n    this.setTotalizers(totalizers);\n\n    const insuranceSKU = items.filter(({ id }) => parseInt(id) === 35)[0];\n\n    const totalItemsWithDiscounts = this.totalizers\n      .filter(total => total.id !== 'Shipping')\n      .reduce((total, totalizer) => total + totalizer.value, 0);\n\n    const activeProductsWithoutCustoms = Object.values(this.products)\n      .filter(\n        product => product.active && !SKUS_TO_IGNORE.includes(product.skuId)\n      )\n      .map(({ quantity, skuId }) => ({\n        quantity,\n        seller: 1,\n        id: skuId,\n      }));\n\n    let activeProductsCustoms = Object.values(this.products)\n      .filter(product => product.active && product.isCustom)\n      .reduce((customProducts, customProduct) => {\n        const { quantity, id } = customProduct.customProductItem;\n\n        const newQuantity = quantity * customProduct.quantity;\n\n        if (customProducts[id]) {\n          customProducts[id].quantity =\n            customProducts[id].quantity + newQuantity;\n        } else {\n          customProducts[id] = {\n            id,\n            quantity: newQuantity,\n            seller: 1,\n          };\n        }\n\n        return customProducts;\n      }, {});\n\n    activeProductsCustoms = Object.values(activeProductsCustoms);\n\n    const storageSKU = items\n      .filter(item => parseInt(item.id) === 33)\n      .map(({ id, quantity }) => ({ id, quantity, seller: 1 }))[0];\n\n    const liftingSKUS = items\n      .filter(item => parseInt(item.productId) === 10)\n      .map(({ id, quantity }) => ({ id, quantity, seller: 1 }));\n\n    let activeProducts = [\n      ...activeProductsWithoutCustoms,\n      ...activeProductsCustoms,\n    ];\n\n    if (storageSKU) {\n      activeProducts.push(storageSKU);\n    }\n\n    if (liftingSKUS.length > 0) {\n      activeProducts = [...activeProducts, ...liftingSKUS];\n    }\n\n    const { logisticsInfo } = await this.cartService.simulateShipping(\n      activeProducts,\n      this.addressCep\n    );\n\n    this.logisticsInfo = logisticsInfo.filter(logisticInfo => {\n      const ids = this.transporterSelected.courierIds.split(';');\n\n      logisticInfo.slas = logisticInfo.slas.filter(sla => {\n        return ids.includes(sla.deliveryIds[0].courierId);\n      });\n\n      return logisticInfo;\n    });\n\n    this.getDeliveryTypes();\n\n    this.transporterSelected.deliveryTypes = this.transporterSelected.deliveryTypes.map(\n      deliveryType => {\n        let newPrice = logisticsInfo.reduce((total, logisticInfo) => {\n          const currentSLA = logisticInfo.slas.filter(\n            sla => sla.id === deliveryType.slaName\n          )[0];\n\n          return total + currentSLA.price;\n        }, 0);\n\n        newPrice += insuranceSKU\n          ? totalItemsWithDiscounts + -insuranceSKU.manualPrice\n          : totalItemsWithDiscounts;\n\n        const newPriceFormatted = this.helper.formatPrice(newPrice);\n\n        return {\n          ...deliveryType,\n          price: newPrice,\n          priceFormatted: newPriceFormatted,\n        };\n      }\n    );\n\n    this.transporterSelected.deliveryTypeSelected = this.transporterSelected.deliveryTypes.filter(\n      deliveryType =>\n        deliveryType.slaName ===\n        this.transporterSelected.deliveryTypeSelected.slaName\n    )[0];\n\n    this.totalTransporterSelected = REAL(\n      this.transporterSelected.deliveryTypeSelected.priceFormatted\n    );\n\n    this.updateTransporterElement();\n    this.setTotalTransporterSelectedElement();\n  }\n\n  updateTransporterElement() {\n    this.transporterSelected.deliveryTypes.forEach(deliveryType => {\n      const priceElement = document.querySelector(\n        `[data-transporter-delivery-type=\"${deliveryType.type}\"]`\n      );\n\n      const priceTotalElement = priceElement.querySelector('.price__total');\n\n      priceTotalElement.textContent = deliveryType.priceFormatted;\n    });\n  }\n\n  updateTotalOrderValue() {\n    this.totalOrderSummary = REAL('R$ 0,00');\n\n    this.setTotalOrderSummary();\n    this.setTotalOrderSummaryElement();\n  }\n\n  getTransporterVariations(logisticsInfo) {\n    const transporterVariations = {};\n\n    logisticsInfo.forEach(({ slas }) => {\n      slas.forEach(({ id, price, name }) => {\n        const key = id.toLowerCase().replace(/\\s/g, '');\n\n        if (transporterVariations[key]) {\n          transporterVariations[key].price += price;\n        } else {\n          transporterVariations[key] = {\n            price,\n            name,\n          };\n        }\n      });\n    });\n\n    return transporterVariations;\n  }\n\n  getDeliveryTypes() {\n    const transporterVariations = this.getTransporterVariations(\n      this.logisticsInfo\n    );\n\n    delete this.transporterSelected.deliveryType;\n    delete this.transporterSelected.deliveryTypes;\n\n    this.logisticsInfo[0].slas.forEach(({ id, name, deliveryIds }) => {\n      const key = id.toLowerCase().replace(/\\s/g, '');\n      const [courierName, courierType] = id.split(' - ');\n\n      const { courierId } = deliveryIds[0];\n\n      const { price } = transporterVariations[key];\n\n      const priceFormatted = this.helper.formatPrice(price);\n\n      const courier = [\n        {\n          price,\n          priceFormatted,\n          id: courierId,\n          type: courierType,\n          slaName: name,\n        },\n      ];\n\n      if (this.transporterSelected.deliveryTypes) {\n        this.transporterSelected.deliveryTypes = [\n          ...courier,\n          ...this.transporterSelected.deliveryTypes,\n        ];\n      } else {\n        this.transporterSelected.deliveryTypes = courier;\n      }\n    });\n  }\n\n  createProduct({\n    skuId,\n    imageUrl,\n    quantity,\n    productId,\n    productName,\n    description,\n    skuIdWithBox,\n    skuIdWithoutBox,\n    requiresLifting,\n    specialPackaging,\n    liftingQuantityOrigin,\n    liftingQuantityDestination,\n  }) {\n    const requiredHTML = specialPackaging\n      ? `\n        <div class=\"product__container-checkbox product__container-checkbox--margin-right\">\n          <label for=\"product-${productId}-packaging\">\n            <div class=\"checkbox\">\n              <input \n                class=\"js-input-special-packaging\" \n                type=\"checkbox\"\n                checked=\"true\"\n                id=\"product-${productId}-packaging\"\n              />\n              <i class=\"far fa-check checkbox__icon\"></i>\n              <p class=\"checkbox__label\">Requer embalagem especial</p>\n            </div>\n          </label>\n        </div>\n      `\n      : '';\n\n    const requiredLiftingHTML = requiresLifting\n      ? `\n        <div \n          class=\"product__container-checkbox product__container-checkbox--margin-right\" \n          ${!specialPackaging ? 'style=\"margin-right: 304px\"' : ''}\n        >\n          ${['içamento na origem e destino', 'içamento no origem'].includes(\n        this.lifting\n      ) && liftingQuantityOrigin > 0\n        ? `\n            <label for=\"product-${productId}-lifting-origin\">\n              <div class=\"checkbox\">\n                <input \n                  class=\"js-input-lifting-origin\" \n                  type=\"checkbox\"\n                  checked=\"true\"\n                  id=\"product-${productId}-lifting-origin\"\n                />\n                <i class=\"far fa-check checkbox__icon\"></i>\n                <p class=\"checkbox__label\">Requer içamento origem</p>\n              </div>\n            </label>\n          `\n        : ''\n      }\n\n\n        ${['içamento na origem e destino', 'içamento no destino'].includes(\n        this.lifting\n      ) && liftingQuantityDestination > 0\n        ? `\n          <label for=\"product-${productId}-lifting-destination\">\n            <div class=\"checkbox\">\n              <input \n                class=\"js-input-lifting-destination\" \n                type=\"checkbox\"\n                checked=\"true\"\n                id=\"product-${productId}-lifting-destination\"\n              />\n              <i class=\"far fa-check checkbox__icon\"></i>\n              <p class=\"checkbox__label\">Requer içamento destino</p>\n            </div>\n          </label>\n        `\n        : ''\n      }\n        </div>\n      `\n      : '';\n\n    return `\n      <article \n        class=\"product\"\n        data-product-id=\"${productId}\"\n        data-product-quantity=\"${quantity}\" \n        data-product-special-packaging=\"${specialPackaging}\"\n        data-sku-id-with-box=\"${skuIdWithBox || false}\"\n        data-sku-id-without-box=\"${skuIdWithoutBox}\"\n      >\n        <div class=\"product__container\">\n          <div class=\"product__container-checkbox\">\n            <label for=\"product-${productId}\">\n              <div class=\"checkbox\">\n                <input \n                  checked=\"true\"\n                  type=\"checkbox\"\n                  class=\"js-input-product-active\" \n                  id=\"product-${productId}\"\n                />\n                <i class=\"far fa-check checkbox__icon\"></i>\n              </div>\n            </label>\n          </div>\n      \n          <figure class=\"product__figure\">\n            <img \n              class=\"product__image\" \n              alt=\"${productName}\"\n              src=\"${imageUrl}\" \n            />\n          </figure>\n      \n          <div class=\"product__group\">\n            <h3 class=\"product__name\">${productName}</h3>\n      \n            <div class=\"product__attributes\">\n              <p class=\"attributes__item\">${description}</p>\n            </div>\n          </div>\n        </div>\n        \n        ${requiredLiftingHTML}\n        ${requiredHTML}\n      \n        <div class=\"product__actions\">\n          <button class=\"actions__button product__quantity--minus\">\n            <i class=\"fal fa-minus button__icon\"></i>\n          </button>\n      \n          <input\n            min=\"1\"\n            type=\"number\"\n            class=\"product__quantity\"\n            placeholder=\"1\"\n            value=\"${quantity}\"\n          />\n      \n          <button class=\"actions__button product__quantity--add\">\n            <i class=\"fal fa-plus button__icon\"></i>\n          </button>\n        </div>\n        \n        <button class=\"product__remove-button\">\n          <i class=\"far fa-trash-alt remove-button__icon\"></i>\n        </button>\n      </article>\n    `;\n  }\n\n  createCustomProduct(productData) {\n    const {\n      quantity,\n      customAttributes,\n      productId,\n      specialPackaging,\n      requiresLifting,\n      liftingQuantityOrigin,\n      liftingQuantityDestination,\n    } = productData;\n\n    const requiredHTML = eval(specialPackaging)\n      ? `\n        <div class=\"product__container-checkbox product__container-checkbox--margin-right\">\n          <label for=\"product-${productId}-packaging\">\n            <div class=\"checkbox\">\n              <input \n                class=\"js-input-special-packaging\" \n                type=\"checkbox\"\n                checked=\"true\"\n                id=\"product-${productId}-packaging\"\n              />\n              <i class=\"far fa-check checkbox__icon\"></i>\n              <p class=\"checkbox__label\">Requer embalagem especial</p>\n            </div>\n          </label>\n        </div>\n      `\n      : '';\n\n    const requiredLiftingHTML = requiresLifting\n      ? `\n        <div \n          class=\"product__container-checkbox product__container-checkbox--margin-right\" \n          ${!specialPackaging ? 'style=\"margin-right: 304px\"' : ''}\n        >\n          ${['içamento na origem e destino', 'içamento no origem'].includes(\n        this.lifting\n      ) && liftingQuantityOrigin > 0\n        ? `\n            <label for=\"product-${productId}-lifting-origin\">\n              <div class=\"checkbox\">\n                <input \n                  class=\"js-input-lifting-origin\" \n                  type=\"checkbox\"\n                  checked=\"true\"\n                  id=\"product-${productId}-lifting-origin\"\n                />\n                <i class=\"far fa-check checkbox__icon\"></i>\n                <p class=\"checkbox__label\">Requer içamento origem</p>\n              </div>\n            </label>\n          `\n        : ''\n      }\n\n\n        ${['içamento na origem e destino', 'içamento no destino'].includes(\n        this.lifting\n      ) && liftingQuantityDestination > 0\n        ? `\n          <label for=\"product-${productId}-lifting-destination\">\n            <div class=\"checkbox\">\n              <input \n                class=\"js-input-lifting-destination\" \n                type=\"checkbox\"\n                checked=\"true\"\n                id=\"product-${productId}-lifting-destination\"\n              />\n              <i class=\"far fa-check checkbox__icon\"></i>\n              <p class=\"checkbox__label\">Requer içamento destino</p>\n            </div>\n          </label>\n        `\n        : ''\n      }\n        </div>\n      `\n      : '';\n\n    const customProduct = `\n      <article \n        class=\"product\"\n        data-product-id=\"${productId}\"\n        data-product-quantity=\"${quantity}\"\n        data-product-special-packaging=\"${specialPackaging}\"\n        data-sku-id-with-box=\"${26}\"\n        data-sku-id-without-box=\"${25}\"\n      >\n        <div class=\"product__container\">\n          <div class=\"product__container-checkbox\">\n            <label for=\"product-${productId}\">\n              <div class=\"checkbox\">\n                <input \n                  checked=\"true\" \n                  type=\"checkbox\"\n                  class=\"js-input-product-active\"\n                  id=\"product-${productId}\"\n                />\n                <i class=\"far fa-check checkbox__icon\"></i>\n              </div>\n            </label>\n          </div>\n\n          <div class=\"product__icon-container\">\n            <i class=\"far fa-box product__icon\"></i>\n          </div>\n          \n          <div class=\"product__group\">\n            <h3 class=\"product__name\">\n              ${customAttributes['product-name']}\n            </h3>\n            \n            <div class=\"product__attributes\">\n              <p class=\"attributes__item\">\n                Aproximadamente ${customAttributes['product-width']}cm x ${customAttributes['product-height']\n      }cm x ${customAttributes['product-depth']}cm\n              </p>\n            </div>\n          </div>\n        </div>\n\n        ${requiredLiftingHTML}\n        ${requiredHTML}\n\n        <div class=\"product__actions\">\n          <button class=\"actions__button product__quantity--minus\">\n            <i class=\"fal fa-minus button__icon\"></i>\n          </button>\n      \n          <input\n            min=\"1\"\n            type=\"number\"\n            class=\"product__quantity\"\n            placeholder=\"1\"\n            value=\"${quantity}\"\n          />\n      \n          <button class=\"actions__button product__quantity--add\">\n            <i class=\"fal fa-plus button__icon\"></i>\n          </button>\n        </div>\n\n        <button class=\"product__remove-button\">\n          <i class=\"far fa-trash-alt remove-button__icon\"></i>\n        </button\n      </article>\n    `;\n\n    return customProduct;\n  }\n\n  createProductstInOrderForm() {\n    const { items: products } = this.orderForm;\n\n    const productsElementsArray = products\n      .filter(({ id }) => !SKUS_TO_IGNORE.includes(parseInt(id)))\n      .map(({ name, skuName, imageUrl, productId, quantity, id: skuId }) => {\n        const description = '';\n\n        const productName = name.replace(skuName, '');\n\n        const {\n          skuIdWithBox,\n          skuIdWithoutBox,\n          specialPackaging,\n          requiresLifting,\n          liftingQuantityOrigin,\n          liftingQuantityDestination,\n        } = this.products[productId];\n\n        return `\n            <div class=\"table__row\">\n              ${this.createProduct({\n          skuId,\n          quantity,\n          imageUrl,\n          productId,\n          productName,\n          description,\n          skuIdWithBox,\n          skuIdWithoutBox,\n          requiresLifting,\n          specialPackaging,\n          liftingQuantityOrigin,\n          liftingQuantityDestination,\n        })}\n            </div>\n          `;\n      });\n\n    const productsElementsHTML = productsElementsArray.join('');\n\n    return productsElementsHTML;\n  }\n\n  async getProductByID(productId) {\n    return await this.httpClient.get(\n      `/api/catalog_system/pub/products/variations/${productId}`\n    );\n  }\n\n  createCustomProducts() {\n    const customProducts = Object.values(this.products).filter(\n      ({ isCustom }) => isCustom\n    );\n\n    const customProductsHTML = customProducts\n      .map(productData => {\n        return `\n          <div class=\"table__row\">\n            ${this.createCustomProduct(productData)}\n          </div>\n        `;\n      })\n      .join('');\n\n    return customProductsHTML;\n  }\n\n  addCustomProductsToDOM(customProductsHTML) {\n    this.tableContentElement.innerHTML += customProductsHTML;\n  }\n\n  addOrderFormProductsToDOM(orderFormProductsHTML) {\n    this.tableContentElement.innerHTML += orderFormProductsHTML;\n  }\n\n  addTransporterToDOM(transporterHTML) {\n    const cardTransporter = document.querySelector('.card--transporter');\n\n    cardTransporter.innerHTML += transporterHTML;\n  }\n\n  getProductsInCustomData() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'selecteditems')\n      .forEach(customApp => {\n        const { products_data } = customApp.fields;\n\n        const products = JSON.parse(products_data);\n\n        products.forEach(product => {\n          product.active = true;\n\n          this.products[product.productId] = product;\n        });\n      });\n  }\n\n  createTransporterPriceElement(item, isSelected = false) {\n    return `\n      <div \n        class=\"price ${isSelected ? 'price--active' : ''}\" \n        data-transporter-delivery-type=\"${item.type}\"\n      >\n        \n\n          <div class=\"price__container price__container--right\">\n            <span class=\"price__total\">${item.priceFormatted}</span>\n            <p class=\"price__parcels\">em até 6x sem juros</p>\n          </div>\n        </div>\n\n        ${item.type === 'Compartilhado'\n        ? `\n          <p class=\"price__paragraph price__paragraph--text-orange\">\n            * Prazo de entrega: em até 45 dias da data da embalagem.\n          </p>\n        `\n        : ''\n      }\n      </div> \n    `;\n  }\n\n  createTransporterElement(transporterData) {\n    const {\n      id,\n      nome,\n      logoURL,\n      featuresText,\n      featuresX,\n      descricao,\n      deliveryTypes,\n      deliveryTypeSelected,\n    } = transporterData;\n    console.log('transporterData', transporterData);\n    const prices = deliveryTypes\n      .map(item => {\n        const isSelected = item.id === deliveryTypeSelected.id;\n        return this.createTransporterPriceElement(item, isSelected);\n      })\n      .join('');\n\n    return `\n      <section \n        id=\"${id}\" \n        data-transporter-id=\"${id}\"\n        class=\"transporter transporter--without-padding \"\n        data-transporter-delivery-type-selected=\"Exclusivo\"\n        transporter-name='${nome}'\n      >\n        \n\n        <div class=\"transporter__details\">\n          <div class=\"transporter__row\">\n            <h3 class=\"transporter__name\">${nome}</h3>\n          </div>\n\n          <div class=\"transporter__description\">\n            <p class=\"description__paragraph\">\n              ${descricao}\n            </p>\n          </div>\n\n          <div class=\"transporter__row\">\n          <ul class=\"transporter__benefits\">\n            ${featuresText\n        .split(';')\n        .map(\n          feature => `\n                  <li class=\"benefit\">\n                    <i class=\"far fa-check benefit__icon\"></i>\n    \n                    <p class=\"benefit__text\">\n                      ${feature}\n                    </p>\n                  </li>\n                `\n        )\n        .join('')}\n          </ul>\n          <ul class=\"transporter__benefits\">\n            ${featuresX\n        .split(';')\n        .map(\n          feature => `\n                  <li class=\"benefit\">\n                    <i class=\"far fa-times benefit__icon bad\"></i>\n    \n                    <p class=\"benefit__text\">\n                      ${feature}\n                    </p>\n                  </li>\n                `\n        )\n        .join('')}\n          </ul>\n          </div>\n        </div>\n\n        <div class=\"transporter__prices\">\n          ${prices}\n        </div>\n      </section>\n\n      <div class=\"shipping-date\" id=\"entenda-o-prazo-de-entrega-da-sua-mudanca\">\n        <p class=\"shipping-date__paragraph shipping-date__paragraph--center shipping-date__paragraph--margin-bottom\">\n          <b>Entenda o prazo de entrega da sua mudança</b>\n        </p>\n      \n        <p class=\"shipping-date__paragraph shipping-date__paragraph--margin-bottom\">\n        A entrega ocorrerá imediatamente após a embalagem dos seus itens. Por favor, considere os dias de\n          viagens necessários para que o caminhão da mudança chegue até o destino. Antes da embalagem nossos consultores\n          entrarão em contato para agendar a melhor data para sua conveniência. Fique tranquilo, sua mudança não será entregue\n          sem prévio aviso.\n        </p>\n      </div>\n    `;\n  }\n\n  setDate() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'orderinfo')\n      .forEach(customApp => {\n        const { moving_date } = customApp.fields;\n\n        this.dateSelected = moving_date;\n\n        this.updateCalendarComponent(moving_date);\n      });\n  }\n\n  updateCalendarComponent(movingData) {\n    const cardNumber = document.querySelector('.card__number--big');\n    const dateInstance = dayjs(new Date(movingData)).locale('pt-br');\n\n    const day = dateInstance.format('dddd');\n    const mounth = dateInstance.format('MMMM');\n    const year = dateInstance.year();\n\n    const dateFormatted = `${day}, ${mounth} / ${year}`;\n\n    cardNumber.textContent = dateInstance.date();\n    cardNumber.nextElementSibling.textContent = dateFormatted;\n  }\n\n  getAddress() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'orderinfo')\n      .forEach(customApp => {\n        const addressesFieldsArray = Object.entries(customApp.fields).filter(\n          ([key, value]) => {\n            return key.includes('from_') || key.includes('to_');\n          }\n        );\n\n        const addresses = addressesFieldsArray.reduce(\n          (obj, [key, value]) => ({ ...obj, [key]: value }),\n          {}\n        );\n\n        const addressFromContainer = document.querySelector('.js-address-from');\n        const addressToContainer = document.querySelector('.js-address-to');\n\n        [addressFromContainer, addressToContainer].forEach(container => {\n          const addressDirection = container.classList.contains(\n            'js-address-from'\n          )\n            ? 'from'\n            : 'to';\n\n          const cardContent = container.querySelector('.card__content');\n          const selectSpecialHandlyConditionSelected = container.querySelector(\n            '.js-address-special-handly-condition'\n          );\n          const selectHomeTypeSelected = container.querySelector(\n            '.js-address-home-type'\n          );\n\n          const specialHandlyCondition =\n            addresses[`${addressDirection}_special_handly_condition`];\n\n          const complement =\n            addresses[`${addressDirection}_address_complement`];\n          const county = addresses[`${addressDirection}_address_county`];\n          const streetName = addresses[`${addressDirection}_address_name`];\n          const number = addresses[`${addressDirection}_address_number`];\n          const zipcode = addresses[`${addressDirection}_address_zipcode`];\n          const city = addresses[`${addressDirection}_city`];\n          const state = addresses[`${addressDirection}_state`];\n          const homeType = addresses[`${addressDirection}_home_type`];\n\n          selectHomeTypeSelected.textContent = homeType;\n          selectSpecialHandlyConditionSelected.textContent = specialHandlyCondition;\n\n          const firstParagraphContent = [streetName, number]\n            .filter(item => item !== undefined && item !== '')\n            .join(', ');\n\n          const secondParagraphContent = [complement, county]\n            .filter(item => item !== undefined && item !== '')\n            .join(' - ');\n\n          const thirdParagraphContent = [city, state]\n            .filter(item => item !== undefined && item !== '')\n            .join(' - ');\n\n          cardContent.innerHTML = `\n            <h3 class=\"card__subtitle\">${zipcode}</h3>\n            <p class=\"card__paragraph\">${firstParagraphContent}</p>\n            <p class=\"card__paragraph\">${secondParagraphContent}</p>\n            <p class=\"card__paragraph\">${thirdParagraphContent}</p>\n          `;\n        });\n      });\n  }\n\n  getInsuranceItems() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'insurance')\n      .forEach(customApp => {\n        const { items } = customApp.fields;\n\n        if (['skipped', 'none'].includes(items)) return;\n\n        this.insuranceItems = JSON.parse(items);\n      });\n  }\n\n  async saveData(makeCRUD = true) {\n    try {\n      await window.vtexjs.checkout.removeAllItems();\n\n      const productsWithQuantity = Object.values(this.products).filter(\n        ({ quantity }) => quantity !== 0\n      );\n\n      const additionalWeightSKUs = this.getAdditionalWeightSKU(\n        productsWithQuantity\n      );\n\n      const products = productsWithQuantity.map(product => ({\n        ...product,\n        seller: 1,\n        id: product.skuId,\n      }));\n\n      const disassemblyAndAssemblySKUs = this.getDisassemblyAndAssemblySKU(\n        productsWithQuantity\n      );\n\n      const liftingSKUs = this.getLiftingSKUs();\n\n      const insuranceSKU = this.getInsuranceSKU();\n\n      const {\n        total: totalInsurancePrice,\n      } = this.getInsuranceDataInCustomData();\n\n      if (makeCRUD) {\n        if (totalInsurancePrice) {\n          await this.cartService.checkoutCRUD([\n            ...products,\n            ...liftingSKUs,\n            additionalWeightSKUs,\n            disassemblyAndAssemblySKUs,\n            insuranceSKU,\n          ]);\n        } else {\n          await this.cartService.checkoutCRUD([\n            ...products,\n            ...liftingSKUs,\n            additionalWeightSKUs,\n            disassemblyAndAssemblySKUs,\n          ]);\n        }\n      }\n\n      this.updateOrderForm(await this.cartService.getCurrent());\n\n      const insuranceSkuIndex = this.getInsuranceSkuIndex();\n\n      if (totalInsurancePrice && insuranceSkuIndex !== -1) {\n        this.updateOrderForm(\n          await this.insuranceService.updateInsuranceSKUPrice(\n            REAL(totalInsurancePrice).multiply(0.01).intValue,\n            insuranceSkuIndex,\n            this.orderForm.orderFormId\n          )\n        );\n      }\n\n      const liftingTotalPrice = this.calculateLiftingTotalPrice();\n      const totalForSpecialPackaging = this.calculateTotalForSpecialPackaging();\n      const totalDisassemblyAndAssemblyPrice = this.calculateTotalForDisassemblyAndAssembly();\n\n      this.updateServiceItem('Içamento', liftingTotalPrice);\n\n      this.updateServiceItem('Embalagem especial', totalForSpecialPackaging);\n\n      this.updateServiceItem(\n        'Desmontagem e Montagem',\n        totalDisassemblyAndAssemblyPrice\n      );\n\n      if (location.search.includes('logged')) {\n        this.updateOrderForm(\n          await this.cartService.updateCheckoutTransporterSLA(\n            this.logisticsInfo\n          )\n        );\n      }\n\n      const orderInfoFieldsForCustomData = {\n        current_step: 'order-summary',\n        moving_date: this.dateSelected,\n        user_selected_storage_months: this.userSelectedStorageMonths,\n        lifting_total_price: liftingTotalPrice,\n        special_packaging_total_price: totalForSpecialPackaging,\n        // \"storage_total_price\"\n      };\n\n      if (\n        this.customSelectStorageServiceInstance &&\n        this.customSelectStorageServiceInstance.selectElement\n      ) {\n        orderInfoFieldsForCustomData.storage_months = this.customSelectStorageServiceInstance.selectElement.selectedOptions[0].textContent;\n      }\n\n      const insuranceItemsForCustomData =\n        typeof this.insuranceItems === 'string'\n          ? this.insuranceItems\n          : JSON.stringify(this.insuranceItems);\n\n      const insuranceFieldsForCustomData = {\n        items: insuranceItemsForCustomData,\n        total: this.totalInsurance.format(),\n      };\n\n      // TODO: Uncomment this code when the storage feature is complete.\n      // await this.storageService.dispatchActionWorksWithStorageSKU(\n      //   this.userSelectedStorageMonths\n      // );\n\n      await Promise.all([\n        this.cartService.setMultipleCustomDataFields(\n          'orderinfo',\n          orderInfoFieldsForCustomData\n        ),\n        this.cartService.setMultipleCustomDataFields(\n          'insurance',\n          insuranceFieldsForCustomData\n        ),\n        this.cartService.setSingleCustomDataField(\n          'selecteditems',\n          'products_data',\n          JSON.stringify(productsWithQuantity)\n        ),\n        this.cartService.setSingleCustomDataField(\n          'selectedcourier',\n          'courier_data',\n          JSON.stringify(this.transporterSelected)\n        ),\n      ]);\n    } catch (error) {\n      console.log('saveData', error);\n    }\n  }\n\n  setHandledUpdateButtonClick() {\n    const buttonUpdate = document.querySelector('.js-button-update');\n    const buttonUpdateTextElement = buttonUpdate.querySelector('span');\n\n    buttonUpdate.addEventListener('click', e => {\n      const activeProducts = Object.values(this.products).filter(\n        product => product.active\n      );\n\n      if (activeProducts.length >= 1) {\n        this.hideUpdateErrorMessage();\n\n        this.handledUpdateButtonClick(buttonUpdate, buttonUpdateTextElement);\n      } else {\n        this.showUpdateErrorMessage();\n      }\n    });\n  }\n\n  showUpdateErrorMessage() {\n    const warningContainerElement = document.querySelector('.actions__warning');\n\n    warningContainerElement.classList.add('actions__warning--show');\n  }\n\n  hideUpdateErrorMessage() {\n    const warningContainerElement = document.querySelector('.actions__warning');\n\n    warningContainerElement.classList.remove('actions__warning--show');\n  }\n\n  async handledUpdateButtonClick(buttonUpdate, buttonUpdateTextElement) {\n    buttonUpdate.classList.add('js-loading');\n\n    await this.saveData();\n\n    this.updateInsuranceValue(true);\n\n    await this.updateTranspoterValue(true);\n\n    const isTransporterSelectedSimulated = Object.values(this.products)\n      .map(product => product.active)\n      .includes(false);\n\n    if (!isTransporterSelectedSimulated) {\n      await this.cartService.setSingleCustomDataField(\n        'selectedcourier',\n        'courier_data',\n        JSON.stringify(this.transporterSelected)\n      );\n    }\n\n    buttonUpdateTextElement.innerText = 'VALORES ATUALIZADOS';\n\n    this.updateTotalOrderValue();\n\n    buttonUpdate.classList.remove('js-loading');\n\n    setTimeout(() => {\n      buttonUpdateTextElement.innerText = 'ATUALIZAR VALORES';\n    }, 3000);\n  }\n\n  setAddressCep() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'orderinfo')\n      .forEach(customApp => {\n        const { to_address_zipcode } = customApp.fields;\n\n        this.addressCep = to_address_zipcode;\n      });\n  }\n\n  setHandledButtonSaveClick() {\n    const buttonSave = document.querySelector('.js-button-save');\n\n    buttonSave.addEventListener('click', async () => {\n      document.dispatchEvent(window.initSaveCustomDataEvent);\n\n      await this.saveData();\n\n      document.dispatchEvent(window.endSaveCustomDataEvent);\n    });\n  }\n\n  orderDeliveryTypesByLessPrice() {\n    this.transporterSelected.deliveryTypes.sort((a, b) => a.price - b.price);\n  }\n\n  getLiftingItems() {\n    const { items } = this.orderForm;\n\n    return items.filter(item => parseInt(item.productId) === 10);\n  }\n\n  calculateLiftingTotalPrice() {\n    let totalLiftingPrice;\n    const liftingItems = this.getLiftingItems();\n\n    if (liftingItems.length === 0) {\n      totalLiftingPrice = 0;\n    } else {\n      const liftingQuantityToSubtract = Object.values(this.products)\n        .filter(product => !product.active)\n        .reduce((total, product) => {\n          const newTotal = total + product.liftingQuantity;\n\n          return this.lifting === 'içamento na origem e destino'\n            ? newTotal * 2\n            : newTotal;\n        }, 0);\n\n      const liftingQuantity = liftingItems.reduce(\n        (total, item) => total + item.quantity,\n        -liftingQuantityToSubtract\n      );\n\n      const liftingPrice = liftingItems[0].price;\n      const firstLifting = liftingPrice;\n\n      totalLiftingPrice = ((liftingQuantity - 1) * liftingPrice) / 2;\n      totalLiftingPrice +=\n        liftingQuantity > 0 ? firstLifting : totalLiftingPrice * -1;\n\n      totalLiftingPrice = this.helper.formatPrice(totalLiftingPrice);\n    }\n\n    return REAL(totalLiftingPrice).format();\n  }\n\n  getStorageItem() {\n    const { items } = this.orderForm;\n\n    return items.filter(item => parseInt(item.productId) === 15)[0];\n  }\n\n  calculateStoragePrice() {\n    const storageItem = this.getStorageItem();\n\n    if (!storageItem) return 'R$ 0,00';\n\n    const totalStoragePrice = this.helper.formatPrice(\n      storageItem.price * storageItem.quantity\n    );\n\n    this.totalStorageMonth = REAL(totalStoragePrice)\n      .divide(parseInt(this.userSelectedStorageMonths))\n      .format();\n\n    return this.totalStorageMonth;\n  }\n\n  getItemsWithSpecialPackaging() {\n    const { items } = this.orderForm;\n\n    return items.filter(item => item.skuName === 'com caixa');\n  }\n\n  calculateTotalForSpecialPackaging() {\n    const itemsWithSpecialPackaging = this.getItemsWithSpecialPackaging();\n\n    const products = Object.values(this.products);\n\n    let totalSpecialPackagingPrice = itemsWithSpecialPackaging\n      .filter(({ productId, id }) => {\n        if (productId == 12) {\n          productId = products.filter(({ skuId }) => skuId == id)[0].productId;\n        }\n\n        return this.products[productId].active;\n      })\n      .reduce((total, item) => total + item.price * item.quantity, 0);\n\n    totalSpecialPackagingPrice = this.helper.formatPrice(\n      totalSpecialPackagingPrice\n    );\n\n    return REAL(totalSpecialPackagingPrice).format();\n  }\n\n  calculateTotalForDisassemblyAndAssembly() {\n    const { items } = this.orderForm;\n\n    const disassemblyAndAssemblySKU = items.find(\n      item => parseInt(item.id) === 699\n    );\n\n    if (!disassemblyAndAssemblySKU) return 'R$ 0,00';\n\n    const { quantity, price } = disassemblyAndAssemblySKU;\n\n    const totalSpecialPackagingPrice = this.helper.formatPrice(\n      quantity * price\n    );\n\n    return totalSpecialPackagingPrice;\n  }\n\n  createServiceItem(serviceName, serviceValue) {\n    return `\n      <div class=\"service\" data-service=\"${serviceName}\">\n        <div class=\"service__container\">\n          <div class=\"service__group\">\n            <h3 class=\"service__name\">${serviceName}</h3>\n          </div>\n        </div>\n\n        ${serviceName === 'Armazenagem'\n        ? `\n          <div class=\"custom-select\">\n            <select class=\"select__native\">\n              <option value=\"1\">30 dias</option>\n              <option value=\"2\">60 dias</option>\n              <option value=\"3\">90 dias</option>\n              <option value=\"4\">120 dias</option>\n              <option value=\"5\">150 dias</option>\n              <option value=\"6\">180 dias</option>\n            </select>\n            \n            <span class=\"select__custom-selected\">30 dias</span>\n            \n            <div class=\"select__custom\">\n              <ul class=\"select__list\"></ul>\n            </div>\n\n            <i class=\"fas fa-caret-down select__icon\"></i>\n          </div>\n        `\n        : ''\n      }\n\n        <span class=\"service__value\">${serviceValue}</span>\n      </div>\n    `;\n  }\n\n  updateServiceItem(serviceID, serviceValue) {\n    const serviceItem = document.querySelector(\n      `.service[data-service=\"${serviceID}\"]`\n    );\n\n    if (serviceItem) {\n      const serviceItemValue = serviceItem.querySelector('.service__value');\n\n      serviceItemValue.textContent = serviceValue;\n    }\n  }\n\n  addServicesToDOM() {\n    const totalLiftingPrice = this.calculateLiftingTotalPrice();\n    const totalStoragePrice = this.calculateStoragePrice();\n    const totalSpecialPackagingPrice = this.calculateTotalForSpecialPackaging();\n    const totalDisassemblyAndAssemblyPrice = this.calculateTotalForDisassemblyAndAssembly();\n\n    const serviceStorageHTML =\n      totalStoragePrice !== 'R$ 0,00'\n        ? this.createServiceItem('Armazenagem', totalStoragePrice)\n        : '';\n\n    const serviceLiftingHTML =\n      totalLiftingPrice !== 'R$ 0,00'\n        ? this.createServiceItem('Içamento', totalLiftingPrice)\n        : '';\n\n    const serviceSpecialPackagingHTML =\n      totalSpecialPackagingPrice !== 'R$ 0,00'\n        ? this.createServiceItem(\n          'Embalagem especial',\n          totalSpecialPackagingPrice\n        )\n        : '';\n\n    const serviceDisassemblyAndAssemblyHTML =\n      totalDisassemblyAndAssemblyPrice !== 'R$ 0,00'\n        ? this.createServiceItem(\n          'Desmontagem e Montagem',\n          totalDisassemblyAndAssemblyPrice\n        )\n        : '';\n\n    const serviceItemsTable = document.querySelector('.service-items-table');\n\n    const elements = [\n      serviceStorageHTML,\n      serviceLiftingHTML,\n      serviceSpecialPackagingHTML,\n      serviceDisassemblyAndAssemblyHTML,\n    ].join('');\n\n    serviceItemsTable.innerHTML += elements;\n\n    if (serviceStorageHTML !== '') {\n      this.createCustomSelectForStorageService();\n      this.updateCustomSelectStorageService();\n    }\n\n    if (elements === '') {\n      serviceItemsTable.remove();\n    }\n  }\n\n  createCustomSelectForStorageService() {\n    const selectElement = document.querySelector(\n      '.custom-select .select__native'\n    );\n    const selectCustom = document.querySelector(\n      '.custom-select .select__custom'\n    );\n    const customSelectList = document.querySelector(\n      '.custom-select .select__list'\n    );\n    const customSelectSelected = document.querySelector(\n      '.custom-select .select__custom-selected'\n    );\n\n    this.customSelectStorageServiceInstance = new CustomSelect({\n      selectElement,\n      customSelectList,\n      customSelectSelected,\n      customSelectListItemClassName: '',\n      customSelectListItemClassNameActive: 'active',\n      selectOpenCallback: event => {\n        const selectListHeight = customSelectList.offsetHeight;\n\n        selectCustom.classList.add('select__custom--open');\n        selectCustom.style.maxHeight = `${selectListHeight}px`;\n      },\n      selectCloseCallback: () => {\n        selectCustom.classList.remove('select__custom--open');\n        selectCustom.style.maxHeight = 0;\n      },\n      selectChangeCallback: ({ value }) => {\n        this.totalStorage = REAL(this.totalStorageMonth).multiply(\n          parseInt(value)\n        );\n\n        this.userSelectedStorageMonths = parseInt(value);\n\n        this.updateServiceItem('Armazenagem', this.totalStorage.format());\n      },\n    });\n  }\n\n  getStorageMonths() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'orderinfo')\n      .forEach(({ fields }) => {\n        const { user_selected_storage_months } = fields;\n\n        if (user_selected_storage_months) {\n          this.userSelectedStorageMonths = user_selected_storage_months;\n        }\n      });\n  }\n\n  updateCustomSelectStorageService() {\n    this.customSelectStorageServiceInstance.changeOption(\n      this.userSelectedStorageMonths\n    );\n  }\n\n  updateSelectedSLA() {\n    const { slaName } = this.transporterSelected.deliveryTypeSelected;\n\n    this.logisticsInfo = this.logisticsInfo.map(item => ({\n      ...item,\n      selectedSla: slaName,\n    }));\n  }\n\n  getLiftingSKUs() {\n    this.getLiftingQuantity();\n\n    let liftingQuantity =\n      this.lifting === 'içamento na origem e destino'\n        ? this.liftingQuantity / 2\n        : this.liftingQuantity;\n\n    const skus = [];\n\n    if (\n      this.lifting === 'içamento na origem e destino' ||\n      this.lifting === 'içamento no origem'\n    ) {\n      liftingQuantity = Object.values(this.products)\n        .filter(({ quantity }) => quantity > 0)\n        .reduce((quantity, product) => {\n          return quantity + product.liftingQuantityOrigin;\n        }, 0);\n\n      skus.push({\n        id: 19,\n        skuId: 19,\n        seller: 1,\n        productId: 10,\n        quantity: liftingQuantity,\n      });\n    }\n\n    if (\n      this.lifting === 'içamento na origem e destino' ||\n      this.lifting === 'içamento no destino'\n    ) {\n      liftingQuantity = Object.values(this.products)\n        .filter(({ quantity }) => quantity > 0)\n        .reduce((quantity, product) => {\n          return quantity + product.liftingQuantityDestination;\n        }, 0);\n\n      skus.push({\n        id: 698,\n        skuId: 698,\n        seller: 1,\n        productId: 10,\n        quantity: liftingQuantity,\n      });\n    }\n\n    return skus;\n  }\n\n  getLiftingQuantity() {\n    this.liftingQuantity = Object.values(this.products)\n      .filter(({ quantity }) => quantity > 0)\n      .reduce((quantity, product) => {\n        return quantity + product.liftingQuantity;\n      }, 0);\n\n    this.liftingQuantity *=\n      this.lifting === 'içamento na origem e destino' ? 2 : 1;\n  }\n\n  removePageLoading() {\n    document.body.classList.remove('page-app--loading');\n  }\n\n  getAdditionalWeightSKU(products) {\n    const totalQuantity = products\n      .filter(product => product.additionalWeight)\n      .reduce((total, { quantity }) => total + quantity, 0);\n\n    return {\n      id: 696,\n      seller: 1,\n      quantity: totalQuantity,\n    };\n  }\n\n  getDisassemblyAndAssemblySKU(products) {\n    const totalQuantity = products\n      .filter(\n        ({ requiresAssembly, requiresDisassembly }) =>\n          requiresAssembly && requiresDisassembly\n      )\n      .reduce((total, { quantity }) => total + quantity, 0);\n\n    return {\n      id: 699,\n      seller: 1,\n      quantity: totalQuantity,\n    };\n  }\n\n  getInsuranceSKU() {\n    return {\n      id: 35,\n      seller: 1,\n      quantity: 1,\n    };\n  }\n\n  getInsuranceDataInCustomData() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return {};\n\n    const insuranceApp = customData.customApps.find(\n      customApp => customApp.id === 'insurance'\n    );\n\n    if (!insuranceApp) return {};\n\n    return insuranceApp.fields;\n  }\n\n  getInsuranceSkuIndex() {\n    const { items } = this.orderForm;\n\n    const insuranceSkudId = 35;\n\n    const itemIndex = items.findIndex(\n      item => parseInt(item.id) === insuranceSkudId\n    );\n\n    return itemIndex;\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new OrderSummaryPage();\n});\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/js/general/repositories/b8one.masterdataRepository.js","webpack:///./src/js/general/services/b8one.transporterService.js","webpack:///./src/js/store/desktop/transporter/index.js","webpack:///./src/js/general/components/b8one.accordionComponent.js","webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/general/components/b8one.customSelect.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/general/services/b8one.httpClient.js"],"names":["MasterdataRepository","entityCode","this","entityCode_","httpClient_","HttpClient","_VTEX_MASTERDATA_ENDPOINT","entityPayload","apiEndpoint","put","then","res","error","patch","params","get","documentId","fields","delete","field","fileName","getAttachmentUrl","TransporterService","httpClient","endpoint","console","hubID","query","TransporterPage","modalCompare","addressCep","transporterSelected","transporters","logisticsInfo","filters","Set","compareTransportersList","masterdataRepository","cartService","CartService","helper","Helper","orderBy","totalizers","orderForm","transporterService","window","init","initFilterAccordions","createCustomSelect","getCurrent","setAddressCep","setHubID","fetchTransporters","Promise","all","getDeliveryTypes","setLogoUrlInTransportes","orderTransportersByLessPrice","addTransportersToDOM","setHandledFiltersChange","setHandledsToTransporterElement","setHandledScheduleChangeButtonsClick","setHandledButtonSaveClick","document","querySelectorAll","forEach","accordion","accordionHeader","querySelector","AccordionComponent","openAccordionCallback","classList","add","closeAccordionCallback","remove","isOpen","filterItem","addEventListener","event","handledFilterChange","transporter","priceElement","transporterDeliveryType","dataset","setAttribute","scheduleChangeButton","handledScheduleChangeButtonClick","handledButtonSaveClick","target","filterName","filter","checked","transporterElement","id","filtersArray","map","includes","compareButton","transporterID","toggle","contains","updateTransporterFooter","columns","createCompareTableColumn","join","compareTable","innerHTML","children","outerHTML","createTransportersCustomSelects","show","getParents","setTransporterSelected","saveData","location","assign","priceActive","dispatchEvent","initSaveCustomDataEvent","endSaveCustomDataEvent","transporterSelect","selectElement","selectCustom","customSelectList","customSelectSelected","CustomSelect","customSelectListItemClassName","customSelectListItemClassNameActive","selectOpenCallback","selectListHeight","offsetHeight","style","maxHeight","selectCloseCallback","selectChangeCallback","value","filterSelect","orderTransportersBy","compareTransporterList","sort","a","b","deliveryTypes","price","index","prevTransporterElement","nextTransporterElement","insertBefore","nome","logoURL","armazenagem","certificacao","tempoMercado","equipeFeminina","deliveryShared","type","deliveryExclusive","priceFormatted","item","StrongPrice","substring","length","replace","decimals","transporterData","features","descricao","prices","createTransporterPriceElement","slaName","split","feature","getTransportersByHUB","Error","bugsnagClient","notify","filename","compareFooter","compareFooterParagraph","compareFooterButton","size","transporterId","transporterDeliveryTypeSelected","findIndex","deliveryTypeSelected","selectedSla","updateSelectedSLA","updateCheckoutTransporterSLA","setSingleCustomDataField","JSON","stringify","log","logo","fetchTransporterLogoURL","transporterVariations","slas","name","key","toLowerCase","customData","customApps","customApp","to_address_zipcode","orderInfoApp","find","simulateOrderForm","shippingData","setTotalizers","getLogisticsInfo","insuranceSKU","items","parseInt","getTransporterVariations","totalItemsWithDiscounts","total","reduce","totalizer","courier","courierId","deliveryIds","courierIds","transporterIndex","courierType","courierTypeLowerCase","manualPrice","formatPrice","currentTransporter","removeTransportersWithoutDeliveryType","orderDeliveryTypesByLessPrice","hasOwnProperty","createTransporterElement","openCallback","Function","closeCallback","Element","setHandleClick","Ensure","undefined","input","isUndefined","checkValidity","object","props","getMissingProps","missingProps","prop","push","setCurrentSelectedItem","createSelectList","setListenerForCurrentSelected","options","selectedIndex","textContent","newValue","prevListItemActive","close","changeOption","option","listItem","createElement","trim","handleSelectChange","append","open","body","className","eventChange","Event","bubbles","_logger","Logger","language","navigator","userLanguage","currency","currencyLocale","minimumFractionDigits","elem","selector","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","i","parents","parentNode","form","serialized","elements","disabled","n","selected","encodeURIComponent","data","Math","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","element","heightViewport","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","pattern","mapAccents","e","o","u","c","RegExp","toFixed","max","Intl","NumberFormat","format","logName","message","errorObj","info","warn","_VTEX_API_ENDPOINT","_httpClient","skuId","productQuantity","sellerId","current","indexFound","x","quantity","endpointUrl","orderFormId","payload","orderItems","seller","skus","vtexjs","checkout","getOrderForm","skusCustomProducts","getCustomProducts","sku","isCustom","skuToIgnore","indexToRemove","indexList","removeMoreProducts","response","productsToAdd","productId","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","addToCart","customProducts","customProductItem","currentCustomProduct","customProductQuantity","newQuantity","Object","values","itemIndex","expectedOrderFormSections","noSplitItem","itemsIndex","updateProducts","postalCode","country","calculateShipping","simulateShipping","orderFormSimulated","sendAttachment","address","availableAddresses","selectedAddresses","appName","appFieldName","appFieldValue","_execute","httpVerb","header","method","headers","accept","fetch","validateResponse","parseResponseToJson","catch","ok","json","resolve","reject","statusText"],"mappings":"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","file":"js/b8one.desktop.transporter.js","sourcesContent":["import HttpClient from '../services/b8one.httpClient';\n\n/**\n * Masterdata Base Repository\n */\nclass MasterdataRepository {\n  /**\n   * Masterdata Repository constructor\n   * @param {*} entityCode\n   */\n  constructor(entityCode) {\n    const STORE_ID = 'TR';\n\n    this.entityCode_ = entityCode;\n    this.httpClient_ = new HttpClient();\n\n    // this._VTEX_MASTERDATA_ENDPOINT = `//api.vtexcrm.com.br/${STORE_ID}/dataentities/${entityCode}`;\n    this._VTEX_MASTERDATA_ENDPOINT = `/api/dataentities/${entityCode}`;\n  }\n\n  /**\n   * add\n   * @param {*} entityPayload\n   * @return {*}\n   */\n  add(entityPayload) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents`;\n\n    return this.httpClient_.put(apiEndpoint, entityPayload).then(\n      res => {\n        return res;\n      },\n      error => {\n        return error;\n      }\n    );\n  }\n\n  /**\n   * update..\n   * @param {*} entityPayload\n   * @return {*}\n   */\n  update(entityPayload) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents`;\n\n    return this.httpClient_.patch(apiEndpoint, entityPayload).then(\n      res => {\n        return res;\n      },\n      error => error\n    );\n  }\n\n  /**\n   * search\n   * @param {*} params\n   * @return {*}\n   */\n  search(params) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/search?${params}`;\n\n    return this.httpClient_.get(apiEndpoint).then(res => {\n      return res;\n    });\n  }\n\n  /**\n   * Get Document by document ID\n   * @param {GUID} documentId Document Id\n   */\n  async getByDocumentId(documentId) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}`;\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n\n  async getByDocumentIdWithFields(documentId, fields) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}?_fields=${fields}`;\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n  /**\n   * delete\n   * @param {*} documentId\n   * @return {*}\n   */\n  delete(documentId) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}`;\n\n    return this.httpClient_.delete(apiEndpoint).then(res => {\n      return res;\n    });\n  }\n\n  /**\n   *\n   * @param {*} documentId\n   * @param {*} field\n   * @param {*} fileName\n   */\n  getAttachmentUrl(documentId = '', field = '', fileName = '') {\n    return `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}/${field}/attachments/${fileName}`;\n  }\n\n  /**\n   * Get attachments\n   * @param {*} documentId\n   * @param {*} field\n   * @param {*} fileName\n   */\n  async getAttachment(documentId = '', field = '', fileName = '') {\n    // /api/dataentities/{{data_entity_name}}/documents/{{id}}/{{field}}/attachments/{{file_name}}\n    const apiEndpoint = this.getAttachmentUrl(documentId, field, fileName);\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n}\n\nexport default MasterdataRepository;\n","import HttpClient from './b8one.httpClient';\n\nexport default class TransporterService {\n  constructor() {\n    this.httpClient = new HttpClient();\n  }\n\n  /**\n   * This function return all active hubs from HUB Entity.\n   * @param  {Array|String} fields=['id', 'initialZipcode', 'finalZipcode']\n   */\n  async getALLHUBS(fields = ['id', 'initialZipcode', 'finalZipcode']) {\n    try {\n      const endpoint = `/api/dataentities/HB/search?_fields=${fields}&_where=active=true`;\n\n      return this.httpClient.get(endpoint);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * This functions get and filter the transporters by hubID property.\n   * @param  {String} hubID The documentID of a document from HUB Entity.\n   * @param  {Array|String} fields Document fields what you need\n   */\n  async getTransportersByHUB(hubID, fields) {\n    try {\n      const query = `(status=true AND idHUB=${hubID})`;\n\n      const endpoint = `/api/dataentities/TR/search?_fields=${fields}&_where=${query}&v=123`;\n\n      return this.httpClient.get(endpoint);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n","// Commons\nimport { Helper } from 'Commons';\n\n// Components\nimport CustomSelect from 'Components/b8one.customSelect.js';\nimport AccordionComponent from 'Components/b8one.accordionComponent.js';\n\n// Repositories\nimport MasterdataRepository from 'Repositories/b8one.masterdataRepository.js';\n\n// Services\nimport CartService from 'Services/b8one.cartService.js';\nimport TransporterService from 'Services/b8one.transporterService.js';\n\n/*\n  Class TransporterPage\n*/\nclass TransporterPage {\n  constructor() {\n    this.modalCompare = null;\n    this.addressCep = null;\n    this.transporterSelected = null;\n    this.transporters = [];\n    this.logisticsInfo = [];\n    this.filters = new Set();\n    this.compareTransportersList = new Set();\n    this.masterdataRepository = new MasterdataRepository('TR');\n    this.cartService = new CartService();\n    this.helper = new Helper();\n    this.orderBy = 'less-price';\n    this.totalizers = [];\n    this.orderForm = {};\n    this.hubID = null;\n    this.transporterService = new TransporterService();\n\n    window.TransporterPage = this;\n\n    this.init();\n  }\n\n  // Init Functions\n  async init() {\n    this.initFilterAccordions();\n    this.createCustomSelect();\n\n    this.orderForm = await this.cartService.getCurrent();\n\n    await this.setAddressCep();\n\n    this.setHubID();\n\n    this.transporters = await this.fetchTransporters();\n\n    await Promise.all([\n      this.getDeliveryTypes(),\n      this.setLogoUrlInTransportes(),\n    ]);\n\n    this.orderTransportersByLessPrice();\n\n    this.addTransportersToDOM();\n\n    this.setHandledFiltersChange();\n    this.setHandledsToTransporterElement();\n    this.setHandledScheduleChangeButtonsClick();\n    this.setHandledButtonSaveClick();\n  }\n\n  initFilterAccordions() {\n    const accordions = [...document.querySelectorAll('.js-accordion-filter')];\n\n    accordions.forEach(accordion => {\n      const accordionHeader = accordion.querySelector('.filter__header');\n\n      const accordionInstance = new AccordionComponent({\n        accordion,\n        accordionHeader,\n        openAccordionCallback: () => {\n          accordion.classList.add('filter--show');\n        },\n        closeAccordionCallback: ({ accordion }) => {\n          accordion.classList.remove('filter--show');\n        },\n      });\n\n      accordionInstance.isOpen = true;\n    });\n  }\n\n  // Set Handled Functions\n  setHandledFiltersChange() {\n    const filterItems = [...document.querySelectorAll('.filter__item')];\n\n    filterItems.forEach(filterItem =>\n      filterItem.addEventListener('change', event =>\n        this.handledFilterChange(event, filterItem)\n      )\n    );\n  }\n\n  setHandledsToTransporterElement() {\n    const transporters = [\n      ...document.querySelectorAll('.compare-transporter__list .transporter'),\n    ];\n\n    transporters.forEach(transporter => {\n      const priceElements = [...transporter.querySelectorAll('.price')];\n\n      priceElements.forEach(priceElement => {\n        priceElement.addEventListener('change', event => {\n          const { transporterDeliveryType } = priceElement.dataset;\n\n          transporter.setAttribute(\n            'data-transporter-delivery-type-selected',\n            transporterDeliveryType\n          );\n        });\n      });\n    });\n  }\n\n  setHandledScheduleChangeButtonsClick() {\n    const scheduleChangeButtons = [\n      ...document.querySelectorAll('.js-button-schedule-change'),\n    ];\n\n    scheduleChangeButtons.forEach(scheduleChangeButton => {\n      scheduleChangeButton.addEventListener('click', event =>\n        this.handledScheduleChangeButtonClick(scheduleChangeButton)\n      );\n    });\n  }\n\n  setHandledButtonSaveClick() {\n    const buttonSave = document.querySelector('.js-button-save');\n\n    buttonSave.addEventListener('click', () => this.handledButtonSaveClick());\n  }\n\n  // Handled Functions\n  handledFilterChange({ target }, filterItem) {\n    const { filter: filterName } = filterItem.dataset;\n\n    if (target.checked) {\n      this.filters.add(filterName);\n    } else {\n      this.filters.delete(filterName);\n    }\n\n    this.transporters.forEach(transporter => {\n      const transporterElement = document.querySelector(\n        `[id=\"${transporter.id}\"]`\n      );\n\n      const filtersArray = [...this.filters].map(\n        filter => !!transporter[filter]\n      );\n\n      if (transporterElement) {\n        filtersArray.includes(false)\n          ? transporterElement.classList.add('hide')\n          : transporterElement.classList.remove('hide');\n      }\n    });\n  }\n\n  handledTransporterCompareButtonClick(compareButton, transporterID) {\n    compareButton.classList.toggle('transporter__compare-button--active');\n\n    const toCompare = compareButton.classList.contains(\n      'transporter__compare-button--active'\n    );\n\n    if (toCompare) {\n      this.compareTransportersList.add(transporterID);\n    } else {\n      this.compareTransportersList.delete(transporterID);\n    }\n\n    this.updateTransporterFooter();\n  }\n\n  handledCompareButtonFooterClick() {\n    const compareButton = document.querySelector(\n      '.compare-transporter__footer .button'\n    );\n\n    compareButton.addEventListener('click', event => {\n      const columns = [...this.compareTransportersList]\n        .map(transporterID => {\n          return this.createCompareTableColumn(transporterID);\n        })\n        .join('');\n\n      const compareTable = document.querySelector(\n        '.modal-compare .compare__table'\n      );\n\n      compareTable.innerHTML = compareTable.children[0].outerHTML;\n\n      compareTable.innerHTML += columns;\n\n      this.setHandledScheduleChangeButtonsClick();\n      this.createTransportersCustomSelects();\n\n      this.modalCompare.show();\n    });\n  }\n\n  async handledScheduleChangeButtonClick(scheduleChangeButton) {\n    const transporterElement = Helper.getParents(\n      scheduleChangeButton,\n      '.transporter'\n    )[0];\n\n    this.setTransporterSelected(transporterElement);\n\n    await this.saveData();\n\n    if (this.transporterSelected) {\n      window.location.assign('/endereco');\n    }\n  }\n\n  async handledButtonSaveClick() {\n    const transporterElement = Helper.getParents(\n      priceActive,\n      '.transporter'\n    )[0];\n\n    this.setTransporterSelected(transporterElement);\n\n    document.dispatchEvent(window.initSaveCustomDataEvent);\n\n    await this.saveData();\n\n    document.dispatchEvent(window.endSaveCustomDataEvent);\n  }\n\n  // Create Functions\n  createTransportersCustomSelects() {\n    const transportersSelects = [\n      ...document.querySelectorAll('.transporter__select-custom'),\n    ];\n\n    transportersSelects.forEach(transporterSelect => {\n      const selectElement = transporterSelect.querySelector('.select__native');\n      const selectCustom = transporterSelect.querySelector('.select__custom');\n      const customSelectList = transporterSelect.querySelector('.select__list');\n      const customSelectSelected = transporterSelect.querySelector(\n        '.select__custom-selected'\n      );\n\n      const transporterElement = Helper.getParents(\n        transporterSelect,\n        '.transporter'\n      )[0];\n\n      new CustomSelect({\n        selectElement,\n        customSelectList,\n        customSelectSelected,\n        customSelectListItemClassName: '',\n        customSelectListItemClassNameActive: 'active',\n        selectOpenCallback: event => {\n          const selectListHeight = customSelectList.offsetHeight;\n\n          selectCustom.classList.add('select__custom--open');\n          selectCustom.style.maxHeight = `${selectListHeight}px`;\n        },\n        selectCloseCallback: () => {\n          selectCustom.classList.remove('select__custom--open');\n          selectCustom.style.maxHeight = 0;\n        },\n        selectChangeCallback: ({ value }) => {\n          transporterElement.setAttribute(\n            'data-transporter-delivery-type-selected',\n            value\n          );\n        },\n      });\n    });\n  }\n\n  createCustomSelect() {\n    const filterSelect = document.querySelector(\n      '.header__actions .filter__select'\n    );\n\n    const customSelect = new CustomSelect({\n      selectElement: '.header__actions .filter__select .select__native',\n      customSelectList: '.header__actions .select__list',\n      customSelectSelected: '.header__actions .select__custom-selected',\n      customSelectListItemClassName: '',\n      customSelectListItemClassNameActive: 'active',\n      selectOpenCallback: event => {\n        filterSelect.classList.add('filter__select--open');\n      },\n      selectCloseCallback: () => {\n        filterSelect.classList.remove('filter__select--open');\n      },\n      selectChangeCallback: ({ value }) => {\n        this.orderTransportersBy(value);\n      },\n    });\n  }\n\n  orderTransportersBy(orderBy) {\n    if (this.orderBy === orderBy) return;\n\n    if (orderBy === 'less-price') {\n      this.transporters.sort((a, b) => {\n        return a.deliveryTypes[0].price - b.deliveryTypes[0].price;\n      });\n    } else if (orderBy === 'higher-price') {\n      this.transporters.sort((a, b) => {\n        return b.deliveryTypes[0].price - a.deliveryTypes[0].price;\n      });\n    }\n\n    this.orderBy = orderBy;\n\n    const compareTransporterList = document.querySelector(\n      '.compare-transporter__list'\n    );\n\n    this.transporters.forEach((transporter, index) => {\n      const prevTransporterElement = compareTransporterList.children[index];\n\n      const nextTransporterElement = compareTransporterList.querySelector(\n        `[id=\"${transporter.id}\"]`\n      );\n\n      if (prevTransporterElement.id === nextTransporterElement.id) return;\n\n      compareTransporterList.insertBefore(\n        nextTransporterElement,\n        prevTransporterElement\n      );\n    });\n  }\n\n  createCompareTableColumn(transporterID) {\n    const transporter = this.transporters.filter(\n      ({ id }) => id === transporterID\n    )[0];\n\n    const {\n      id,\n      nome,\n      logoURL,\n      armazenagem,\n      tempoMercado,\n      certificacao,\n      deliveryTypes,\n      equipeFeminina,\n    } = transporter;\n\n    const deliveryShared = deliveryTypes.filter(\n      ({ type }) => type === 'Compartilhado'\n    )[0];\n\n    const deliveryExclusive = deliveryTypes.filter(\n      ({ type }) => type === 'Exclusivo'\n    )[0];\n\n    return `\n      <div class=\"table__column\">\n        <div\n          class=\"transporter\"\n          data-transporter-id=\"${id}\"\n          data-transporter-name=\"${nome}\"\n          data-transporter-delivery-type-selected=\"Exclusivo\"\n        >\n          <header class=\"transporter__header\">\n            <figure class=\"transporter__brand\">\n              <img\n                class=\"transporter__logo\"\n                src=\"${logoURL}\"\n              />\n            </figure>\n\n            <h3 class=\"transporter__name\">${nome}</h3>\n          </header>\n\n          <ul class=\"transporter__fields-list\">\n            <li class=\"list__item\">\n              ${\n                deliveryShared\n                  ? deliveryShared.priceFormatted\n                  : 'Não disponivel'\n              }\n            </li>\n\n            <li class=\"list__item\">\n              ${\n                deliveryExclusive\n                  ? deliveryExclusive.priceFormatted\n                  : 'Não disponivel'\n              }\n            </li>\n\n            <li class=\"list__item\">\n              ${certificacao ? 'Sim' : 'Não'}\n            </li>\n\n            <li class=\"list__item\">\n              ${equipeFeminina ? 'Sim' : 'Não'}\n            </li>\n\n            <li class=\"list__item\">\n              ${armazenagem ? 'Sim' : 'Não'}\n            </li>\n\n            <li class=\"list__item\">\n              <div class=\"transporter__select-custom\">\n                <select class=\"select__native\">\n                  ${deliveryTypes.map(({ type }) => {\n                    return `<option value=\"${type}\">${type}</option>`;\n                  })}\n                </select>\n\n                <span class=\"select__custom-selected\"></span>\n\n                <div class=\"select__custom\">\n                  <ul class=\"select__list\">\n                  </ul>\n                </div>\n\n                <i class=\"fas fa-caret-down select__icon\"></i>\n              </div>\n            </li>\n          </ul>\n\n          <button class=\"button button--primary js-button-schedule-change\">Agendar</button>\n        </div>\n      </div>\n    `;\n  }\n\n  createTransporterPriceElement(item) {\n    let priceFormatted = item.priceFormatted;\n    let StrongPrice = priceFormatted.substring(0, priceFormatted.length - 3).replace('R$ ', '');\n    let decimals = priceFormatted.replace(`R$ ${StrongPrice}`, '');\n    return `\n      <div class=\"price\" data-transporter-delivery-type=\"${item.type}\">\n        <div class=\"price__row\">\n          <div class=\"price__container price__container--flex\">\n            <label for=\"${item.id}\">\n              <div class=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id=\"${item.id}\"\n                />\n              </div>\n            </label>\n          </div>\n\n          <div class=\"price__container price__container--right\">\n            <span class=\"price__total\">R$ <span>${StrongPrice}</span>${decimals}</span>\n          </div>\n        </div>\n\n        ${\n          item.type === 'Compartilhado'\n            ? `\n          <p class=\"price__paragraph price__paragraph--text-orange\">\n            * Prazo de entrega: em até 45 dias da data da embalagem.\n          </p>\n        `\n            : ''\n        }\n      </div>\n    `;\n  }\n\n  createTransporterElement(transporterData) {\n    const {\n      id,\n      nome,\n      logoURL,\n      features,\n      descricao,\n      deliveryTypes,\n    } = transporterData;\n\n    if (!deliveryTypes) {\n      return '';\n    }\n\n    const showSeeMoreButton = descricao.length > 130;\n\n    const prices = deliveryTypes\n      .map(item => {\n        return this.createTransporterPriceElement(item);\n      })\n      .join('');\n\n    return `\n      <li\n        class=\"transporter\"\n        id=\"${id}\"\n        data-transporter-id=\"${id}\"\n        data-transporter-name=\"${transporterData.deliveryTypes[0].slaName}\"\n        data-transporter-delivery-type-selected=\"Exclusivo\"\n      >\n        <div class=\"transporter__details\" transporter-name=\"${nome}\">\n          <div class=\"transporter__row\">\n            <h3 class=\"transporter__name\">${nome}</h3>\n          </div>\n\n          <div class=\"transporter__description\">\n            <p class=\"description__paragraph\">\n              ${descricao}\n            </p>\n            <p class=\"description__price\">\n              ${prices}\n            </p>\n\n            ${\n              false\n                ? '<button class=\"description__see-more\">Ver tudo</button>'\n                : ''\n            }\n          </div>\n\n          <div class=\"transporter__row\">\n            <strong>Serviços inclusos:</strong>\n            <ul class=\"transporter__benefits\">\n              ${features\n                .split(';')\n                .map(\n                  feature => `\n                    <li class=\"benefit\">\n                      <i class=\"far fa-check benefit__icon\"></i>\n\n                      <p class=\"benefit__text\">\n                        ${feature}\n                      </p>\n                    </li>\n                  `\n                )\n                .join('')}\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"transporter__prices\">\n          <hr/>\n          <button class=\"button button--primary js-button-schedule-change\">\n            AGENDAR\n          </button>\n        </div>\n      </li>\n    `;\n  }\n\n  // Fetch Functions\n  async fetchTransporters() {\n    const fields =\n      'armazenagem,certificacao,courierIds,descricao,equipeFeminina,features,frota,logo,nome,status,tempoMercado,id,tipoEmbalabem';\n\n    try {\n      if (this.hubID) {\n        return await this.transporterService.getTransportersByHUB(\n          this.hubID,\n          fields\n        );\n      }\n\n      throw new Error('The hubID is undefined');\n    } catch (error) {\n      window.bugsnagClient.notify(new Error(error));\n    }\n  }\n\n  async fetchTransporterLogoURL(id, filename) {\n    return await this.masterdataRepository.getAttachmentUrl(\n      id,\n      'logo',\n      filename\n    );\n  }\n\n  // Other Functions\n  updateTransporterFooter() {\n    const compareFooter = document.querySelector(\n      '.compare-transporter__footer'\n    );\n\n    const compareFooterParagraph = compareFooter.querySelector(\n      '.footer__paragraph'\n    );\n\n    const compareFooterButton = compareFooter.querySelector('.button');\n\n    if (this.compareTransportersList.size > 0) {\n      compareFooter.classList.add('compare-transporter__footer--show');\n    } else {\n      compareFooter.classList.remove('compare-transporter__footer--show');\n    }\n\n    if (this.compareTransportersList.size < 2) {\n      compareFooterParagraph.innerHTML = `\n        Selecione <span class=\"footer__paragraph--orange\">2 ou mais empresas de mudança </span>para comparar\n      `;\n\n      compareFooterButton.classList.add('button--disabled');\n    } else {\n      compareFooterParagraph.innerHTML = `\n        Você selecionou <span class=\"footer__paragraph--orange\">${this.compareTransportersList.size} empresas de mudança</span>\n      `;\n\n      compareFooterButton.classList.remove('button--disabled');\n    }\n  }\n\n  setTransporterSelected(transporterElement) {\n    const {\n      transporterId,\n      transporterDeliveryTypeSelected,\n    } = transporterElement.dataset;\n\n    const index = this.transporters.findIndex(({ id }) => id === transporterId);\n\n    this.transporterSelected = this.transporters[index];\n\n    this.transporterSelected.deliveryTypeSelected = this.transporters[index].deliveryTypes[0];\n  }\n\n  updateSelectedSLA() {\n    const { slaName } = 'Exclusivo';\n\n    this.logisticsInfo = this.logisticsInfo.map(item => ({\n      ...item,\n      selectedSla: slaName,\n    }));\n  }\n\n  async saveData() {\n    try {\n      this.updateSelectedSLA();\n\n      await Promise.all([\n        this.cartService.updateCheckoutTransporterSLA(this.logisticsInfo),\n        this.cartService.setSingleCustomDataField(\n          'selectedcourier',\n          'courier_data',\n          JSON.stringify(this.transporterSelected)\n        ),\n        this.cartService.setSingleCustomDataField(\n          'orderinfo',\n          'current_step',\n          'transporter'\n        ),\n      ]);\n    } catch (error) {\n      console.log('saveData', error);\n    }\n  }\n\n  async setLogoUrlInTransportes() {\n    this.transporters = await Promise.all(\n      this.transporters.map(async transporter => {\n        const { id, logo } = transporter;\n\n        const logoURL = await this.fetchTransporterLogoURL(id, logo);\n\n        transporter.logoURL = logoURL;\n\n        return transporter;\n      })\n    );\n  }\n\n  getTransporterVariations(logisticsInfo) {\n    const transporterVariations = {};\n\n    logisticsInfo.forEach(({ slas }) => {\n      slas.forEach(({ id, price, name }) => {\n        const key = id.toLowerCase().replace(/\\s/g, '');\n\n        if (transporterVariations[key]) {\n          transporterVariations[key].price += price;\n        } else {\n          transporterVariations[key] = {\n            price,\n            name,\n          };\n        }\n      });\n    });\n\n    return transporterVariations;\n  }\n\n  async setAddressCep() {\n    const { customData } = await this.cartService.getCurrent();\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'orderinfo')\n      .forEach(customApp => {\n        const { to_address_zipcode } = customApp.fields;\n\n        this.addressCep = to_address_zipcode;\n      });\n  }\n\n  setHubID() {\n    const orderInfoApp = this.orderForm.customData?.customApps.find(\n      customApp => customApp.id === 'orderinfo'\n    );\n\n    if (!orderInfoApp) return;\n\n    const { hubID } = orderInfoApp.fields;\n\n    this.hubID = hubID;\n  }\n\n  setTotalizers(totalizers) {\n    this.totalizers = totalizers;\n  }\n\n  async getLogisticsInfo() {\n    const {\n      shippingData,\n      totalizers,\n    } = await this.cartService.simulateOrderForm(this.addressCep);\n\n    this.setTotalizers(totalizers);\n\n    this.logisticsInfo = shippingData.logisticsInfo;\n  }\n\n  async getDeliveryTypes() {\n    await this.getLogisticsInfo();\n\n    const insuranceSKU = this.orderForm.items.filter(\n      ({ id }) => parseInt(id) === 35\n    )[0];\n\n    const transporterVariations = this.getTransporterVariations(\n      this.logisticsInfo\n    );\n\n    const totalItemsWithDiscounts = this.totalizers\n      .filter(total => total.id !== 'Shipping')\n      .reduce((total, totalizer) => total + totalizer.value, 0);\n\n    this.logisticsInfo[0].slas\n      .map(courier => {\n        const { courierId } = courier.deliveryIds[0];\n\n        const index = this.transporters.findIndex(({ courierIds }) => {\n          const ids = courierIds.split(';');\n\n          return ids.includes(courierId);\n        });\n\n        courier.transporterIndex = index;\n\n        return courier;\n      })\n      .filter(({ transporterIndex }) => transporterIndex !== -1)\n      .forEach(({ id, name, deliveryIds, transporterIndex }) => {\n        const key = id.toLowerCase().replace(/\\s/g, '');\n        const [courierName, courierType] = id.split(' - ');\n        const courierTypeLowerCase = courierType.toLowerCase();\n\n        const { courierId } = deliveryIds[0];\n\n        let { price } = transporterVariations[key];\n\n        price += insuranceSKU\n          ? totalItemsWithDiscounts + -insuranceSKU.manualPrice\n          : totalItemsWithDiscounts;\n\n        const priceFormatted = this.helper.formatPrice(price);\n\n        const currentTransporter = this.transporters[transporterIndex];\n\n        const courier = [\n          {\n            price,\n            priceFormatted,\n            id: courierId,\n            type: courierType,\n            slaName: name,\n          },\n        ];\n\n        if (currentTransporter.deliveryTypes) {\n          currentTransporter.deliveryTypes = [\n            ...courier,\n            ...currentTransporter.deliveryTypes,\n          ];\n        } else {\n          currentTransporter.deliveryTypes = courier;\n        }\n\n        currentTransporter[courierTypeLowerCase] = true;\n      });\n\n    this.removeTransportersWithoutDeliveryType();\n    this.orderDeliveryTypesByLessPrice();\n  }\n\n  removeTransportersWithoutDeliveryType() {\n    this.transporters = this.transporters.filter(transporter => {\n      return transporter.hasOwnProperty('deliveryTypes');\n    });\n  }\n\n  orderDeliveryTypesByLessPrice() {\n    this.transporters = this.transporters.map(transporter => {\n      transporter.deliveryTypes.sort((a, b) => a.price - b.price);\n\n      return transporter;\n    });\n  }\n\n  orderTransportersByLessPrice() {\n    this.transporters.sort((a, b) => {\n      return a.deliveryTypes[0].price - b.deliveryTypes[0].price;\n    });\n  }\n\n  addTransportersToDOM() {\n    const compareTransporterList = document.querySelector(\n      '.compare-transporter__list'\n    );\n\n    const transporters = this.transporters.map(transporter =>\n      this.createTransporterElement(transporter)\n    );\n\n    if (transporters.length > 0) {\n      compareTransporterList.classList.remove('empty-list');\n      compareTransporterList.innerHTML = transporters.join('');\n    } else {\n      compareTransporterList.classList.add('empty-list');\n      compareTransporterList.innerHTML = `<li class=\"empty-text\">Não encontramos nenhum resultado para os filtros selecionados.</li>`;\n    }\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new TransporterPage();\n});\n","export default class AccordionComponent {\n  constructor({\n    accordion,\n    accordionHeader,\n    openAccordionCallback,\n    closeAccordionCallback,\n  }) {\n    this.isOpen = false;\n    this.openCallback = openAccordionCallback || new Function();\n    this.closeCallback = closeAccordionCallback || new Function();\n\n    this.accordion =\n      accordion instanceof Element\n        ? accordion\n        : document.querySelector(accordion);\n\n    this.accordionHeader =\n      accordionHeader instanceof Element\n        ? accordionHeader\n        : document.querySelector(accordionHeader);\n\n    this.setHandleClick();\n  }\n\n  setHandleClick() {\n    this.accordionHeader.addEventListener('click', () => {\n      this.isOpen ? this.closeCallback(this) : this.openCallback(this);\n\n      this.isOpen = !this.isOpen;\n    });\n  }\n}\n","/**\n * Ensure Abstraction class\n */\nclass Ensure {\n  /**\n   * Ensure value is Undefined\n   * @param {*} value Value to be validated\n   * @return {boolean}\n   */\n  static isUndefined(value = undefined) {\n    return typeof value === 'undefined' ||\n      value === null ||\n      value === '' ||\n      value === {} ||\n      value === [];\n    // || JSON.stringify(value) === JSON.stringify({});\n  }\n\n  /**\n   * Ensure Input validity\n   * @param {*} input to validate\n   * @return {boolean} true if is valid\n   */\n  static isInputValid(input) {\n    return !this.isUndefined(input) && input.checkValidity();\n  }\n\n  /**\n   * Verify if object has properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Boolean} True if object has all properties\n   */\n  static hasProps(object, props) {\n    const missingPropsResult = this.getMissingProps(object, props);\n    return missingPropsResult.length <= 0;\n  }\n\n  /**\n   * Get Object missing properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Array} missing properties\n   */\n  static getMissingProps(object, props) {\n    let missingProps = [];\n    [...props].forEach((prop) => {\n      const result = prop in object;\n      if (!result) {\n        missingProps.push(prop);\n      }\n    });\n\n    return missingProps;\n  }\n}\n\nexport default Ensure;\n","export default class CustomSelect {\n  constructor({\n    selectElement,\n    customSelectList,\n    customSelectSelected,\n    customSelectListItemClassName,\n    customSelectListItemClassNameActive,\n    selectChangeCallback,\n    selectOpenCallback,\n    selectCloseCallback,\n  }) {\n    this.isOpen = false;\n\n    this.selectElement =\n      selectElement instanceof Element\n        ? selectElement\n        : document.querySelector(selectElement);\n\n    this.customSelectList =\n      customSelectList instanceof Element\n        ? customSelectList\n        : document.querySelector(customSelectList);\n\n    this.customSelectSelected =\n      customSelectSelected instanceof Element\n        ? customSelectSelected\n        : document.querySelector(customSelectSelected);\n\n    this.selectChangeCallback = selectChangeCallback || new Function();\n    this.selectOpenCallback = selectOpenCallback || new Function();\n    this.selectCloseCallback = selectCloseCallback || new Function();\n    this.customSelectListItemClassName = customSelectListItemClassName || '';\n    this.customSelectListItemClassNameActive =\n      customSelectListItemClassNameActive || '';\n\n    this.setCurrentSelectedItem();\n    this.createSelectList();\n    this.setListenerForCurrentSelected();\n  }\n\n  setCurrentSelectedItem() {\n    let { options, selectedIndex } = this.selectElement;\n\n    this.customSelectSelected.textContent = options[selectedIndex].textContent;\n  }\n\n  handleSelectChange(target) {\n    let { value } = this.selectElement;\n    let { value: newValue } = target.dataset;\n\n    const prevListItemActive = this.customSelectList.querySelector(\n      `.${this.customSelectListItemClassNameActive}`\n    );\n\n    if (prevListItemActive) {\n      prevListItemActive.classList.remove(\n        this.customSelectListItemClassNameActive\n      );\n    }\n\n    target.classList.add(this.customSelectListItemClassNameActive);\n\n    this.close();\n\n    if (value !== newValue) {\n      this.changeOption(newValue);\n    }\n  }\n\n  createSelectList() {\n    [...this.selectElement].forEach(option => {\n      const listItem = document.createElement('li');\n      listItem.setAttribute('class', this.customSelectListItemClassName);\n      listItem.dataset['value'] = option.value;\n\n      listItem.textContent = option.textContent.trim();\n\n      listItem.addEventListener('click', ({ target }) =>\n        this.handleSelectChange(target)\n      );\n\n      this.customSelectList.append(listItem);\n    });\n  }\n\n  setListenerForCurrentSelected() {\n    this.customSelectSelected.addEventListener('click', () => {\n      this.open();\n\n      document.body.addEventListener('click', ({ target }) => {\n        let close = !target.className.includes('custom-select');\n\n        if (close) this.close();\n      });\n    });\n  }\n\n  open(event = null) {\n    this.isOpen = true;\n    this.selectOpenCallback(event);\n    this.customSelectList.classList.add('open');\n  }\n\n  close() {\n    this.isOpen = false;\n    this.selectCloseCallback();\n    this.customSelectList.classList.remove('open');\n  }\n\n  changeOption(value) {\n    this.selectElement.value = value;\n\n    const eventChange = new Event('change', { bubbles: true });\n\n    this.selectElement.dispatchEvent(eventChange);\n\n    this.setCurrentSelectedItem();\n    this.selectChangeCallback({\n      value,\n    });\n  }\n}\n","/* eslint-disable max-len */\nimport { Logger } from './';\n\n/**\n * Helper Abstraction class\n */\nclass Helper {\n  /**\n   * Helper constructor\n   * @param {*} props\n   */\n  constructor(props) {\n    this._logger = new Logger('Ensure');\n    this.props = props || {\n      language: navigator.language || navigator.userLanguage,\n      currency: 'BRL',\n      currencyLocale: 'pt-br',\n      minimumFractionDigits: 2,\n    };\n  }\n\n  /**\n   * format currency\n   * @param {*} value\n   * @param {*} minimumFractionDigits\n   * @return {*}\n   */\n  formatPrice(value) {\n    value = value / 100;\n    value = (value * 1).toFixed(\n      Math.max(0, ~~this.props.minimumFractionDigits)\n    );\n\n    return new Intl.NumberFormat(this.props.currencyLocale, {\n      style: 'currency',\n      currency: this.props.currency,\n      minimumFractionDigits: this.props.minimumFractionDigits,\n    }).format(value);\n  }\n\n  static getParents(elem, selector) {\n    // Element.matches() polyfill\n    if (!Element.prototype.matches) {\n      Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\n              s\n            ),\n            i = matches.length;\n\n          while (--i >= 0 && matches.item(i) !== this) {}\n\n          return i > -1;\n        };\n    }\n\n    // Set up a parent array\n    let parents = [];\n\n    // Push each parent element to the array\n    for (; elem && elem !== document; elem = elem.parentNode) {\n      if (selector) {\n        if (elem.matches(selector)) {\n          parents.push(elem);\n        }\n\n        continue;\n      }\n\n      parents.push(elem);\n    }\n\n    // Return our parent array\n    return parents;\n  }\n\n  static serializeForm(form) {\n    // Setup our serialized data\n    let serialized = [];\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          serialized.push(\n            encodeURIComponent(field.name) +\n              '=' +\n              encodeURIComponent(field.options[n].value)\n          );\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        serialized.push(\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\n        );\n      }\n    }\n\n    return serialized.join('&');\n  }\n\n  static getFormData(form) {\n    // Setup our serialized data\n    let data = {};\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          data[field.name] = field.options[n].value;\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        data[field.name] = field.value;\n      }\n    }\n\n    return data;\n  }\n\n  static getRandomID() {\n    // Generate unique IDs for use as pseudo-private/protected names.\n    // Similar in concept to\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\n    //\n    // The goals of this function are twofold:\n    //\n    // * Provide a way to generate a string guaranteed to be unique when compared\n    //   to other strings generated by this function.\n    // * Make the string complex enough that it is highly unlikely to be\n    //   accidentally duplicated by hand (this is key if you're using `ID`\n    //   as a private/protected name on an object).\n    //\n    // Use:\n    //\n    //     var privateName = ID();\n    //     var o = { 'public': 'foo' };\n    //     o[privateName] = 'bar';\n\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n\n    return (\n      '_' +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  static setCookie(cname, cvalue, exdays) {\n    const date = new Date();\n\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\n\n    const expires = 'expires=' + date.toUTCString();\n\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\n  }\n\n  static getCookie(cname) {\n    const decodedCookie = decodeURIComponent(document.cookie);\n\n    const cookie = decodedCookie\n      .split(';')\n      .filter(cookie => cookie.includes(cname))[0];\n\n    return cookie || '';\n  }\n\n  static isInViewport(element) {\n    const heightViewport =\n      window.innerHeight || document.documentElement.clientHeight;\n\n    const widthViewport =\n      window.innerWidth || document.documentElement.clientWidth;\n\n    const { top, right, bottom, left } = element.getBoundingClientRect();\n\n    return (\n      top >= 0 &&\n      left >= 0 &&\n      bottom <= heightViewport &&\n      right <= widthViewport\n    );\n  }\n\n  static removeAccents(str) {\n    const mapAccents = {\n      a: 'á|à|ã|â|À|Á|Ã|Â',\n      e: 'é|è|ê|É|È|Ê',\n      i: 'í|ì|î|Í|Ì|Î',\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n      c: 'ç|Ç',\n      n: 'ñ|Ñ',\n    };\n\n    for (let pattern in mapAccents) {\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\n    }\n\n    return str;\n  }\n}\n\nexport default Helper;\n","/* eslint no-console: 0 */\n\n/**\n * Logger Abstraction class\n */\nclass Logger {\n  /**\n   * Logger constructor\n   * @param {string} logName Application name to log\n   */\n  constructor(logName = 'B8ONE Logger Component') {\n    this.logName = logName;\n  }\n\n  /**\n   * Log error message\n   * @param {*} message - Message text\n   * @param {*} errorObj - Message object\n   */\n  error(message = '', errorObj = {}) {\n    console.error(message, errorObj);\n  }\n\n  /**\n   * Log information message\n   * @param {*} message - Message text\n   */\n  info(message = '') {\n    console.info(message);\n  }\n\n  /**\n   * Log warning message\n   * @param {*} message - Message text\n   */\n  warning(message = '') {\n    console.warn(this.logName, message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   */\n  log(message = '') {\n    console.log(message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   * @param {*} object - object to be logged\n   */\n  log(message = '', object = {}) {\n    console.log(message, object);\n  }\n}\n\nexport default Logger;\n","/* eslint-disable max-len */\n\nimport { Ensure, Logger } from '../common';\nimport HttpClient from './b8one.httpClient';\n\n/**\n * Cart Abstraction class\n */\nclass CartService {\n  /**\n   * Cart constructor\n   */\n  constructor() {\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\n\n    this._logger = new Logger('Cart service');\n    this._httpClient = new HttpClient();\n  }\n\n  /**\n   * Get current cart\n   * @return {*} Cart object\n   */\n  async getCurrent() {\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\n  }\n\n  /**\n   * Add item to cart\n   * @param {*} skuId - Product sku Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   */\n  async add(skuId, productQuantity, sellerId = 1) {\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\n\n    if (!Ensure.isUndefined(skuId)) {\n      const current = await this.getCurrent();\n      const indexFound = current.items.findIndex(x => x.id === skuId);\n\n      if (indexFound > -1) {\n        productQuantity =\n          parseInt(productQuantity) +\n          parseInt(current.items[indexFound].quantity);\n      }\n\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n\n      const payload = {\n        orderItems: [\n          {\n            seller: sellerId.toString(),\n            quantity: parseInt(productQuantity),\n            id: skuId.toString(),\n          },\n        ],\n      };\n\n      return this._httpClient.patch(endpointUrl, payload);\n    }\n  }\n\n  async checkoutCRUD(skus) {\n    let { items } = await window.vtexjs.checkout.getOrderForm();\n\n    const skusCustomProducts = this.getCustomProducts(skus);\n\n    skus = skus.filter(sku => !sku.isCustom);\n    skus = [...skus, ...skusCustomProducts];\n\n    const skuToIgnore = [19, 698, 25, 26];\n\n    const indexToRemove = items.reduce((indexList, item, index) => {\n      const customProductSKUs = [25, 26];\n\n      if (customProductSKUs.includes(parseInt(item.id))) {\n        return [...indexList, index];\n      }\n\n      return indexList;\n    }, []);\n\n    if (indexToRemove.length > 0) {\n      const response = await this.removeMoreProducts(indexToRemove);\n\n      response && (items = response.items);\n    }\n\n    const productsToAdd = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        let index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        return index === -1 && sku.quantity > 0;\n      })\n      .map(sku => ({\n        quantity: sku.quantity,\n        seller: 1,\n        id: sku.skuId || sku.id,\n      }));\n\n    console.log('productsToAdd', productsToAdd);\n\n    const productsToUpdate = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\n          const diffQuantity =\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\n\n          return sameSku && diffQuantity && sku.quantity > 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: sku.quantity,\n        };\n      });\n\n    console.log('productsToUpdate', productsToUpdate);\n\n    const productsToReplaceSKU = skus\n      .filter(\n        sku =>\n          sku.quantity > 0 &&\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\n      )\n      .filter(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        if (index !== -1) {\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\n\n          return diffSku;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        const oldSKU = {\n          index,\n          seller: 1,\n          quantity: 0,\n        };\n\n        const newSKU = {\n          seller: 1,\n          id: sku.skuId,\n          quantity: sku.quantity,\n        };\n\n        return [oldSKU, newSKU];\n      })\n      .reduce((itemsList, current) => {\n        const [oldSKU, newSKU] = current;\n\n        return [...itemsList, oldSKU, newSKU];\n      }, []);\n\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\n\n    const productsToRemove = skus\n      .filter(sku => sku.quantity < 1)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          return sku.quantity == 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: 0,\n        };\n      });\n\n    console.log('productsToRemove', productsToRemove);\n\n    if (productsToUpdate[0]) {\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\n    }\n\n    if (productsToReplaceSKU[0]) {\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\n    }\n\n    if (productsToRemove[0]) {\n      await window.vtexjs.checkout.removeItems(productsToRemove);\n    }\n\n    if (productsToAdd[0]) {\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\n    }\n  }\n\n  getCustomProducts(skus) {\n    const customProducts = {};\n\n    skus\n      .filter(({ isCustom }) => isCustom === true)\n      .forEach(({ skuId, quantity, customProductItem }) => {\n        let currentCustomProduct = customProducts[skuId];\n\n        const customProductQuantity =\n          parseInt(customProductItem.quantity) * parseInt(quantity);\n\n        if (currentCustomProduct) {\n          const newQuantity =\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\n\n          currentCustomProduct = {\n            ...currentCustomProduct,\n            quantity: newQuantity,\n          };\n        } else {\n          currentCustomProduct = {\n            ...customProductItem,\n            quantity: customProductQuantity,\n            isCustom: true,\n          };\n        }\n\n        customProducts[skuId] = currentCustomProduct;\n      });\n\n    return Object.values(customProducts);\n  }\n\n  async getProductIndexInOrderForm(productId) {\n    const { items } = await this.getCurrent();\n\n    const index = items.findIndex(item => item.productId == productId);\n\n    if (index !== -1) return index;\n\n    return;\n  }\n\n  /**\n   * Remove item to cart\n   * @param {JSON} itemIndex - Product item index to be removed\n   */\n  async remove(itemIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: [\n        {\n          index: itemIndex,\n          quantity: 0,\n        },\n      ],\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  /**\n   * Remove items of cart\n   * @param {Array} itemsIndex - Products items index to be removed\n   */\n  async removeMoreProducts(itemsIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: itemsIndex.map(index => ({\n        index,\n        quantity: 0,\n      })),\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    return await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  async updateProduct(skuId, quantity, seller = 1) {\n    const newSKU = {\n      seller,\n      quantity,\n      id: skuId,\n    };\n\n    return await this.updateProducts([newSKU]);\n  }\n\n  async updateProducts(skus) {\n    const { items, orderFormId } = await this.getCurrent();\n\n    skus = skus\n      .map(({ id, quantity, seller }) => {\n        const index = items.findIndex(\n          item => parseInt(item.id) === parseInt(id)\n        );\n\n        return {\n          id,\n          index,\n          quantity,\n          seller: seller || 1,\n        };\n      })\n      .filter(sku => sku.index !== -1);\n\n    if (skus.length > 0) {\n      const payload = {\n        orderItems: skus,\n      };\n\n      return await this._httpClient.patch(\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\n        payload\n      );\n    }\n  }\n\n  async simulateOrderForm(postalCode, country = 'BRA') {\n    try {\n      await vtexjs.checkout.getOrderForm();\n\n      const orderForm = await vtexjs.checkout.calculateShipping({\n        postalCode,\n        country,\n      });\n\n      return orderForm;\n    } catch (error) {\n      console.error('Error in simulateOrderForm', error);\n    }\n  }\n\n  async simulateShipping(items, postalCode, country = 'BRA') {\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\n      items,\n      postalCode,\n      country\n    );\n\n    return orderFormSimulated;\n  }\n\n  async updateCheckoutTransporterSLA(logisticsInfo) {\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.logisticsInfo = logisticsInfo;\n\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async updateCheckoutAddress(address) {\n    console.log(address);\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.availableAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.selectedAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.address = {\n      ...shippingData.address,\n      ...address,\n    };\n\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async setMultipleCustomDataFields(appName, fields) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\n\n    try {\n      return await this._httpClient.put(endpoint, fields);\n    } catch (error) {\n      console.error('setMultipleCustomDataFields', error);\n    }\n\n    return;\n  }\n\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: appFieldValue };\n\n    try {\n      return await this._httpClient.put(endpoint, payload);\n    } catch (error) {\n      console.error('setSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  async removeSingleCustomDataField(appName, appFieldName) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: null };\n\n    try {\n      return await this._httpClient.delete(endpoint, payload);\n    } catch (error) {\n      console.error('removeSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  /**\n   * Cart's payload method factory\n   * @param {*} skuId - Product Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   * @return {JSON} cart paylod\n   */\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\n    return {\n      id: skuId,\n      quantity: productQuantity,\n      seller: sellerId,\n    };\n  }\n}\n\nexport default CartService;\n","import fetch from 'unfetch';\nimport { Ensure, Logger } from '../common';\n\n/**\n * HttpClient Abstraction class\n */\nclass HttpClient {\n  /**\n   * HttpClient constructor\n   */\n  constructor() {\n    this._logger = new Logger('httpClient');\n  }\n\n  /**\n   * Get\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  get(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'GET');\n    }\n  }\n\n  /**\n   * Delete\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  delete(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'DELETE');\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  post(endpointUrl, payload = {}) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'POST', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  put(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PUT', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  patch(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PATCH', payload);\n    }\n  }\n\n  /**\n   * @param {String} endpointUrl\n   * @param {String} httpVerb\n   * @param {Object} payload\n   * @return {Promise}\n   */\n  _execute(endpointUrl, httpVerb, payload) {\n    let header = {\n      method: httpVerb,\n      headers: {\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\n        // 'Content-Type': 'application/json',\n        accept: 'application/vnd.vtex.masterdata.v10+json',\n        'content-type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (payload) {\n      header['body'] = JSON.stringify(payload);\n    }\n\n    return fetch(endpointUrl, header)\n      .then(this.validateResponse)\n      .then(this.parseResponseToJson)\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        this._logger.log('Request succeeded with JSON response', error);\n        return error;\n      });\n  }\n\n  /**\n   * Parse response data to json object\n   * @param {*} response - Request response\n   * @return {JSON} json data\n   */\n  async parseResponseToJson(response) {\n    if (!response.ok) {\n      return response;\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Response validation\n   * @param {*} response\n   * @return {Promise} promise result\n   */\n  validateResponse(response) {\n    if (response.ok) {\n      return Promise.resolve(response);\n    } else {\n      return Promise.reject(new Error(response.statusText));\n    }\n  }\n}\n\nexport default HttpClient;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/js/general/repositories/b8one.masterdataRepository.js","webpack:///./src/js/general/services/b8one.transporterService.js","webpack:///./src/js/general/components/b8one.accordionComponent.js","webpack:///./src/js/general/components/b8one.modalComponent.js","webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/general/components/b8one.customSelect.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/store/mobile/transporter/index.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/general/services/b8one.httpClient.js"],"names":["MasterdataRepository","entityCode","this","entityCode_","httpClient_","HttpClient","_VTEX_MASTERDATA_ENDPOINT","entityPayload","apiEndpoint","put","then","res","error","patch","params","get","documentId","fields","delete","field","fileName","getAttachmentUrl","TransporterService","httpClient","endpoint","console","hubID","query","AccordionComponent","accordion","accordionHeader","openAccordionCallback","closeAccordionCallback","isOpen","openCallback","Function","closeCallback","Element","document","querySelector","setHandleClick","addEventListener","ModalComponent","modal","modalShowCLass","openModalCallback","closeModalCallback","classList","add","remove","Ensure","value","undefined","input","isUndefined","checkValidity","object","props","getMissingProps","length","missingProps","forEach","prop","push","CustomSelect","selectElement","customSelectList","customSelectSelected","customSelectListItemClassName","customSelectListItemClassNameActive","selectChangeCallback","selectOpenCallback","selectCloseCallback","setCurrentSelectedItem","createSelectList","setListenerForCurrentSelected","options","selectedIndex","textContent","target","newValue","dataset","prevListItemActive","close","changeOption","option","listItem","createElement","setAttribute","trim","handleSelectChange","append","open","body","className","includes","event","eventChange","Event","bubbles","dispatchEvent","Helper","_logger","Logger","language","navigator","userLanguage","currency","currencyLocale","minimumFractionDigits","elem","selector","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","querySelectorAll","i","item","parents","parentNode","form","serialized","elements","name","disabled","type","n","selected","encodeURIComponent","checked","join","data","Math","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","split","filter","element","heightViewport","window","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","mapAccents","a","e","o","u","c","pattern","replace","RegExp","toFixed","max","Intl","NumberFormat","style","format","logName","message","errorObj","info","warn","log","TransporterPage","modalCompare","addressCep","transporterSelected","transporters","logisticsInfo","filters","Set","compareTransportersList","masterdataRepository","cartService","CartService","helper","totalizers","orderForm","transporterService","init","initModalCompare","initFilterAccordions","setHandledButtonFilterClick","setHandledButtonCloseFilterClick","getCurrent","setAddressCep","setHubID","fetchTransporters","Promise","all","getDeliveryTypes","setLogoUrlInTransportes","orderTransportersByLessPrice","addTransportersToDOM","setHandledFiltersChange","handledCompareButtonFooterClick","setHandledScheduleChangeButtonsClick","setHandledButtonSaveClick","buttonFilter","filterItem","handledFilterChange","transporter","transporterID","getAttribute","compareButton","handledTransporterCompareButtonClick","priceElement","prevPriceElementActive","transporterDeliveryType","scheduleChangeButton","handledScheduleChangeButtonClick","handledButtonSaveClick","filterName","transporterElement","id","filtersArray","map","toggle","contains","updateTransporterFooter","columns","createCompareTableColumn","compareTable","innerHTML","children","outerHTML","createTransportersCustomSelects","show","getParents","transporterDeliveryTypeSelected","setTransporterSelected","saveData","location","assign","priceActive","initSaveCustomDataEvent","endSaveCustomDataEvent","transporterSelect","selectCustom","selectListHeight","offsetHeight","maxHeight","deliveryTypes","nome","logoURL","armazenagem","tempoMercado","certificacao","equipeFeminina","StrongPrice","decimals","priceFormatted","substring","transporterData","features","descricao","prices","createTransporterPriceElement","slaName","feature","getTransportersByHUB","Error","bugsnagClient","notify","filename","compareFooter","compareFooterParagraph","compareFooterButton","size","transporterId","index","findIndex","deliveryTypeSelected","selectedSla","updateSelectedSLA","updateCheckoutTransporterSLA","setSingleCustomDataField","JSON","stringify","logo","fetchTransporterLogoURL","transporterVariations","slas","price","key","toLowerCase","customData","customApps","customApp","to_address_zipcode","orderInfoApp","find","simulateOrderForm","shippingData","setTotalizers","getLogisticsInfo","insuranceSKU","items","parseInt","getTransporterVariations","totalItemsWithDiscounts","total","reduce","totalizer","courier","courierId","deliveryIds","courierIds","transporterIndex","courierType","courierTypeLowerCase","manualPrice","formatPrice","currentTransporter","removeTransportersWithoutDeliveryType","orderDeliveryTypesByLessPrice","hasOwnProperty","sort","b","compareTransporterList","createTransporterElement","_VTEX_API_ENDPOINT","_httpClient","skuId","productQuantity","sellerId","current","indexFound","x","quantity","endpointUrl","orderFormId","payload","orderItems","seller","skus","vtexjs","checkout","getOrderForm","skusCustomProducts","getCustomProducts","sku","isCustom","skuToIgnore","indexToRemove","indexList","removeMoreProducts","response","productsToAdd","productId","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","addToCart","customProducts","customProductItem","currentCustomProduct","customProductQuantity","Object","values","itemIndex","expectedOrderFormSections","noSplitItem","itemsIndex","updateProducts","postalCode","country","calculateShipping","simulateShipping","orderFormSimulated","sendAttachment","address","availableAddresses","selectedAddresses","appName","appFieldName","appFieldValue","_execute","httpVerb","header","method","headers","accept","fetch","validateResponse","parseResponseToJson","catch","ok","json","resolve","reject","statusText"],"mappings":"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","file":"js/b8one.mobile.transporter.js","sourcesContent":["import HttpClient from '../services/b8one.httpClient';\n\n/**\n * Masterdata Base Repository\n */\nclass MasterdataRepository {\n  /**\n   * Masterdata Repository constructor\n   * @param {*} entityCode\n   */\n  constructor(entityCode) {\n    const STORE_ID = 'TR';\n\n    this.entityCode_ = entityCode;\n    this.httpClient_ = new HttpClient();\n\n    // this._VTEX_MASTERDATA_ENDPOINT = `//api.vtexcrm.com.br/${STORE_ID}/dataentities/${entityCode}`;\n    this._VTEX_MASTERDATA_ENDPOINT = `/api/dataentities/${entityCode}`;\n  }\n\n  /**\n   * add\n   * @param {*} entityPayload\n   * @return {*}\n   */\n  add(entityPayload) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents`;\n\n    return this.httpClient_.put(apiEndpoint, entityPayload).then(\n      res => {\n        return res;\n      },\n      error => {\n        return error;\n      }\n    );\n  }\n\n  /**\n   * update..\n   * @param {*} entityPayload\n   * @return {*}\n   */\n  update(entityPayload) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents`;\n\n    return this.httpClient_.patch(apiEndpoint, entityPayload).then(\n      res => {\n        return res;\n      },\n      error => error\n    );\n  }\n\n  /**\n   * search\n   * @param {*} params\n   * @return {*}\n   */\n  search(params) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/search?${params}`;\n\n    return this.httpClient_.get(apiEndpoint).then(res => {\n      return res;\n    });\n  }\n\n  /**\n   * Get Document by document ID\n   * @param {GUID} documentId Document Id\n   */\n  async getByDocumentId(documentId) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}`;\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n\n  async getByDocumentIdWithFields(documentId, fields) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}?_fields=${fields}`;\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n  /**\n   * delete\n   * @param {*} documentId\n   * @return {*}\n   */\n  delete(documentId) {\n    const apiEndpoint = `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}`;\n\n    return this.httpClient_.delete(apiEndpoint).then(res => {\n      return res;\n    });\n  }\n\n  /**\n   *\n   * @param {*} documentId\n   * @param {*} field\n   * @param {*} fileName\n   */\n  getAttachmentUrl(documentId = '', field = '', fileName = '') {\n    return `${this._VTEX_MASTERDATA_ENDPOINT}/documents/${documentId}/${field}/attachments/${fileName}`;\n  }\n\n  /**\n   * Get attachments\n   * @param {*} documentId\n   * @param {*} field\n   * @param {*} fileName\n   */\n  async getAttachment(documentId = '', field = '', fileName = '') {\n    // /api/dataentities/{{data_entity_name}}/documents/{{id}}/{{field}}/attachments/{{file_name}}\n    const apiEndpoint = this.getAttachmentUrl(documentId, field, fileName);\n\n    const res = await this.httpClient_.get(apiEndpoint);\n    return res;\n  }\n}\n\nexport default MasterdataRepository;\n","import HttpClient from './b8one.httpClient';\r\n\r\nexport default class TransporterService {\r\n  constructor() {\r\n    this.httpClient = new HttpClient();\r\n  }\r\n\r\n  /**\r\n   * This function return all active hubs from HUB Entity.\r\n   * @param  {Array|String} fields=['id', 'initialZipcode', 'finalZipcode']\r\n   */\r\n  async getALLHUBS(fields = ['id', 'initialZipcode', 'finalZipcode']) {\r\n    try {\r\n      const endpoint = `/api/dataentities/HB/search?_fields=${fields}&_where=active=true`;\r\n\r\n      return this.httpClient.get(endpoint);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This functions get and filter the transporters by hubID property.\r\n   * @param  {String} hubID The documentID of a document from HUB Entity.\r\n   * @param  {Array|String} fields Document fields what you need\r\n   */\r\n  async getTransportersByHUB(hubID, fields) {\r\n    try {\r\n      const query = `(status=true AND idHUB=${hubID})`;\r\n\r\n      const endpoint = `/api/dataentities/TR/search?_fields=${fields}&_where=${query}&v=123`;\r\n\r\n      return this.httpClient.get(endpoint);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n}\r\n","export default class AccordionComponent {\n  constructor({\n    accordion,\n    accordionHeader,\n    openAccordionCallback,\n    closeAccordionCallback,\n  }) {\n    this.isOpen = false;\n    this.openCallback = openAccordionCallback || new Function();\n    this.closeCallback = closeAccordionCallback || new Function();\n\n    this.accordion =\n      accordion instanceof Element\n        ? accordion\n        : document.querySelector(accordion);\n\n    this.accordionHeader =\n      accordionHeader instanceof Element\n        ? accordionHeader\n        : document.querySelector(accordionHeader);\n\n    this.setHandleClick();\n  }\n\n  setHandleClick() {\n    this.accordionHeader.addEventListener('click', () => {\n      this.isOpen ? this.closeCallback(this) : this.openCallback(this);\n\n      this.isOpen = !this.isOpen;\n    });\n  }\n}\n","/*\r\n  *\r\n  * Author: Enrique Mora <enriquebeta7@gmail.com>\r\n  *\r\n*/\r\n\r\nexport default class ModalComponent {\r\n\t/**\r\n\t * @param  { Element | String } modal\r\n\t * @param  { String } modalShowCLass\r\n\t * @param  { Function } openModalCallback\r\n\t * @param  { Function } closeModalCallback\r\n   * @requires modal\r\n\t */\r\n\tconstructor({\r\n\t\tmodal,\r\n\t\tmodalShowCLass,\r\n\t\topenModalCallback,\r\n\t\tcloseModalCallback,\r\n\t}) {\r\n\t\tthis.isOpen = false;\r\n\t\tthis.modalShowCLass = modalShowCLass || 'show';\r\n\t\tthis.openCallback = openModalCallback || new Function();\r\n\t\tthis.closeCallback = closeModalCallback || new Function();\r\n\t\tthis.modal =\r\n\t\t\tmodal instanceof Element ? modal : document.querySelector(modal);\r\n\t}\r\n\r\n\tshow() {\r\n\t\t!this.isOpen && this.modal.classList.add(this.modalShowCLass);\r\n\t\tthis.isOpen = true;\r\n\r\n\t\tthis.openCallback(this);\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.isOpen && this.modal.classList.remove(this.modalShowCLass);\r\n\t\tthis.isOpen = false;\r\n\r\n\t\tthis.closeCallback(this);\r\n\t}\r\n}\r\n","/**\n * Ensure Abstraction class\n */\nclass Ensure {\n  /**\n   * Ensure value is Undefined\n   * @param {*} value Value to be validated\n   * @return {boolean}\n   */\n  static isUndefined(value = undefined) {\n    return typeof value === 'undefined' ||\n      value === null ||\n      value === '' ||\n      value === {} ||\n      value === [];\n    // || JSON.stringify(value) === JSON.stringify({});\n  }\n\n  /**\n   * Ensure Input validity\n   * @param {*} input to validate\n   * @return {boolean} true if is valid\n   */\n  static isInputValid(input) {\n    return !this.isUndefined(input) && input.checkValidity();\n  }\n\n  /**\n   * Verify if object has properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Boolean} True if object has all properties\n   */\n  static hasProps(object, props) {\n    const missingPropsResult = this.getMissingProps(object, props);\n    return missingPropsResult.length <= 0;\n  }\n\n  /**\n   * Get Object missing properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Array} missing properties\n   */\n  static getMissingProps(object, props) {\n    let missingProps = [];\n    [...props].forEach((prop) => {\n      const result = prop in object;\n      if (!result) {\n        missingProps.push(prop);\n      }\n    });\n\n    return missingProps;\n  }\n}\n\nexport default Ensure;\n","export default class CustomSelect {\n  constructor({\n    selectElement,\n    customSelectList,\n    customSelectSelected,\n    customSelectListItemClassName,\n    customSelectListItemClassNameActive,\n    selectChangeCallback,\n    selectOpenCallback,\n    selectCloseCallback,\n  }) {\n    this.isOpen = false;\n\n    this.selectElement =\n      selectElement instanceof Element\n        ? selectElement\n        : document.querySelector(selectElement);\n\n    this.customSelectList =\n      customSelectList instanceof Element\n        ? customSelectList\n        : document.querySelector(customSelectList);\n\n    this.customSelectSelected =\n      customSelectSelected instanceof Element\n        ? customSelectSelected\n        : document.querySelector(customSelectSelected);\n\n    this.selectChangeCallback = selectChangeCallback || new Function();\n    this.selectOpenCallback = selectOpenCallback || new Function();\n    this.selectCloseCallback = selectCloseCallback || new Function();\n    this.customSelectListItemClassName = customSelectListItemClassName || '';\n    this.customSelectListItemClassNameActive =\n      customSelectListItemClassNameActive || '';\n\n    this.setCurrentSelectedItem();\n    this.createSelectList();\n    this.setListenerForCurrentSelected();\n  }\n\n  setCurrentSelectedItem() {\n    let { options, selectedIndex } = this.selectElement;\n\n    this.customSelectSelected.textContent = options[selectedIndex].textContent;\n  }\n\n  handleSelectChange(target) {\n    let { value } = this.selectElement;\n    let { value: newValue } = target.dataset;\n\n    const prevListItemActive = this.customSelectList.querySelector(\n      `.${this.customSelectListItemClassNameActive}`\n    );\n\n    if (prevListItemActive) {\n      prevListItemActive.classList.remove(\n        this.customSelectListItemClassNameActive\n      );\n    }\n\n    target.classList.add(this.customSelectListItemClassNameActive);\n\n    this.close();\n\n    if (value !== newValue) {\n      this.changeOption(newValue);\n    }\n  }\n\n  createSelectList() {\n    [...this.selectElement].forEach(option => {\n      const listItem = document.createElement('li');\n      listItem.setAttribute('class', this.customSelectListItemClassName);\n      listItem.dataset['value'] = option.value;\n\n      listItem.textContent = option.textContent.trim();\n\n      listItem.addEventListener('click', ({ target }) =>\n        this.handleSelectChange(target)\n      );\n\n      this.customSelectList.append(listItem);\n    });\n  }\n\n  setListenerForCurrentSelected() {\n    this.customSelectSelected.addEventListener('click', () => {\n      this.open();\n\n      document.body.addEventListener('click', ({ target }) => {\n        let close = !target.className.includes('custom-select');\n\n        if (close) this.close();\n      });\n    });\n  }\n\n  open(event = null) {\n    this.isOpen = true;\n    this.selectOpenCallback(event);\n    this.customSelectList.classList.add('open');\n  }\n\n  close() {\n    this.isOpen = false;\n    this.selectCloseCallback();\n    this.customSelectList.classList.remove('open');\n  }\n\n  changeOption(value) {\n    this.selectElement.value = value;\n\n    const eventChange = new Event('change', { bubbles: true });\n\n    this.selectElement.dispatchEvent(eventChange);\n\n    this.setCurrentSelectedItem();\n    this.selectChangeCallback({\n      value,\n    });\n  }\n}\n","/* eslint-disable max-len */\nimport { Logger } from './';\n\n/**\n * Helper Abstraction class\n */\nclass Helper {\n  /**\n   * Helper constructor\n   * @param {*} props\n   */\n  constructor(props) {\n    this._logger = new Logger('Ensure');\n    this.props = props || {\n      language: navigator.language || navigator.userLanguage,\n      currency: 'BRL',\n      currencyLocale: 'pt-br',\n      minimumFractionDigits: 2,\n    };\n  }\n\n  /**\n   * format currency\n   * @param {*} value\n   * @param {*} minimumFractionDigits\n   * @return {*}\n   */\n  formatPrice(value) {\n    value = value / 100;\n    value = (value * 1).toFixed(\n      Math.max(0, ~~this.props.minimumFractionDigits)\n    );\n\n    return new Intl.NumberFormat(this.props.currencyLocale, {\n      style: 'currency',\n      currency: this.props.currency,\n      minimumFractionDigits: this.props.minimumFractionDigits,\n    }).format(value);\n  }\n\n  static getParents(elem, selector) {\n    // Element.matches() polyfill\n    if (!Element.prototype.matches) {\n      Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\n              s\n            ),\n            i = matches.length;\n\n          while (--i >= 0 && matches.item(i) !== this) {}\n\n          return i > -1;\n        };\n    }\n\n    // Set up a parent array\n    let parents = [];\n\n    // Push each parent element to the array\n    for (; elem && elem !== document; elem = elem.parentNode) {\n      if (selector) {\n        if (elem.matches(selector)) {\n          parents.push(elem);\n        }\n\n        continue;\n      }\n\n      parents.push(elem);\n    }\n\n    // Return our parent array\n    return parents;\n  }\n\n  static serializeForm(form) {\n    // Setup our serialized data\n    let serialized = [];\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          serialized.push(\n            encodeURIComponent(field.name) +\n              '=' +\n              encodeURIComponent(field.options[n].value)\n          );\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        serialized.push(\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\n        );\n      }\n    }\n\n    return serialized.join('&');\n  }\n\n  static getFormData(form) {\n    // Setup our serialized data\n    let data = {};\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          data[field.name] = field.options[n].value;\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        data[field.name] = field.value;\n      }\n    }\n\n    return data;\n  }\n\n  static getRandomID() {\n    // Generate unique IDs for use as pseudo-private/protected names.\n    // Similar in concept to\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\n    //\n    // The goals of this function are twofold:\n    //\n    // * Provide a way to generate a string guaranteed to be unique when compared\n    //   to other strings generated by this function.\n    // * Make the string complex enough that it is highly unlikely to be\n    //   accidentally duplicated by hand (this is key if you're using `ID`\n    //   as a private/protected name on an object).\n    //\n    // Use:\n    //\n    //     var privateName = ID();\n    //     var o = { 'public': 'foo' };\n    //     o[privateName] = 'bar';\n\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n\n    return (\n      '_' +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  static setCookie(cname, cvalue, exdays) {\n    const date = new Date();\n\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\n\n    const expires = 'expires=' + date.toUTCString();\n\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\n  }\n\n  static getCookie(cname) {\n    const decodedCookie = decodeURIComponent(document.cookie);\n\n    const cookie = decodedCookie\n      .split(';')\n      .filter(cookie => cookie.includes(cname))[0];\n\n    return cookie || '';\n  }\n\n  static isInViewport(element) {\n    const heightViewport =\n      window.innerHeight || document.documentElement.clientHeight;\n\n    const widthViewport =\n      window.innerWidth || document.documentElement.clientWidth;\n\n    const { top, right, bottom, left } = element.getBoundingClientRect();\n\n    return (\n      top >= 0 &&\n      left >= 0 &&\n      bottom <= heightViewport &&\n      right <= widthViewport\n    );\n  }\n\n  static removeAccents(str) {\n    const mapAccents = {\n      a: 'á|à|ã|â|À|Á|Ã|Â',\n      e: 'é|è|ê|É|È|Ê',\n      i: 'í|ì|î|Í|Ì|Î',\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n      c: 'ç|Ç',\n      n: 'ñ|Ñ',\n    };\n\n    for (let pattern in mapAccents) {\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\n    }\n\n    return str;\n  }\n}\n\nexport default Helper;\n","/* eslint no-console: 0 */\n\n/**\n * Logger Abstraction class\n */\nclass Logger {\n  /**\n   * Logger constructor\n   * @param {string} logName Application name to log\n   */\n  constructor(logName = 'B8ONE Logger Component') {\n    this.logName = logName;\n  }\n\n  /**\n   * Log error message\n   * @param {*} message - Message text\n   * @param {*} errorObj - Message object\n   */\n  error(message = '', errorObj = {}) {\n    console.error(message, errorObj);\n  }\n\n  /**\n   * Log information message\n   * @param {*} message - Message text\n   */\n  info(message = '') {\n    console.info(message);\n  }\n\n  /**\n   * Log warning message\n   * @param {*} message - Message text\n   */\n  warning(message = '') {\n    console.warn(this.logName, message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   */\n  log(message = '') {\n    console.log(message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   * @param {*} object - object to be logged\n   */\n  log(message = '', object = {}) {\n    console.log(message, object);\n  }\n}\n\nexport default Logger;\n","// Commons\nimport { Helper } from 'Commons';\n\n// Components\nimport ModalComponent from 'Components/b8one.modalComponent.js';\nimport CustomSelect from 'Components/b8one.customSelect.js';\nimport AccordionComponent from 'Components/b8one.accordionComponent.js';\n\n// Repositories\nimport MasterdataRepository from 'Repositories/b8one.masterdataRepository.js';\n\n// Services\nimport CartService from 'Services/b8one.cartService.js';\nimport TransporterService from 'Services/b8one.transporterService.js';\n\n/*\n  Class TransporterPage\n*/\nclass TransporterPage {\n  constructor() {\n    this.modalCompare = null;\n    this.addressCep = null;\n    this.transporterSelected = null;\n    this.transporters = [];\n    this.logisticsInfo = [];\n    this.filters = new Set();\n    this.compareTransportersList = new Set();\n    this.masterdataRepository = new MasterdataRepository('TR');\n    this.cartService = new CartService();\n    this.helper = new Helper();\n    this.totalizers = [];\n    this.orderForm = {};\n    this.hubID = null;\n    this.transporterService = new TransporterService();\n\n    // window.cartService = this.cartService;\n    window.TransporterPage = this;\n\n    this.init();\n  }\n\n  // Init Functions\n  async init() {\n    this.initModalCompare();\n    this.initFilterAccordions();\n    this.setHandledButtonFilterClick();\n    this.setHandledButtonCloseFilterClick();\n\n    this.orderForm = await this.cartService.getCurrent();\n\n    await this.setAddressCep();\n\n    this.setHubID();\n\n    this.transporters = await this.fetchTransporters();\n\n    await Promise.all([\n      this.getDeliveryTypes(),\n      this.setLogoUrlInTransportes(),\n    ]);\n\n    this.orderTransportersByLessPrice();\n\n    this.addTransportersToDOM();\n\n    this.setHandledFiltersChange();\n    // this.setHandledsToTransporterElement();\n    this.handledCompareButtonFooterClick();\n    this.setHandledScheduleChangeButtonsClick();\n    this.setHandledButtonSaveClick();\n  }\n\n  initModalCompare() {\n    this.modalCompare = new ModalComponent({\n      modal: '.modal-compare',\n      modalShowCLass: 'wrapper-modal--show',\n    });\n\n    const modalCompareButtonClose = document.querySelector(\n      '.modal-compare .modal__close'\n    );\n\n    modalCompareButtonClose.addEventListener('click', e => {\n      this.modalCompare.close();\n    });\n  }\n\n  initFilterAccordions() {\n    const accordions = [...document.querySelectorAll('.js-accordion-filter')];\n\n    accordions.forEach(accordion => {\n      const accordionHeader = accordion.querySelector('.filter__header');\n\n      const accordionInstance = new AccordionComponent({\n        accordion,\n        accordionHeader,\n        openAccordionCallback: () => {\n          accordion.classList.add('filter--show');\n        },\n        closeAccordionCallback: ({ accordion }) => {\n          accordion.classList.remove('filter--show');\n        },\n      });\n\n      accordionInstance.isOpen = true;\n    });\n  }\n\n  // Set Handled Functions\n  setHandledButtonFilterClick() {\n    const buttonFilter = document.querySelector('#button-filter');\n    const filters = document.querySelector('.compare-transporter__filters');\n\n    buttonFilter.addEventListener('click', e => {\n      filters.classList.add('compare-transporter__filters--show');\n    });\n  }\n\n  setHandledButtonCloseFilterClick() {\n    const filters = document.querySelector('.compare-transporter__filters');\n    const buttonCloseFilter = filters.querySelector('.modal__close');\n\n    buttonCloseFilter.addEventListener('click', e => {\n      filters.classList.remove('compare-transporter__filters--show');\n    });\n  }\n\n  setHandledFiltersChange() {\n    const filterItems = [...document.querySelectorAll('.filter__item')];\n\n    filterItems.forEach(filterItem =>\n      filterItem.addEventListener('change', event =>\n        this.handledFilterChange(event, filterItem)\n      )\n    );\n  }\n\n  setHandledsToTransporterElement() {\n    const transporters = [\n      ...document.querySelectorAll('.compare-transporter__list .transporter'),\n    ];\n\n    transporters.forEach(transporter => {\n      const transporterID = transporter.getAttribute('id');\n      const compareButton = transporter.querySelector(\n        '.transporter__compare-button'\n      );\n\n      compareButton.addEventListener('click', event => {\n        this.handledTransporterCompareButtonClick(compareButton, transporterID);\n      });\n\n      const priceElements = [...transporter.querySelectorAll('.price')];\n\n      priceElements.forEach(priceElement => {\n        priceElement.addEventListener('change', event => {\n          const prevPriceElementActive = document.querySelector(\n            '.price--active'\n          );\n\n          if (prevPriceElementActive) {\n            prevPriceElementActive.classList.remove('price--active');\n\n            const prevPriceElementActiveCheckbox = prevPriceElementActive.querySelector(\n              'input[type=\"checkbox\"]'\n            );\n\n            prevPriceElementActiveCheckbox.checked = false;\n          }\n\n          priceElement.classList.add('price--active');\n\n          const priceElementCheckbox = priceElement.querySelector(\n            'input[type=\"checkbox\"]'\n          );\n\n          priceElementCheckbox.checked = true;\n\n          const { transporterDeliveryType } = priceElement.dataset;\n\n          transporter.setAttribute(\n            'data-transporter-delivery-type-selected',\n            transporterDeliveryType\n          );\n        });\n      });\n    });\n  }\n\n  setHandledScheduleChangeButtonsClick() {\n    const scheduleChangeButtons = [\n      ...document.querySelectorAll('.js-button-schedule-change'),\n    ];\n\n    scheduleChangeButtons.forEach(scheduleChangeButton => {\n      scheduleChangeButton.addEventListener('click', event =>\n        this.handledScheduleChangeButtonClick(scheduleChangeButton)\n      );\n    });\n  }\n\n  setHandledButtonSaveClick() {\n    const buttonSave = document.querySelector('.fa-save');\n\n    buttonSave.addEventListener('click', () => this.handledButtonSaveClick());\n  }\n\n  // Handled Functions\n  handledFilterChange({ target }, filterItem) {\n    const { filter: filterName } = filterItem.dataset;\n\n    if (target.checked) {\n      this.filters.add(filterName);\n    } else {\n      this.filters.delete(filterName);\n    }\n\n    this.transporters.forEach(transporter => {\n      const transporterElement = document.querySelector(\n        `[id=\"${transporter.id}\"]`\n      );\n\n      const filtersArray = [...this.filters].map(\n        filter => !!transporter[filter]\n      );\n\n      if (transporterElement) {\n        filtersArray.includes(false)\n          ? transporterElement.classList.add('hide')\n          : transporterElement.classList.remove('hide');\n      }\n    });\n  }\n\n  handledTransporterCompareButtonClick(compareButton, transporterID) {\n    compareButton.classList.toggle('transporter__compare-button--active');\n\n    const toCompare = compareButton.classList.contains(\n      'transporter__compare-button--active'\n    );\n\n    if (toCompare) {\n      this.compareTransportersList.add(transporterID);\n    } else {\n      this.compareTransportersList.delete(transporterID);\n    }\n\n    this.updateTransporterFooter();\n  }\n\n  handledCompareButtonFooterClick() {\n    const compareButton = document.querySelector(\n      '.compare-transporter__footer .button'\n    );\n\n    compareButton.addEventListener('click', event => {\n      const columns = [...this.compareTransportersList]\n        .map(transporterID => {\n          return this.createCompareTableColumn(transporterID);\n        })\n        .join('');\n\n      const compareTable = document.querySelector(\n        '.modal-compare .compare__table'\n      );\n\n      compareTable.innerHTML = compareTable.children[0].outerHTML;\n\n      compareTable.innerHTML += columns;\n\n      this.setHandledScheduleChangeButtonsClick();\n      this.createTransportersCustomSelects();\n\n      this.modalCompare.show();\n    });\n  }\n\n  async handledScheduleChangeButtonClick(scheduleChangeButton) {\n    const transporterElement = Helper.getParents(\n      scheduleChangeButton,\n      '.transporter'\n    )[0];\n\n    if (!transporterElement.dataset.transporterDeliveryTypeSelected) return;\n\n    this.setTransporterSelected(transporterElement);\n\n    await this.saveData();\n\n    if (this.transporterSelected) {\n      window.location.assign('/endereco');\n    }\n  }\n\n  async handledButtonSaveClick() {\n    const priceActive = document.querySelector('.price--active');\n\n    if (priceActive) {\n      const transporterElement = Helper.getParents(\n        priceActive,\n        '.transporter'\n      )[0];\n\n      this.setTransporterSelected(transporterElement);\n\n      document.dispatchEvent(window.initSaveCustomDataEvent);\n\n      await this.saveData();\n\n      document.dispatchEvent(window.endSaveCustomDataEvent);\n    }\n  }\n\n  // Create Functions\n  createTransportersCustomSelects() {\n    const transportersSelects = [\n      ...document.querySelectorAll('.transporter__select-custom'),\n    ];\n\n    transportersSelects.forEach(transporterSelect => {\n      const selectElement = transporterSelect.querySelector('.select__native');\n      const selectCustom = transporterSelect.querySelector('.select__custom');\n      const customSelectList = transporterSelect.querySelector('.select__list');\n      const customSelectSelected = transporterSelect.querySelector(\n        '.select__custom-selected'\n      );\n\n      const transporterElement = Helper.getParents(\n        transporterSelect,\n        '.transporter'\n      )[0];\n\n      new CustomSelect({\n        selectElement,\n        customSelectList,\n        customSelectSelected,\n        customSelectListItemClassName: '',\n        customSelectListItemClassNameActive: 'active',\n        selectOpenCallback: event => {\n          const selectListHeight = customSelectList.offsetHeight;\n\n          selectCustom.classList.add('select__custom--open');\n          selectCustom.style.maxHeight = `${selectListHeight}px`;\n        },\n        selectCloseCallback: () => {\n          selectCustom.classList.remove('select__custom--open');\n          selectCustom.style.maxHeight = 0;\n        },\n        selectChangeCallback: ({ value }) => {\n          transporterElement.setAttribute(\n            'data-transporter-delivery-type-selected',\n            value\n          );\n        },\n      });\n    });\n  }\n\n  createCompareTableColumn(transporterID) {\n    const transporter = this.transporters.filter(\n      ({ id }) => id === transporterID\n    )[0];\n\n    const {\n      id,\n      nome,\n      logoURL,\n      armazenagem,\n      tempoMercado,\n      certificacao,\n      deliveryTypes,\n      equipeFeminina,\n    } = transporter;\n\n    const deliveryShared = deliveryTypes.filter(\n      ({ type }) => type === 'Compartilhado'\n    )[0];\n\n    const deliveryExclusive = deliveryTypes.filter(\n      ({ type }) => type === 'Exclusivo'\n    )[0];\n\n    return `\n      <div class=\"price\" data-transporter-delivery-type=\"${item.type}\">\n        <div class=\"price__row\">\n          <div class=\"price__container price__container--flex\">\n            <label for=\"${item.id}\">\n              <div class=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id=\"${item.id}\"\n                />\n              </div>\n            </label>\n          </div>\n\n          <div class=\"price__container price__container--right\">\n            <span class=\"price__total\">R$ <span>${StrongPrice}</span>${decimals}</span>\n          </div>\n        </div>\n\n        ${\n          item.type === 'Compartilhado'\n            ? `\n          <p class=\"price__paragraph price__paragraph--text-orange\">\n            * Prazo de entrega: em até 45 dias da data da embalagem.\n          </p>\n        `\n            : ''\n        }\n      </div>\n    `;\n  }\n\n  createTransporterPriceElement(item) {\n    let priceFormatted = item.priceFormatted;\n    let StrongPrice = priceFormatted.substring(0, priceFormatted.length - 3).replace('R$ ', '');\n    let decimals = priceFormatted.replace(`R$ ${StrongPrice}`, '');\n    return `\n      <div class=\"price\" data-transporter-delivery-type=\"${item.type}\">\n        <div class=\"price__row\">\n          <div class=\"price__container price__container--flex\">\n            <label for=\"${item.id}\">\n              <div class=\"checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id=\"${item.id}\"\n                />\n              </div>\n            </label>\n          </div>\n\n          <div class=\"price__container price__container--right\">\n            <span class=\"price__total\">R$ <span>${StrongPrice}</span>${decimals}</span>\n          </div>\n        </div>\n\n        ${\n          item.type === 'Compartilhado'\n            ? `\n          <p class=\"price__paragraph price__paragraph--text-orange\">\n            * Prazo de entrega: em até 45 dias da data da embalagem.\n          </p>\n        `\n            : ''\n        }\n      </div>\n    `;\n  }\n\n  createTransporterElement(transporterData) {\n    const {\n      id,\n      nome,\n      logoURL,\n      features,\n      descricao,\n      deliveryTypes,\n    } = transporterData;\n\n    if (!deliveryTypes) {\n      return '';\n    }\n\n    const showSeeMoreButton = descricao.length > 130;\n\n    const prices = deliveryTypes\n      .map(item => {\n        return this.createTransporterPriceElement(item);\n      })\n      .join('');\n\n    return `\n      <li\n        class=\"transporter\"\n        id=\"${id}\"\n        data-transporter-id=\"${id}\"\n        data-transporter-name=\"${transporterData.deliveryTypes[0].slaName}\"\n        data-transporter-delivery-type-selected=\"Exclusivo\"\n      >\n        <div class=\"transporter__details\" transporter-name=\"${nome}\">\n          <div class=\"transporter__row\">\n            <h3 class=\"transporter__name\">${nome}</h3>\n          </div>\n\n          <div class=\"transporter__description\">\n            <p class=\"description__paragraph\">\n              ${descricao}\n            </p>\n            <p class=\"description__price\">\n              ${prices}\n            </p>\n\n            ${\n              false\n                ? '<button class=\"description__see-more\">Ver tudo</button>'\n                : ''\n            }\n          </div>\n\n          <div class=\"transporter__row\">\n            <strong>Serviços inclusos:</strong>\n            <ul class=\"transporter__benefits\">\n              ${features\n                .split(';')\n                .map(\n                  feature => `\n                    <li class=\"benefit\">\n                      <i class=\"far fa-check benefit__icon\"></i>\n\n                      <p class=\"benefit__text\">\n                        ${feature}\n                      </p>\n                    </li>\n                  `\n                )\n                .join('')}\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"transporter__prices\">\n          <hr/>\n          <button class=\"button button--primary js-button-schedule-change\">\n            AGENDAR\n          </button>\n        </div>\n      </li>\n    `;\n  }\n\n// Fetch Functions\nasync fetchTransporters() {\n  const fields =\n    'armazenagem,certificacao,courierIds,descricao,equipeFeminina,features,frota,logo,nome,status,tempoMercado,id,tipoEmbalabem';\n\n  try {\n    if (this.hubID) {\n      return await this.transporterService.getTransportersByHUB(\n        this.hubID,\n        fields\n      );\n    }\n\n    throw new Error('The hubID is undefined');\n  } catch (error) {\n    window.bugsnagClient.notify(new Error(error));\n  }\n}\n\nasync fetchTransporterLogoURL(id, filename) {\n  return await this.masterdataRepository.getAttachmentUrl(\n    id,\n    'logo',\n    filename\n  );\n}\n\n// Other Functions\nupdateTransporterFooter() {\n  const compareFooter = document.querySelector(\n    '.compare-transporter__footer'\n  );\n\n  const compareFooterParagraph = compareFooter.querySelector(\n    '.footer__paragraph'\n  );\n\n  const compareFooterButton = compareFooter.querySelector('.button');\n\n  if (this.compareTransportersList.size > 0) {\n    compareFooter.classList.add('compare-transporter__footer--show');\n  } else {\n    compareFooter.classList.remove('compare-transporter__footer--show');\n  }\n\n  if (this.compareTransportersList.size < 2) {\n    compareFooterParagraph.innerHTML = `\n      Selecione <span class=\"footer__paragraph--orange\">2 ou mais empresas de mudança </span>para comparar\n    `;\n\n    compareFooterButton.classList.add('button--disabled');\n  } else {\n    compareFooterParagraph.innerHTML = `\n      Você selecionou <span class=\"footer__paragraph--orange\">${this.compareTransportersList.size} empresas de mudança</span>\n    `;\n\n    compareFooterButton.classList.remove('button--disabled');\n  }\n}\n\nsetTransporterSelected(transporterElement) {\n  const {\n    transporterId,\n    transporterDeliveryTypeSelected,\n  } = transporterElement.dataset;\n\n  const index = this.transporters.findIndex(({ id }) => id === transporterId);\n\n  this.transporterSelected = this.transporters[index];\n\n  this.transporterSelected.deliveryTypeSelected = this.transporters[index].deliveryTypes[0];\n}\n\nupdateSelectedSLA() {\n  const { slaName } = 'Exclusivo';\n\n  this.logisticsInfo = this.logisticsInfo.map(item => ({\n    ...item,\n    selectedSla: slaName,\n  }));\n}\n\nasync saveData() {\n  try {\n    this.updateSelectedSLA();\n\n    await Promise.all([\n      this.cartService.updateCheckoutTransporterSLA(this.logisticsInfo),\n      this.cartService.setSingleCustomDataField(\n        'selectedcourier',\n        'courier_data',\n        JSON.stringify(this.transporterSelected)\n      ),\n      this.cartService.setSingleCustomDataField(\n        'orderinfo',\n        'current_step',\n        'transporter'\n      ),\n    ]);\n  } catch (error) {\n    console.log('saveData', error);\n  }\n}\n\nasync setLogoUrlInTransportes() {\n  this.transporters = await Promise.all(\n    this.transporters.map(async transporter => {\n      const { id, logo } = transporter;\n\n      const logoURL = await this.fetchTransporterLogoURL(id, logo);\n\n      transporter.logoURL = logoURL;\n\n      return transporter;\n    })\n  );\n}\n\ngetTransporterVariations(logisticsInfo) {\n  const transporterVariations = {};\n\n  logisticsInfo.forEach(({ slas }) => {\n    slas.forEach(({ id, price, name }) => {\n      const key = id.toLowerCase().replace(/\\s/g, '');\n\n      if (transporterVariations[key]) {\n        transporterVariations[key].price += price;\n      } else {\n        transporterVariations[key] = {\n          price,\n          name,\n        };\n      }\n    });\n  });\n\n  return transporterVariations;\n}\n\nasync setAddressCep() {\n  const { customData } = await this.cartService.getCurrent();\n\n  if (!customData) return;\n\n  customData.customApps\n    .filter(customApp => customApp.id === 'orderinfo')\n    .forEach(customApp => {\n      const { to_address_zipcode } = customApp.fields;\n\n      this.addressCep = to_address_zipcode;\n    });\n}\n\nsetHubID() {\n  const orderInfoApp = this.orderForm.customData?.customApps.find(\n    customApp => customApp.id === 'orderinfo'\n  );\n\n  if (!orderInfoApp) return;\n\n  const { hubID } = orderInfoApp.fields;\n\n  this.hubID = hubID;\n}\n\nsetTotalizers(totalizers) {\n  this.totalizers = totalizers;\n}\n\nasync getLogisticsInfo() {\n  const {\n    shippingData,\n    totalizers,\n  } = await this.cartService.simulateOrderForm(this.addressCep);\n\n  this.setTotalizers(totalizers);\n\n  this.logisticsInfo = shippingData.logisticsInfo;\n}\n\nasync getDeliveryTypes() {\n  await this.getLogisticsInfo();\n\n  const insuranceSKU = this.orderForm.items.filter(\n    ({ id }) => parseInt(id) === 35\n  )[0];\n\n  const transporterVariations = this.getTransporterVariations(\n    this.logisticsInfo\n  );\n\n  const totalItemsWithDiscounts = this.totalizers\n    .filter(total => total.id !== 'Shipping')\n    .reduce((total, totalizer) => total + totalizer.value, 0);\n\n  this.logisticsInfo[0].slas\n    .map(courier => {\n      const { courierId } = courier.deliveryIds[0];\n\n      const index = this.transporters.findIndex(({ courierIds }) => {\n        const ids = courierIds.split(';');\n\n        return ids.includes(courierId);\n      });\n\n      courier.transporterIndex = index;\n\n      return courier;\n    })\n    .filter(({ transporterIndex }) => transporterIndex !== -1)\n    .forEach(({ id, name, deliveryIds, transporterIndex }) => {\n      const key = id.toLowerCase().replace(/\\s/g, '');\n      const [courierName, courierType] = id.split(' - ');\n      const courierTypeLowerCase = courierType.toLowerCase();\n\n      const { courierId } = deliveryIds[0];\n\n      let { price } = transporterVariations[key];\n\n      price += insuranceSKU\n        ? totalItemsWithDiscounts + -insuranceSKU.manualPrice\n        : totalItemsWithDiscounts;\n\n      const priceFormatted = this.helper.formatPrice(price);\n\n      const currentTransporter = this.transporters[transporterIndex];\n\n      const courier = [\n        {\n          price,\n          priceFormatted,\n          id: courierId,\n          type: courierType,\n          slaName: name,\n        },\n      ];\n\n      if (currentTransporter.deliveryTypes) {\n        currentTransporter.deliveryTypes = [\n          ...courier,\n          ...currentTransporter.deliveryTypes,\n        ];\n      } else {\n        currentTransporter.deliveryTypes = courier;\n      }\n\n      currentTransporter[courierTypeLowerCase] = true;\n    });\n\n  this.removeTransportersWithoutDeliveryType();\n  this.orderDeliveryTypesByLessPrice();\n}\n\nremoveTransportersWithoutDeliveryType() {\n  this.transporters = this.transporters.filter(transporter => {\n    return transporter.hasOwnProperty('deliveryTypes');\n  });\n}\n\norderDeliveryTypesByLessPrice() {\n  this.transporters = this.transporters.map(transporter => {\n    transporter.deliveryTypes.sort((a, b) => a.price - b.price);\n\n    return transporter;\n  });\n}\n\norderTransportersByLessPrice() {\n  this.transporters.sort((a, b) => {\n    return a.deliveryTypes[0].price - b.deliveryTypes[0].price;\n  });\n}\n\naddTransportersToDOM() {\n  const compareTransporterList = document.querySelector(\n    '.compare-transporter__list'\n  );\n\n  const transporters = this.transporters.map(transporter =>\n    this.createTransporterElement(transporter)\n  );\n\n  if (transporters.length > 0) {\n    compareTransporterList.classList.remove('empty-list');\n    compareTransporterList.innerHTML = transporters.join('');\n  } else {\n    compareTransporterList.classList.add('empty-list');\n    compareTransporterList.innerHTML = `<li class=\"empty-text\">Não encontramos nenhum resultado para os filtros selecionados.</li>`;\n  }\n}\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\nnew TransporterPage();\n});\n","/* eslint-disable max-len */\n\nimport { Ensure, Logger } from '../common';\nimport HttpClient from './b8one.httpClient';\n\n/**\n * Cart Abstraction class\n */\nclass CartService {\n  /**\n   * Cart constructor\n   */\n  constructor() {\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\n\n    this._logger = new Logger('Cart service');\n    this._httpClient = new HttpClient();\n  }\n\n  /**\n   * Get current cart\n   * @return {*} Cart object\n   */\n  async getCurrent() {\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\n  }\n\n  /**\n   * Add item to cart\n   * @param {*} skuId - Product sku Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   */\n  async add(skuId, productQuantity, sellerId = 1) {\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\n\n    if (!Ensure.isUndefined(skuId)) {\n      const current = await this.getCurrent();\n      const indexFound = current.items.findIndex(x => x.id === skuId);\n\n      if (indexFound > -1) {\n        productQuantity =\n          parseInt(productQuantity) +\n          parseInt(current.items[indexFound].quantity);\n      }\n\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n\n      const payload = {\n        orderItems: [\n          {\n            seller: sellerId.toString(),\n            quantity: parseInt(productQuantity),\n            id: skuId.toString(),\n          },\n        ],\n      };\n\n      return this._httpClient.patch(endpointUrl, payload);\n    }\n  }\n\n  async checkoutCRUD(skus) {\n    let { items } = await window.vtexjs.checkout.getOrderForm();\n\n    const skusCustomProducts = this.getCustomProducts(skus);\n\n    skus = skus.filter(sku => !sku.isCustom);\n    skus = [...skus, ...skusCustomProducts];\n\n    const skuToIgnore = [19, 698, 25, 26];\n\n    const indexToRemove = items.reduce((indexList, item, index) => {\n      const customProductSKUs = [25, 26];\n\n      if (customProductSKUs.includes(parseInt(item.id))) {\n        return [...indexList, index];\n      }\n\n      return indexList;\n    }, []);\n\n    if (indexToRemove.length > 0) {\n      const response = await this.removeMoreProducts(indexToRemove);\n\n      response && (items = response.items);\n    }\n\n    const productsToAdd = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        let index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        return index === -1 && sku.quantity > 0;\n      })\n      .map(sku => ({\n        quantity: sku.quantity,\n        seller: 1,\n        id: sku.skuId || sku.id,\n      }));\n\n    console.log('productsToAdd', productsToAdd);\n\n    const productsToUpdate = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\n          const diffQuantity =\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\n\n          return sameSku && diffQuantity && sku.quantity > 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: sku.quantity,\n        };\n      });\n\n    console.log('productsToUpdate', productsToUpdate);\n\n    const productsToReplaceSKU = skus\n      .filter(\n        sku =>\n          sku.quantity > 0 &&\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\n      )\n      .filter(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        if (index !== -1) {\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\n\n          return diffSku;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        const oldSKU = {\n          index,\n          seller: 1,\n          quantity: 0,\n        };\n\n        const newSKU = {\n          seller: 1,\n          id: sku.skuId,\n          quantity: sku.quantity,\n        };\n\n        return [oldSKU, newSKU];\n      })\n      .reduce((itemsList, current) => {\n        const [oldSKU, newSKU] = current;\n\n        return [...itemsList, oldSKU, newSKU];\n      }, []);\n\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\n\n    const productsToRemove = skus\n      .filter(sku => sku.quantity < 1)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          return sku.quantity == 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: 0,\n        };\n      });\n\n    console.log('productsToRemove', productsToRemove);\n\n    if (productsToUpdate[0]) {\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\n    }\n\n    if (productsToReplaceSKU[0]) {\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\n    }\n\n    if (productsToRemove[0]) {\n      await window.vtexjs.checkout.removeItems(productsToRemove);\n    }\n\n    if (productsToAdd[0]) {\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\n    }\n  }\n\n  getCustomProducts(skus) {\n    const customProducts = {};\n\n    skus\n      .filter(({ isCustom }) => isCustom === true)\n      .forEach(({ skuId, quantity, customProductItem }) => {\n        let currentCustomProduct = customProducts[skuId];\n\n        const customProductQuantity =\n          parseInt(customProductItem.quantity) * parseInt(quantity);\n\n        if (currentCustomProduct) {\n          const newQuantity =\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\n\n          currentCustomProduct = {\n            ...currentCustomProduct,\n            quantity: newQuantity,\n          };\n        } else {\n          currentCustomProduct = {\n            ...customProductItem,\n            quantity: customProductQuantity,\n            isCustom: true,\n          };\n        }\n\n        customProducts[skuId] = currentCustomProduct;\n      });\n\n    return Object.values(customProducts);\n  }\n\n  async getProductIndexInOrderForm(productId) {\n    const { items } = await this.getCurrent();\n\n    const index = items.findIndex(item => item.productId == productId);\n\n    if (index !== -1) return index;\n\n    return;\n  }\n\n  /**\n   * Remove item to cart\n   * @param {JSON} itemIndex - Product item index to be removed\n   */\n  async remove(itemIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: [\n        {\n          index: itemIndex,\n          quantity: 0,\n        },\n      ],\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  /**\n   * Remove items of cart\n   * @param {Array} itemsIndex - Products items index to be removed\n   */\n  async removeMoreProducts(itemsIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: itemsIndex.map(index => ({\n        index,\n        quantity: 0,\n      })),\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    return await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  async updateProduct(skuId, quantity, seller = 1) {\n    const newSKU = {\n      seller,\n      quantity,\n      id: skuId,\n    };\n\n    return await this.updateProducts([newSKU]);\n  }\n\n  async updateProducts(skus) {\n    const { items, orderFormId } = await this.getCurrent();\n\n    skus = skus\n      .map(({ id, quantity, seller }) => {\n        const index = items.findIndex(\n          item => parseInt(item.id) === parseInt(id)\n        );\n\n        return {\n          id,\n          index,\n          quantity,\n          seller: seller || 1,\n        };\n      })\n      .filter(sku => sku.index !== -1);\n\n    if (skus.length > 0) {\n      const payload = {\n        orderItems: skus,\n      };\n\n      return await this._httpClient.patch(\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\n        payload\n      );\n    }\n  }\n\n  async simulateOrderForm(postalCode, country = 'BRA') {\n    try {\n      await vtexjs.checkout.getOrderForm();\n\n      const orderForm = await vtexjs.checkout.calculateShipping({\n        postalCode,\n        country,\n      });\n\n      return orderForm;\n    } catch (error) {\n      console.error('Error in simulateOrderForm', error);\n    }\n  }\n\n  async simulateShipping(items, postalCode, country = 'BRA') {\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\n      items,\n      postalCode,\n      country\n    );\n\n    return orderFormSimulated;\n  }\n\n  async updateCheckoutTransporterSLA(logisticsInfo) {\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.logisticsInfo = logisticsInfo;\n\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async updateCheckoutAddress(address) {\n    console.log(address);\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.availableAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.selectedAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.address = {\n      ...shippingData.address,\n      ...address,\n    };\n\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async setMultipleCustomDataFields(appName, fields) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\n\n    try {\n      return await this._httpClient.put(endpoint, fields);\n    } catch (error) {\n      console.error('setMultipleCustomDataFields', error);\n    }\n\n    return;\n  }\n\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: appFieldValue };\n\n    try {\n      return await this._httpClient.put(endpoint, payload);\n    } catch (error) {\n      console.error('setSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  async removeSingleCustomDataField(appName, appFieldName) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: null };\n\n    try {\n      return await this._httpClient.delete(endpoint, payload);\n    } catch (error) {\n      console.error('removeSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  /**\n   * Cart's payload method factory\n   * @param {*} skuId - Product Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   * @return {JSON} cart paylod\n   */\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\n    return {\n      id: skuId,\n      quantity: productQuantity,\n      seller: sellerId,\n    };\n  }\n}\n\nexport default CartService;\n","import fetch from 'unfetch';\nimport { Ensure, Logger } from '../common';\n\n/**\n * HttpClient Abstraction class\n */\nclass HttpClient {\n  /**\n   * HttpClient constructor\n   */\n  constructor() {\n    this._logger = new Logger('httpClient');\n  }\n\n  /**\n   * Get\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  get(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'GET');\n    }\n  }\n\n  /**\n   * Delete\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  delete(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'DELETE');\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  post(endpointUrl, payload = {}) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'POST', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  put(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PUT', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  patch(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PATCH', payload);\n    }\n  }\n\n  /**\n   * @param {String} endpointUrl\n   * @param {String} httpVerb\n   * @param {Object} payload\n   * @return {Promise}\n   */\n  _execute(endpointUrl, httpVerb, payload) {\n    let header = {\n      method: httpVerb,\n      headers: {\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\n        // 'Content-Type': 'application/json',\n        accept: 'application/vnd.vtex.masterdata.v10+json',\n        'content-type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (payload) {\n      header['body'] = JSON.stringify(payload);\n    }\n\n    return fetch(endpointUrl, header)\n      .then(this.validateResponse)\n      .then(this.parseResponseToJson)\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        this._logger.log('Request succeeded with JSON response', error);\n        return error;\n      });\n  }\n\n  /**\n   * Parse response data to json object\n   * @param {*} response - Request response\n   * @return {JSON} json data\n   */\n  async parseResponseToJson(response) {\n    if (!response.ok) {\n      return response;\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Response validation\n   * @param {*} response\n   * @return {Promise} promise result\n   */\n  validateResponse(response) {\n    if (response.ok) {\n      return Promise.resolve(response);\n    } else {\n      return Promise.reject(new Error(response.statusText));\n    }\n  }\n}\n\nexport default HttpClient;\n"],"sourceRoot":""}
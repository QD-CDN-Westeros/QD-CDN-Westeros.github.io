{"version":3,"sources":["webpack:///./src/js/store/desktop/account/index.js"],"names":["VTEX_STATUS_TO_SHOW","Account","this","changePageTitle","setHandledsToWindow","userOrders","setHandled","location","hash","fetchUserOrdersAndUpdateTheOrderElements","title","document","querySelector","textContent","setPageTitle","window","addEventListener","e","mutationsList","observer","callback","mutation","type","target","targetNode","MutationObserver","observeCallback","observe","childList","subtree","productName","productId","quantity","order","orderIndex","container","parentElement","customData","selectItemsApp","customApps","filter","customApp","id","products","JSON","parse","fields","products_data","innerHTML","product","isCustom","map","customAttributes","createOrderProduct","join","querySelectorAll","customProductsNames","includes","forEach","classList","add","totalName","totalPrice","createElement","setAttribute","orderHeader","selectedCourierAPP","insuranceAPP","transporterTotal","courier_data","deliveryTypeSelected","priceFormatted","insuranceTotal","total","insuranceTotalElement","createTotal","transporterTotalElement","insertBefore","children","productItem","items","item","name","orderCard","Object","entries","productInsurance","labelInsuredItem","insuranceText","totalInsuranceFormatted","productInfoContainer","appendChild","moving_date","split","reverse","observeOrderSection","addedNodes","Element","matches","orderStatusElement","hasOwnProperty","style","display","hideCustomProducts","sellerOrderIDElements","Promise","all","orderID","replace","fetch","json","data","orders","index","addIDToProducts","addDateOfDelivery","addOrderProducts","addInsuranceInfo","addTotals","showOrders"],"mappings":"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","file":"js/b8one.desktop.account.js","sourcesContent":["// import Home from '../home';\n\nconst VTEX_STATUS_TO_SHOW = {\n  'Preparando Entrega': 'Pedido Recebido',\n  'Pagamento Aprovado': 'Pagamento Aprovado',\n  'Preparando Pedido': 'Pedido Confirmado.',\n  'Cancelamento Solicitado': 'Cancelado',\n};\n\nclass Account {\n  constructor() {\n    this.changePageTitle();\n    this.setHandledsToWindow();\n\n    this.userOrders = [];\n\n    this.setHandled();\n\n    if (location.hash === '#/orders') {\n      this.fetchUserOrdersAndUpdateTheOrderElements();\n    }\n  }\n\n  setPageTitle(title) {\n    const pageHeaderTitle = document.querySelector(\n      '.vtex-account__page .vtex-pageHeader__title'\n    );\n\n    pageHeaderTitle.textContent = title;\n  }\n\n  changePageTitle() {\n    if (location.hash === '#/orders') {\n      this.setPageTitle('Minhas mudanças');\n    }\n  }\n\n  setHandledsToWindow() {\n    window.addEventListener('hashchange', e => this.changePageTitle());\n  }\n\n  // Callback function to execute when mutations are observed\n  observeCallback(mutationsList, observer, callback) {\n    for (let mutation of mutationsList) {\n      if (mutation.type === 'childList') {\n        callback(mutation, observer);\n      }\n    }\n  }\n\n  observeOrderSection(target, callback) {\n    // Select the node that will be observed for mutations\n    const targetNode = document.querySelector(target);\n\n    // Options for the observer (which mutations to observe)\n    const config = { childList: true, subtree: true };\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver((mutationsList, observer) =>\n      this.observeCallback(mutationsList, observer, callback)\n    );\n\n    // Start observing the target node for configured mutations\n    observer.observe(targetNode, config);\n  }\n\n  createOrderProduct({ productName, productId, quantity }) {\n    return `\n      <div class=\"myo-order-product w-100 pb2 pt2 overflow-y-hidden\" data-product-id=\"${productId}\">\n        <div class=\"v-top dib w-20 h-auto\">\n          <img \n            src=\"/arquivos/ids/155403-50-50\"\n            alt=\"Item de 0,1 m³ sem caixa\" \n            crossorigin=\"anonymous\"\n          />\n        </div>\n        \n        <div class=\"dib w-80 pl3 c-on-base f6 fw4 lh-copy\">\n          <h4 class=\"db mb1 mt0\">\n            <a \n              href=\"/custom-item-1/p\"\n              class=\"c-link hover-c-link c-link--visited fw4 f6 f5-l link\"\n              target=\"_blank\" \n              rel=\"noopener\"\n            >\n              ${productName}\n            </a>\n          </h4>\n          \n          <span class=\"db mt0 mb2 f6 fw6\">\n            ${quantity} un.\n          </span>\n        </div>\n      </div>\n    `;\n  }\n\n  addOrderProducts(order, orderIndex) {\n    const firstProduct = document.querySelector(\n      `.myo-order-card:nth-child(${orderIndex}) .myo-order-product`\n    );\n    const container = firstProduct.parentElement;\n\n    if (!order.customData) return;\n\n    const selectItemsApp = order.customData.customApps.filter(\n      customApp => customApp.id === 'selecteditems'\n    )[0];\n\n    const products = JSON.parse(selectItemsApp.fields.products_data);\n\n    container.innerHTML += products\n      .filter(product => product.isCustom)\n      .map(({ quantity, customAttributes, productId }) => {\n        return this.createOrderProduct({\n          quantity,\n          productId,\n          productName: customAttributes['product-name'],\n        });\n      })\n      .join('');\n  }\n\n  hideCustomProducts() {\n    const products = [...document.querySelectorAll('.myo-order-product')];\n    const customProductsNames = [\n      'Item de 0,1 m³ sem caixa',\n      'Item de 0,1 m³ com caixa',\n    ];\n\n    products\n      .filter(product => {\n        const productName = product.querySelector('h4 a[href$=\"/p\"]');\n\n        return customProductsNames.includes(productName.textContent);\n      })\n      .forEach(product => product.classList.add('hidden'));\n  }\n\n  createTotal(totalName, totalPrice) {\n    const container = document.createElement('div');\n\n    container.setAttribute('class', 'fr fl-ns w-50');\n\n    container.innerHTML = `\n      <div class=\"db w-100 f7 f6-xl fw4 c-muted-1 ttu tr tl-ns\">\n        <span>${totalName}</span>\n      </div>\n      \n      <div class=\"db w-100 f6 fw5 c-muted-1 tr tl-ns f5-l\">\n        <span>${totalPrice}</span>\n        <div class=\"absolute dn dib-ns ml3 mt2\"></div>\n      </div>\n    `;\n\n    return container;\n  }\n\n  addTotals(order, orderIndex) {\n    const orderHeader = document.querySelector(\n      `.myo-order-card:nth-child(${orderIndex}) .myo-order-header`\n    );\n\n    if (!order.customData) return;\n\n    const selectedCourierAPP = order.customData.customApps.filter(\n      customApp => customApp.id === 'selectedcourier'\n    )[0];\n\n    const insuranceAPP = order.customData.customApps.filter(\n      customApp => customApp.id === 'insurance'\n    )[0];\n\n    const transporterSelected = JSON.parse(\n      selectedCourierAPP.fields.courier_data\n    );\n\n    const transporterTotal =\n      transporterSelected.deliveryTypeSelected.priceFormatted;\n    const insuranceTotal = insuranceAPP.fields.total;\n\n    const insuranceTotalElement = this.createTotal(\n      'Total Segurado',\n      insuranceTotal || 'R$ 0,00'\n    );\n\n    const transporterTotalElement = this.createTotal(\n      'Total Mudança',\n      transporterTotal\n    );\n\n    orderHeader.insertBefore(insuranceTotalElement, orderHeader.children[1]);\n    orderHeader.insertBefore(transporterTotalElement, orderHeader.children[1]);\n  }\n\n  addIDToProducts(order, orderIndex) {\n    const products = document.querySelectorAll(\n      `.myo-order-card:nth-child(${orderIndex}) .myo-order-product`\n    );\n\n    products.forEach(product => {\n      const productName = product.querySelector('h4 a[href$=\"/p\"]');\n\n      const productItem = order.items.filter(\n        item => item.name === productName.textContent\n      )[0];\n\n      product.setAttribute('data-product-id', productItem.productId);\n      product.setAttribute('data-product-sku', productItem.id);\n    });\n  }\n\n  showOrders() {\n    const orderCards = document.querySelectorAll('.myo-order-card');\n\n    orderCards.forEach(orderCard =>\n      orderCard.classList.add('myo-order-card--show')\n    );\n  }\n\n  addInsuranceInfo(order, orderIndex) {\n    const orderCard = document.querySelector(\n      `.myo-order-card:nth-child(${orderIndex})`\n    );\n\n    if (!order.customData) return;\n\n    const insuranceAPP = order.customData.customApps.filter(\n      customApp => customApp.id === 'insurance'\n    )[0];\n\n    if (\n      insuranceAPP.fields.items !== 'skipped' &&\n      insuranceAPP.fields.items !== 'none'\n    ) {\n      const items = JSON.parse(insuranceAPP.fields.items);\n\n      Object.entries(items).forEach(([productId, productInsurance]) => {\n        const product = orderCard.querySelector(\n          `[data-product-id=\"${productId}\"]`\n        );\n\n        const labelInsuredItem = document.createElement('span');\n        labelInsuredItem.setAttribute('class', 'myo-order-product-insured');\n        labelInsuredItem.textContent = 'Asegurado';\n\n        const insuranceText = document.createElement('span');\n        insuranceText.setAttribute('class', 'db mt0 mb2 f6 fw6');\n        insuranceText.textContent = `Asegurado por ${productInsurance.totalInsuranceFormatted}`;\n\n        if (product) {\n          const productName = product.querySelector('h4');\n          const productInfoContainer = productName.parentElement;\n\n          productName.appendChild(labelInsuredItem);\n          productInfoContainer.appendChild(insuranceText);\n        }\n      });\n    }\n  }\n\n  addDateOfDelivery(order, orderIndex) {\n    const container = document.querySelector(\n      `.myo-order-card:nth-child(${orderIndex}) .bg-base > div:nth-child(2)`\n    );\n\n    if (!order.customData) return;\n\n    const orderinfoApp = order.customData.customApps.filter(\n      customApp => customApp.id === 'orderinfo'\n    )[0];\n\n    const { moving_date } = orderinfoApp.fields;\n\n    container.innerHTML += `\n      <div>\n        <p>\n          Data da mudança: ${moving_date\n            .split('/')\n            .reverse()\n            .join('/')}\n        </p>\n      </div>\n    `;\n  }\n\n  async fetchUserOrdersAndUpdateTheOrderElements() {\n    this.observeOrderSection('.vtex-account', async (mutation, observer) => {\n      const vtexAccountPageElement = [...mutation.addedNodes]\n        .filter(item => item instanceof Element)\n        .filter(item => item.matches('section.ph0'))[0];\n\n      if (vtexAccountPageElement) {\n        // observer.disconnect();\n\n        const orderStatusElements = document.querySelectorAll(\n          '.myo-seller-order-id + div span'\n        );\n\n        orderStatusElements.forEach(orderStatusElement => {\n          if (\n            VTEX_STATUS_TO_SHOW.hasOwnProperty(orderStatusElement.textContent)\n          ) {\n            orderStatusElement.textContent =\n              VTEX_STATUS_TO_SHOW[orderStatusElement.textContent];\n          } else {\n            orderStatusElement.parentElement.parentElement.parentElement.style.display =\n              'none';\n          }\n        });\n\n        this.hideCustomProducts();\n\n        const sellerOrderIDElements = [\n          ...document.querySelectorAll('.myo-order-card .myo-order-id'),\n        ];\n\n        const orders = await Promise.all(\n          sellerOrderIDElements.map(async item => {\n            const orderID = item.textContent.replace(/(\\#|\\s)+/, '');\n\n            const data = await (\n              await fetch(`/api/oms/user/orders/${orderID}`)\n            ).json();\n\n            return data;\n          })\n        );\n\n        this.userOrders = orders;\n\n        orders.forEach((order, index) => {\n          this.addIDToProducts(order, index + 1);\n          this.addDateOfDelivery(order, index + 1);\n          this.addOrderProducts(order, index + 1);\n          this.addInsuranceInfo(order, index + 1);\n          this.addTotals(order, index + 1);\n        });\n\n        this.showOrders();\n      }\n    });\n  }\n\n  setHandled() {\n    document\n      .querySelector('.vtex-account_menu-link[href=\"#/orders\"]')\n      .addEventListener('click', e =>\n        this.fetchUserOrdersAndUpdateTheOrderElements()\n      );\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Account();\n});\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/js/store/mobile/insurance-change/index.js","webpack:///./src/js/general/utils/currency/index.js","webpack:///./src/js/general/components/b8one.modalComponent.js","webpack:///./src/js/general/utils/skusToIgnore/index.js","webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/general/services/b8one.httpClient.js"],"names":["InsuranceChangePage","product","productOldInsuranceValue","productId","dataset","productInsuranceInput","querySelector","value","addEventListener","target","newTotalInsuranceQuantity","totalInsurance","subtract","add","totalOrderSummary","lastInsurancePercentage","valueInsurance","totalInsuranceElement","textContent","format","multiply","products","REAL","totalInsuranceFormatted","setTotalOrderSummaryElement","setValueInsuranceElement","this","cartService","CartService","window","totalTransporterSelected","totalTransporterSelectedElement","rejectInsuranceModalInstance","orderForm","orderDetails","init","location","pathname","setHandledButtonSkipStepClick","getCurrent","orderID","search","match","fetch","json","data","setTotalTransporterSelected","getProductstInOrderForm","getProductsInCustomData","mapProducts","getInsuranceDataInCustomData","setTotalOrderSummary","setValueInsurance","setTotalInsuranceElement","setInputMasks","updateProducts","setHandledProducts","setHandledButtonSaveClick","initRejectInsuranceModal","setHandledButtonRejectInsuranceClick","setHandledButtonConfirmRejectInsuranceClick","customData","customApps","filter","customApp","id","forEach","courier_data","fields","priceFormatted","JSON","parse","deliveryTypeSelected","document","querySelectorAll","setHandledProduct","items","insuranceItemsTable","productsHTML","SKUS_TO_IGNORE","includes","parseInt","map","name","imageUrl","skuName","quantity","productName","replace","createProduct","description","innerHTML","join","products_data","customProducts","isCustom","productData","createCustomProduct","Object","values","customAttributes","createProducts","IMask","mask","blocks","num","Number","thousandsSeparator","scale","buttonSave","buttonNext","dispatchEvent","initSaveCustomDataEvent","saveData","endSaveCustomDataEvent","e","preventDefault","classList","toggle","assign","total","entries","key","reduce","obj","insuranceFieldsForCustomData","stringify","insuranceSKU","seller","intValue","vtexjs","checkout","getOrderForm","addToCart","updateInsuranceSKUPrice","updateCheckoutAddress","Promise","all","setMultipleCustomDataFields","setSingleCustomDataField","console","log","index","insuranceSKUIndex","remove","removeSingleCustomDataField","error","skipInsuranceStep","buttonCloseModal","buttonConfirm","rejectInsuranceModal","ModalComponent","modal","modalShowCLass","close","setTimeout","show","noContractInsurance","price","orderFormId","itemIndex","findIndex","endpoint","method","body","headers","Accept","selectedAddresses","shippingData","currency","symbol","precision","separator","decimal","formatWithSymbol","openModalCallback","closeModalCallback","isOpen","openCallback","Function","closeCallback","Element","Ensure","undefined","input","isUndefined","checkValidity","object","props","getMissingProps","length","missingProps","prop","push","Helper","_logger","Logger","language","navigator","userLanguage","currencyLocale","minimumFractionDigits","elem","selector","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","i","item","parents","parentNode","form","serialized","elements","field","disabled","type","n","options","selected","encodeURIComponent","checked","Math","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","split","element","heightViewport","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","mapAccents","a","o","u","c","pattern","RegExp","toFixed","max","Intl","NumberFormat","style","logName","message","errorObj","info","warn","_VTEX_API_ENDPOINT","_httpClient","HttpClient","get","skuId","productQuantity","sellerId","current","indexFound","x","endpointUrl","payload","orderItems","patch","skus","skusCustomProducts","getCustomProducts","sku","skuToIgnore","indexToRemove","indexList","removeMoreProducts","response","productsToAdd","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","newQuantity","customProductItem","currentCustomProduct","customProductQuantity","expectedOrderFormSections","noSplitItem","itemsIndex","postalCode","country","calculateShipping","simulateShipping","orderFormSimulated","logisticsInfo","sendAttachment","address","availableAddresses","appName","put","appFieldName","appFieldValue","delete","_execute","httpVerb","header","accept","then","validateResponse","parseResponseToJson","catch","ok","resolve","reject","Error","statusText"],"mappings":"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","file":"js/b8one.mobile.insurance-change-1.js","sourcesContent":["// Dependencies\r\nimport IMask from 'imask';\r\n\r\n// Utils\r\nimport { REAL } from 'Utils/currency/';\r\nimport SKUS_TO_IGNORE from 'Utils/skusToIgnore';\r\n\r\n// Services\r\nimport CartService from 'Services/b8one.cartService.js';\r\n\r\nimport ModalComponent from 'Components/b8one.modalComponent.js';\r\n\r\nclass InsuranceChangePage {\r\n  constructor() {\r\n    this.products = {};\r\n    this.cartService = new CartService();\r\n\r\n    window.InsuranceChangePage = this;\r\n\r\n    this.valueInsurance = REAL('R$ 0,00');\r\n    this.totalInsurance = REAL('R$ 0,00');\r\n    this.totalOrderSummary = REAL('R$ 0,00');\r\n    this.totalTransporterSelected = REAL('R$ 0,00');\r\n\r\n    this.totalInsuranceElement;\r\n    this.totalTransporterSelectedElement;\r\n\r\n    this.lastInsurancePercentage = 'R$ 0,00';\r\n\r\n    this.rejectInsuranceModalInstance = null;\r\n\r\n    this.orderForm = {};\r\n    this.orderDetails = {};\r\n\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    if (location.pathname !== '/_secure/seguro/contratacao') {\r\n      this.setHandledButtonSkipStepClick();\r\n    }\r\n\r\n    this.orderForm = await this.cartService.getCurrent();\r\n\r\n    if (location.pathname === '/_secure/seguro/contratacao') {\r\n      const orderID = location.search.match(/[\\d\\-\\d{2}]+/g)[0];\r\n\r\n      const data = await (await fetch(`/api/oms/pvt/orders/${orderID}`)).json();\r\n\r\n      this.orderForm = data;\r\n      this.orderDetails = data;\r\n    }\r\n\r\n    if (\r\n      location.pathname === '/seguro' ||\r\n      location.pathname === '/_secure/seguro/contratacao'\r\n    ) {\r\n      this.setTotalTransporterSelected();\r\n\r\n      this.getProductstInOrderForm();\r\n      this.getProductsInCustomData();\r\n\r\n      this.mapProducts();\r\n\r\n      this.getInsuranceDataInCustomData();\r\n\r\n      this.setTotalOrderSummary();\r\n      this.setValueInsurance();\r\n\r\n      this.setTotalInsuranceElement();\r\n      this.setTotalOrderSummaryElement();\r\n      this.setValueInsuranceElement();\r\n\r\n      this.setInputMasks();\r\n      this.updateProducts();\r\n\r\n      this.setHandledProducts();\r\n\r\n      this.setHandledButtonSaveClick();\r\n    } else {\r\n      this.initRejectInsuranceModal();\r\n      this.setHandledButtonRejectInsuranceClick();\r\n      this.setHandledButtonConfirmRejectInsuranceClick();\r\n    }\r\n  }\r\n\r\n  setTotalTransporterSelected() {\r\n    const { customData } = this.orderForm;\r\n\r\n    if (!customData) return;\r\n\r\n    customData.customApps\r\n      .filter(customApp => customApp.id === 'selectedcourier')\r\n      .forEach(customApp => {\r\n        const { courier_data } = customApp.fields;\r\n\r\n        const transporter = JSON.parse(courier_data);\r\n\r\n        const { priceFormatted } = transporter.deliveryTypeSelected;\r\n\r\n        this.totalTransporterSelected = this.totalTransporterSelected.add(\r\n          priceFormatted\r\n        );\r\n      });\r\n  }\r\n\r\n  setTotalInsuranceElement() {\r\n    const totalInsuranceElement = document.querySelector('.js-total-insurance');\r\n\r\n    totalInsuranceElement.textContent = this.totalInsurance.format();\r\n\r\n    this.totalInsuranceElement = totalInsuranceElement;\r\n  }\r\n\r\n  setTotalOrderSummaryElement() {\r\n    const totalOrderSummaryElement = document.querySelector(\r\n      '.js-total-order-summary'\r\n    );\r\n\r\n    totalOrderSummaryElement.textContent = this.totalOrderSummary.format();\r\n  }\r\n\r\n  setTotalOrderSummary() {\r\n    this.totalOrderSummary = this.totalOrderSummary\r\n      .add(this.totalTransporterSelected.format())\r\n      .add(this.totalInsurance.multiply(0.01).format());\r\n  }\r\n\r\n  setValueInsurance() {\r\n    this.valueInsurance = this.valueInsurance.add(\r\n      this.totalInsurance.multiply(0.01).format()\r\n    );\r\n\r\n    this.lastInsurancePercentage = this.valueInsurance.format();\r\n  }\r\n\r\n  setValueInsuranceElement() {\r\n    const valueInsuranceElement = document.querySelector('.js-value-insurance');\r\n\r\n    valueInsuranceElement.textContent = this.valueInsurance.format();\r\n  }\r\n\r\n  mapProducts() {\r\n    const products = [...document.querySelectorAll('.product')];\r\n\r\n    products.forEach(product => {\r\n      const { productId } = product.dataset;\r\n\r\n      this.products[productId] = {\r\n        productId,\r\n        totalInsurance: 0,\r\n        totalInsuranceFormatted: 'R$ 0,00',\r\n      };\r\n    });\r\n  }\r\n\r\n  setHandledProduct = product => {\r\n    const { productId } = product.dataset;\r\n    const productInsuranceInput = product.querySelector('.product__value');\r\n\r\n    if (productInsuranceInput) {\r\n      let productOldInsuranceValue = productInsuranceInput.value;\r\n\r\n      productInsuranceInput.addEventListener('input', ({ target }) => {\r\n        const { value } = target;\r\n\r\n        let newTotalInsuranceQuantity = this.totalInsurance\r\n          .subtract(productOldInsuranceValue)\r\n          .add(value);\r\n\r\n        this.totalOrderSummary = this.totalOrderSummary.subtract(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        this.valueInsurance = this.valueInsurance.subtract(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        this.totalInsuranceElement.textContent = newTotalInsuranceQuantity.format();\r\n\r\n        this.totalInsurance = newTotalInsuranceQuantity;\r\n\r\n        this.lastInsurancePercentage = this.totalInsurance\r\n          .multiply(0.01)\r\n          .format();\r\n\r\n        this.totalOrderSummary = this.totalOrderSummary.add(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        this.valueInsurance = this.valueInsurance.add(\r\n          this.lastInsurancePercentage\r\n        );\r\n\r\n        productOldInsuranceValue = value;\r\n\r\n        this.products[productId] = {\r\n          ...this.products[productId],\r\n          totalInsurance: REAL(value).value,\r\n          totalInsuranceFormatted: REAL(value).format(),\r\n        };\r\n\r\n        this.setTotalOrderSummaryElement();\r\n        this.setValueInsuranceElement();\r\n      });\r\n    }\r\n  };\r\n\r\n  setHandledProducts() {\r\n    const products = [...document.querySelectorAll('.product')];\r\n\r\n    products.forEach(this.setHandledProduct);\r\n  }\r\n\r\n  getProductstInOrderForm() {\r\n    const { items } = this.orderForm;\r\n\r\n    const insuranceItemsTable = document.querySelector(\r\n      '.insurance-items__table'\r\n    );\r\n\r\n    const productsHTML = items\r\n      .filter(({ id }) => !SKUS_TO_IGNORE.includes(parseInt(id)))\r\n      .map(({ name, imageUrl, productId, skuName, quantity }) => {\r\n        const productName = name.replace(skuName, '');\r\n        const description = '';\r\n\r\n        const productHTML = `\r\n          <div class=\"table__row table__row--hidden\">\r\n            ${this.createProduct({\r\n              imageUrl,\r\n              productId,\r\n              productName,\r\n              description,\r\n              quantity,\r\n            })}\r\n          </div>\r\n        `;\r\n\r\n        return productHTML;\r\n      });\r\n\r\n    insuranceItemsTable.innerHTML += productsHTML.join('');\r\n  }\r\n\r\n  getProductsInCustomData() {\r\n    const { customData } = this.orderForm;\r\n\r\n    if (!customData) return;\r\n\r\n    customData.customApps\r\n      .filter(customApp => customApp.id === 'selecteditems')\r\n      .map(customApp => {\r\n        const { products_data } = customApp.fields;\r\n        const products = JSON.parse(products_data);\r\n        const customProducts = products.filter(({ isCustom }) => isCustom);\r\n\r\n        const insuranceItemsTable = document.querySelector(\r\n          '.insurance-items__table'\r\n        );\r\n\r\n        const productsHTML = customProducts\r\n          .map(productData => {\r\n            const productHTML = `\r\n              <div class=\"table__row table__row--hidden\">\r\n                ${this.createCustomProduct(productData)}\r\n              </div>\r\n            `;\r\n\r\n            return productHTML;\r\n          })\r\n          .join('');\r\n\r\n        insuranceItemsTable.innerHTML += productsHTML;\r\n      });\r\n  }\r\n\r\n  updateProducts() {\r\n    Object.values(this.products).forEach(\r\n      ({ productId, totalInsuranceFormatted }) => {\r\n        const productElement = document.querySelector(\r\n          `[data-product-id='${productId}']`\r\n        );\r\n\r\n        const productInputElement = productElement.querySelector(\r\n          '.js-product-insurance-input'\r\n        );\r\n\r\n        productInputElement.value = totalInsuranceFormatted;\r\n      }\r\n    );\r\n  }\r\n\r\n  createProduct({ productId, productName, description, imageUrl, quantity }) {\r\n    const productHTML = `\r\n      <div \r\n        class=\"product\"\r\n        data-product-id=\"${productId}\"\r\n      >\r\n        <div class=\"product__container\">\r\n          <figure class=\"product__figure\">\r\n            <img \r\n              class=\"product__image\" \r\n              alt=\"${productName}\"\r\n              src=\"${imageUrl}\"\r\n            />\r\n          </figure>\r\n          \r\n          <div class=\"product__group\">\r\n            <h3 class=\"product__name\">${productName} (${quantity} un.)</h3>\r\n            \r\n            <div class=\"product__attributes\">\r\n              <p class=\"attributes__item\">${description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n        <input \r\n          type=\"tel\"\r\n          placeholder=\"R$ 0,00\"\r\n          class=\"product__value js-product-insurance-input\"\r\n        />\r\n      </div>\r\n    `;\r\n\r\n    return productHTML;\r\n  }\r\n\r\n  createProducts(products) {\r\n    products = products\r\n      .map(product => {\r\n        return `\r\n        <div class=\"table__row\">\r\n          ${this.createProduct(product)}\r\n        </div>\r\n      `;\r\n      })\r\n      .join('');\r\n\r\n    return products;\r\n  }\r\n\r\n  createCustomProduct(productData) {\r\n    const { quantity, customAttributes, productId } = productData;\r\n\r\n    const customProduct = `\r\n      <div \r\n        class=\"product\"\r\n        data-product-quantity=\"${quantity}\"\r\n        data-product-id=\"${productId}\"\r\n      >\r\n        <div class=\"product__container\">\r\n          <div class=\"product__icon-container\">\r\n            <i class=\"far fa-box product__icon\"></i>\r\n          </div>\r\n          \r\n          <div class=\"product__group\">\r\n            <h3 class=\"product__name\">\r\n              ${customAttributes['product-name']} (${quantity} un.)\r\n            </h3>\r\n            \r\n            <div class=\"product__attributes\">\r\n              <p class=\"attributes__item\">\r\n                ${customAttributes['product-height']}cm x \r\n                ${customAttributes['product-width']}cm x \r\n                ${customAttributes['product-depth']}cm\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <input \r\n          type=\"tel\"\r\n          placeholder=\"R$ 0,00\"\r\n          class=\"product__value js-product-insurance-input\"\r\n        />\r\n      </div>\r\n    `;\r\n\r\n    return customProduct;\r\n  }\r\n\r\n  addProductsToDOM() {\r\n    const insuranceItemsTable = document.querySelector(\r\n      '.insurance-items__table'\r\n    );\r\n\r\n    insuranceItemsTable.innerHTML += this.createProducts();\r\n  }\r\n\r\n  setInputMasks() {\r\n    [...document.querySelectorAll('.js-product-insurance-input')].forEach(\r\n      productInsuranceInput => {\r\n        IMask(productInsuranceInput, {\r\n          mask: 'R$ num',\r\n          blocks: {\r\n            num: {\r\n              // nested masks are available!\r\n              mask: Number,\r\n              thousandsSeparator: '.',\r\n              scale: 2,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  setHandledButtonSaveClick() {\r\n    const buttonSave = document.querySelector('.js-button-save');\r\n    const buttonNext = document.querySelector('.footer__buttom-submit');\r\n\r\n    buttonSave.addEventListener('click', async () => {\r\n      document.dispatchEvent(window.initSaveCustomDataEvent);\r\n\r\n      await this.saveData();\r\n\r\n      document.dispatchEvent(window.endSaveCustomDataEvent);\r\n    });\r\n\r\n    buttonNext &&\r\n      buttonNext.addEventListener('click', async e => {\r\n        e.preventDefault();\r\n        buttonNext.classList.toggle('js-loading');\r\n\r\n        await this.saveData();\r\n\r\n        buttonNext.classList.toggle('js-loading');\r\n\r\n        if (location.pathname === '/_secure/seguro/contratacao') {\r\n          window.location.assign('/checkout/#/payment');\r\n        } else {\r\n          window.location.assign('/resumo');\r\n        }\r\n      });\r\n  }\r\n\r\n  getInsuranceDataInCustomData() {\r\n    const { customData } = this.orderForm;\r\n\r\n    if (!customData) return;\r\n\r\n    customData.customApps\r\n      .filter(customApp => customApp.id === 'insurance')\r\n      .forEach(customApp => {\r\n        let { items, total } = customApp.fields;\r\n\r\n        items = ['skipped', 'none'].includes(items) ? items : JSON.parse(items);\r\n\r\n        if (items && !['skipped', 'none'].includes(items)) {\r\n          items = Object.entries(items)\r\n            .filter(([key, value]) => key in this.products)\r\n            .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\r\n\r\n          this.products = {\r\n            ...this.products,\r\n            ...items,\r\n          };\r\n        }\r\n\r\n        if (total) {\r\n          this.totalInsurance = REAL(total);\r\n        }\r\n      });\r\n  }\r\n\r\n  async saveData() {\r\n    try {\r\n      const insuranceFieldsForCustomData = {\r\n        items: JSON.stringify(this.products),\r\n        total: this.totalInsurance.format(),\r\n      };\r\n\r\n      const insuranceSKU = {\r\n        id: 35,\r\n        quantity: 1,\r\n        seller: '1',\r\n      };\r\n\r\n      if (this.totalInsurance.intValue > 0) {\r\n        await window.vtexjs.checkout.getOrderForm();\r\n        this.orderForm = await window.vtexjs.checkout.addToCart(\r\n          [insuranceSKU],\r\n          null\r\n        );\r\n\r\n        await this.updateInsuranceSKUPrice(\r\n          this.totalInsurance.multiply(0.01).intValue\r\n        );\r\n      }\r\n\r\n      if (location.pathname === '/_secure/seguro/contratacao') {\r\n        await this.updateCheckoutAddress();\r\n      }\r\n\r\n      await Promise.all([\r\n        this.cartService.setMultipleCustomDataFields(\r\n          'insurance',\r\n          insuranceFieldsForCustomData\r\n        ),\r\n        this.cartService.setSingleCustomDataField(\r\n          'orderinfo',\r\n          'current_step',\r\n          'insurance-change-2'\r\n        ),\r\n      ]);\r\n    } catch (error) {\r\n      console.log('saveData', error);\r\n    }\r\n  }\r\n\r\n  async skipInsuranceStep() {\r\n    try {\r\n      let insuranceSKUIndex;\r\n\r\n      this.orderForm.items.forEach(({ id }, index) => {\r\n        if (parseInt(id) === 35) {\r\n          insuranceSKUIndex = index;\r\n        }\r\n      });\r\n\r\n      if (insuranceSKUIndex) {\r\n        await this.cartService.remove(insuranceSKUIndex);\r\n      }\r\n\r\n      await Promise.all([\r\n        this.cartService.removeSingleCustomDataField('insurance', 'total'),\r\n        this.cartService.setSingleCustomDataField(\r\n          'insurance',\r\n          'items',\r\n          'skipped'\r\n        ),\r\n        this.cartService.setSingleCustomDataField(\r\n          'orderinfo',\r\n          'current_step',\r\n          'insurance-change-1'\r\n        ),\r\n      ]);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async noContractInsurance() {\r\n    try {\r\n      let insuranceSKUIndex;\r\n\r\n      this.orderForm.items.forEach(({ id }, index) => {\r\n        if (parseInt(id) === 35) {\r\n          insuranceSKUIndex = index;\r\n        }\r\n      });\r\n\r\n      if (insuranceSKUIndex) {\r\n        await this.cartService.remove(insuranceSKUIndex);\r\n      }\r\n\r\n      await Promise.all([\r\n        this.cartService.removeSingleCustomDataField('insurance', 'total'),\r\n        this.cartService.setSingleCustomDataField('insurance', 'items', 'none'),\r\n        this.cartService.setSingleCustomDataField(\r\n          'orderinfo',\r\n          'current_step',\r\n          'insurance-change-1'\r\n        ),\r\n      ]);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  setHandledButtonSkipStepClick() {\r\n    const buttonSkipStep = document.querySelector('.js-button-later-contract');\r\n\r\n    buttonSkipStep.addEventListener('click', async e => {\r\n      e.preventDefault();\r\n\r\n      await this.skipInsuranceStep();\r\n\r\n      window.location.assign('/resumo');\r\n    });\r\n  }\r\n\r\n  initRejectInsuranceModal() {\r\n    const rejectInsuranceModal = document.querySelector(\r\n      '.reject-insurance-modal'\r\n    );\r\n\r\n    if (rejectInsuranceModal) {\r\n      this.rejectInsuranceModalInstance = new ModalComponent({\r\n        modal: rejectInsuranceModal,\r\n        modalShowCLass: 'wrapper-modal--show',\r\n      });\r\n\r\n      const buttonCloseModal = rejectInsuranceModal.querySelector(\r\n        '.modal__close'\r\n      );\r\n\r\n      const buttonConfirm = rejectInsuranceModal.querySelector(\r\n        '.button--primary'\r\n      );\r\n\r\n      buttonCloseModal.addEventListener('click', () => {\r\n        this.rejectInsuranceModalInstance.close();\r\n      });\r\n\r\n      buttonConfirm.addEventListener('click', () => {\r\n        buttonConfirm.classList.add('js-loading', 'button--disabled');\r\n\r\n        setTimeout(() => {\r\n          window.location.assign('/resumo');\r\n        }, 1500);\r\n      });\r\n    }\r\n  }\r\n\r\n  setHandledButtonRejectInsuranceClick() {\r\n    const buttonRejectInsurance = document.querySelector(\r\n      '.js-button-no-contract'\r\n    );\r\n\r\n    buttonRejectInsurance.addEventListener('click', e => {\r\n      e.preventDefault();\r\n\r\n      this.rejectInsuranceModalInstance.show();\r\n    });\r\n  }\r\n\r\n  setHandledButtonConfirmRejectInsuranceClick() {\r\n    const rejectInsuranceModal = document.querySelector(\r\n      '.reject-insurance-modal'\r\n    );\r\n\r\n    const buttonConfirm = rejectInsuranceModal.querySelector('.modal__button');\r\n\r\n    buttonConfirm.addEventListener('click', async e => {\r\n      e.preventDefault();\r\n\r\n      await this.noContractInsurance();\r\n\r\n      window.location.assign('/resumo');\r\n    });\r\n  }\r\n\r\n  async updateInsuranceSKUPrice(price) {\r\n    const { orderFormId } = this.orderForm;\r\n\r\n    const itemIndex = this.orderForm.items.findIndex(\r\n      ({ id }) => parseInt(id) === 35\r\n    );\r\n\r\n    if (itemIndex === -1) return;\r\n\r\n    const endpoint = `https://wcdlfckgi9.execute-api.us-east-2.amazonaws.com/v1/api/checkout/pub/orderform/${orderFormId}/items/${itemIndex}/price`;\r\n\r\n    await fetch(endpoint, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        price,\r\n      }),\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  async updateCheckoutAddress() {\r\n    const { selectedAddresses } = this.orderDetails.shippingData;\r\n\r\n    await this.cartService.updateCheckoutAddress(selectedAddresses[0]);\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  new InsuranceChangePage();\r\n});\r\n","import currency from 'currency.js';\r\n\r\nconst REAL = value =>\r\n  currency(value, {\r\n    symbol: 'R$ ',\r\n    precision: 2,\r\n    separator: '.',\r\n    decimal: ',',\r\n    formatWithSymbol: true,\r\n  });\r\n\r\nexport { REAL };\r\n","/*\r\n  *\r\n  * Author: Enrique Mora <enriquebeta7@gmail.com>\r\n  *\r\n*/\r\n\r\nexport default class ModalComponent {\r\n\t/**\r\n\t * @param  { Element | String } modal\r\n\t * @param  { String } modalShowCLass\r\n\t * @param  { Function } openModalCallback\r\n\t * @param  { Function } closeModalCallback\r\n   * @requires modal\r\n\t */\r\n\tconstructor({\r\n\t\tmodal,\r\n\t\tmodalShowCLass,\r\n\t\topenModalCallback,\r\n\t\tcloseModalCallback,\r\n\t}) {\r\n\t\tthis.isOpen = false;\r\n\t\tthis.modalShowCLass = modalShowCLass || 'show';\r\n\t\tthis.openCallback = openModalCallback || new Function();\r\n\t\tthis.closeCallback = closeModalCallback || new Function();\r\n\t\tthis.modal =\r\n\t\t\tmodal instanceof Element ? modal : document.querySelector(modal);\r\n\t}\r\n\r\n\tshow() {\r\n\t\t!this.isOpen && this.modal.classList.add(this.modalShowCLass);\r\n\t\tthis.isOpen = true;\r\n\r\n\t\tthis.openCallback(this);\r\n\t}\r\n\r\n\tclose() {\r\n\t\tthis.isOpen && this.modal.classList.remove(this.modalShowCLass);\r\n\t\tthis.isOpen = false;\r\n\r\n\t\tthis.closeCallback(this);\r\n\t}\r\n}\r\n","/**\r\n ** SKU IDs to ignore.\r\n *? IDs 19 and 698 are lifting products.\r\n *? IDs 25 and 26 are custom products.\r\n *? ID 33 is storage product.\r\n *? ID 35 is insurance sku.\r\n *? ID 696 is additional weight sku.\r\n *? ID 699 is disassembly and assembly sku.\r\n */\r\nexport default [19, 698, 25, 26, 33, 35, 696, 699];\r\n","/**\r\n * Ensure Abstraction class\r\n */\r\nclass Ensure {\r\n  /**\r\n   * Ensure value is Undefined\r\n   * @param {*} value Value to be validated\r\n   * @return {boolean}\r\n   */\r\n  static isUndefined(value = undefined) {\r\n    return typeof value === 'undefined' ||\r\n      value === null ||\r\n      value === '' ||\r\n      value === {} ||\r\n      value === [];\r\n    // || JSON.stringify(value) === JSON.stringify({});\r\n  }\r\n\r\n  /**\r\n   * Ensure Input validity\r\n   * @param {*} input to validate\r\n   * @return {boolean} true if is valid\r\n   */\r\n  static isInputValid(input) {\r\n    return !this.isUndefined(input) && input.checkValidity();\r\n  }\r\n\r\n  /**\r\n   * Verify if object has properties\r\n   * @param {Object} object - Object to be verified\r\n   * @param {Array} props - properties to search on object\r\n   * @return {Boolean} True if object has all properties\r\n   */\r\n  static hasProps(object, props) {\r\n    const missingPropsResult = this.getMissingProps(object, props);\r\n    return missingPropsResult.length <= 0;\r\n  }\r\n\r\n  /**\r\n   * Get Object missing properties\r\n   * @param {Object} object - Object to be verified\r\n   * @param {Array} props - properties to search on object\r\n   * @return {Array} missing properties\r\n   */\r\n  static getMissingProps(object, props) {\r\n    let missingProps = [];\r\n    [...props].forEach((prop) => {\r\n      const result = prop in object;\r\n      if (!result) {\r\n        missingProps.push(prop);\r\n      }\r\n    });\r\n\r\n    return missingProps;\r\n  }\r\n}\r\n\r\nexport default Ensure;\r\n","/* eslint-disable max-len */\r\nimport { Logger } from './';\r\n\r\n/**\r\n * Helper Abstraction class\r\n */\r\nclass Helper {\r\n  /**\r\n   * Helper constructor\r\n   * @param {*} props\r\n   */\r\n  constructor(props) {\r\n    this._logger = new Logger('Ensure');\r\n    this.props = props || {\r\n      language: navigator.language || navigator.userLanguage,\r\n      currency: 'BRL',\r\n      currencyLocale: 'pt-br',\r\n      minimumFractionDigits: 2,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * format currency\r\n   * @param {*} value\r\n   * @param {*} minimumFractionDigits\r\n   * @return {*}\r\n   */\r\n  formatPrice(value) {\r\n    value = value / 100;\r\n    value = (value * 1).toFixed(\r\n      Math.max(0, ~~this.props.minimumFractionDigits)\r\n    );\r\n\r\n    return new Intl.NumberFormat(this.props.currencyLocale, {\r\n      style: 'currency',\r\n      currency: this.props.currency,\r\n      minimumFractionDigits: this.props.minimumFractionDigits,\r\n    }).format(value);\r\n  }\r\n\r\n  static getParents(elem, selector) {\r\n    // Element.matches() polyfill\r\n    if (!Element.prototype.matches) {\r\n      Element.prototype.matches =\r\n        Element.prototype.matchesSelector ||\r\n        Element.prototype.mozMatchesSelector ||\r\n        Element.prototype.msMatchesSelector ||\r\n        Element.prototype.oMatchesSelector ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function(s) {\r\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\r\n              s\r\n            ),\r\n            i = matches.length;\r\n\r\n          while (--i >= 0 && matches.item(i) !== this) {}\r\n\r\n          return i > -1;\r\n        };\r\n    }\r\n\r\n    // Set up a parent array\r\n    let parents = [];\r\n\r\n    // Push each parent element to the array\r\n    for (; elem && elem !== document; elem = elem.parentNode) {\r\n      if (selector) {\r\n        if (elem.matches(selector)) {\r\n          parents.push(elem);\r\n        }\r\n\r\n        continue;\r\n      }\r\n\r\n      parents.push(elem);\r\n    }\r\n\r\n    // Return our parent array\r\n    return parents;\r\n  }\r\n\r\n  static serializeForm(form) {\r\n    // Setup our serialized data\r\n    let serialized = [];\r\n\r\n    // Loop through each field in the form\r\n    for (let i = 0; i < form.elements.length; i++) {\r\n      let field = form.elements[i];\r\n\r\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n      if (\r\n        !field.name ||\r\n        field.disabled ||\r\n        field.type === 'file' ||\r\n        field.type === 'reset' ||\r\n        field.type === 'submit' ||\r\n        field.type === 'button'\r\n      )\r\n        continue;\r\n\r\n      // If a multi-select, get all selections\r\n      if (field.type === 'select-multiple') {\r\n        for (let n = 0; n < field.options.length; n++) {\r\n          if (!field.options[n].selected) continue;\r\n\r\n          serialized.push(\r\n            encodeURIComponent(field.name) +\r\n              '=' +\r\n              encodeURIComponent(field.options[n].value)\r\n          );\r\n        }\r\n      }\r\n\r\n      // Convert field data to a query string\r\n      else if (\r\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\r\n        field.checked\r\n      ) {\r\n        serialized.push(\r\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\r\n        );\r\n      }\r\n    }\r\n\r\n    return serialized.join('&');\r\n  }\r\n\r\n  static getFormData(form) {\r\n    // Setup our serialized data\r\n    let data = {};\r\n\r\n    // Loop through each field in the form\r\n    for (let i = 0; i < form.elements.length; i++) {\r\n      let field = form.elements[i];\r\n\r\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n      if (\r\n        !field.name ||\r\n        field.disabled ||\r\n        field.type === 'file' ||\r\n        field.type === 'reset' ||\r\n        field.type === 'submit' ||\r\n        field.type === 'button'\r\n      )\r\n        continue;\r\n\r\n      // If a multi-select, get all selections\r\n      if (field.type === 'select-multiple') {\r\n        for (let n = 0; n < field.options.length; n++) {\r\n          if (!field.options[n].selected) continue;\r\n\r\n          data[field.name] = field.options[n].value;\r\n        }\r\n      }\r\n\r\n      // Convert field data to a query string\r\n      else if (\r\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\r\n        field.checked\r\n      ) {\r\n        data[field.name] = field.value;\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  static getRandomID() {\r\n    // Generate unique IDs for use as pseudo-private/protected names.\r\n    // Similar in concept to\r\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\r\n    //\r\n    // The goals of this function are twofold:\r\n    //\r\n    // * Provide a way to generate a string guaranteed to be unique when compared\r\n    //   to other strings generated by this function.\r\n    // * Make the string complex enough that it is highly unlikely to be\r\n    //   accidentally duplicated by hand (this is key if you're using `ID`\r\n    //   as a private/protected name on an object).\r\n    //\r\n    // Use:\r\n    //\r\n    //     var privateName = ID();\r\n    //     var o = { 'public': 'foo' };\r\n    //     o[privateName] = 'bar';\r\n\r\n    // Math.random should be unique because of its seeding algorithm.\r\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\r\n    // after the decimal.\r\n\r\n    return (\r\n      '_' +\r\n      Math.random()\r\n        .toString(36)\r\n        .substr(2, 9)\r\n    );\r\n  }\r\n\r\n  static setCookie(cname, cvalue, exdays) {\r\n    const date = new Date();\r\n\r\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n\r\n    const expires = 'expires=' + date.toUTCString();\r\n\r\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\r\n  }\r\n\r\n  static getCookie(cname) {\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n\r\n    const cookie = decodedCookie\r\n      .split(';')\r\n      .filter(cookie => cookie.includes(cname))[0];\r\n\r\n    return cookie || '';\r\n  }\r\n\r\n  static isInViewport(element) {\r\n    const heightViewport =\r\n      window.innerHeight || document.documentElement.clientHeight;\r\n\r\n    const widthViewport =\r\n      window.innerWidth || document.documentElement.clientWidth;\r\n\r\n    const { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return (\r\n      top >= 0 &&\r\n      left >= 0 &&\r\n      bottom <= heightViewport &&\r\n      right <= widthViewport\r\n    );\r\n  }\r\n\r\n  static removeAccents(str) {\r\n    const mapAccents = {\r\n      a: 'á|à|ã|â|À|Á|Ã|Â',\r\n      e: 'é|è|ê|É|È|Ê',\r\n      i: 'í|ì|î|Í|Ì|Î',\r\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\r\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\r\n      c: 'ç|Ç',\r\n      n: 'ñ|Ñ',\r\n    };\r\n\r\n    for (let pattern in mapAccents) {\r\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\r\n    }\r\n\r\n    return str;\r\n  }\r\n}\r\n\r\nexport default Helper;\r\n","/* eslint no-console: 0 */\r\n\r\n/**\r\n * Logger Abstraction class\r\n */\r\nclass Logger {\r\n  /**\r\n   * Logger constructor\r\n   * @param {string} logName Application name to log\r\n   */\r\n  constructor(logName = 'B8ONE Logger Component') {\r\n    this.logName = logName;\r\n  }\r\n\r\n  /**\r\n   * Log error message\r\n   * @param {*} message - Message text\r\n   * @param {*} errorObj - Message object\r\n   */\r\n  error(message = '', errorObj = {}) {\r\n    console.error(message, errorObj);\r\n  }\r\n\r\n  /**\r\n   * Log information message\r\n   * @param {*} message - Message text\r\n   */\r\n  info(message = '') {\r\n    console.info(message);\r\n  }\r\n\r\n  /**\r\n   * Log warning message\r\n   * @param {*} message - Message text\r\n   */\r\n  warning(message = '') {\r\n    console.warn(this.logName, message);\r\n  }\r\n\r\n  /**\r\n   * Generic log\r\n   * @param {String} message - log's message\r\n   */\r\n  log(message = '') {\r\n    console.log(message);\r\n  }\r\n\r\n  /**\r\n   * Generic log\r\n   * @param {String} message - log's message\r\n   * @param {*} object - object to be logged\r\n   */\r\n  log(message = '', object = {}) {\r\n    console.log(message, object);\r\n  }\r\n}\r\n\r\nexport default Logger;\r\n","/* eslint-disable max-len */\r\n\r\nimport { Ensure, Logger } from '../common';\r\nimport HttpClient from './b8one.httpClient';\r\n\r\n/**\r\n * Cart Abstraction class\r\n */\r\nclass CartService {\r\n  /**\r\n   * Cart constructor\r\n   */\r\n  constructor() {\r\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\r\n\r\n    this._logger = new Logger('Cart service');\r\n    this._httpClient = new HttpClient();\r\n  }\r\n\r\n  /**\r\n   * Get current cart\r\n   * @return {*} Cart object\r\n   */\r\n  async getCurrent() {\r\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\r\n  }\r\n\r\n  /**\r\n   * Add item to cart\r\n   * @param {*} skuId - Product sku Id (SKU)\r\n   * @param {*} productQuantity - Product Quantity\r\n   * @param {*} sellerId - Seller id\r\n   */\r\n  async add(skuId, productQuantity, sellerId = 1) {\r\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\r\n\r\n    if (!Ensure.isUndefined(skuId)) {\r\n      const current = await this.getCurrent();\r\n      const indexFound = current.items.findIndex(x => x.id === skuId);\r\n\r\n      if (indexFound > -1) {\r\n        productQuantity =\r\n          parseInt(productQuantity) +\r\n          parseInt(current.items[indexFound].quantity);\r\n      }\r\n\r\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n\r\n      const payload = {\r\n        orderItems: [\r\n          {\r\n            seller: sellerId.toString(),\r\n            quantity: parseInt(productQuantity),\r\n            id: skuId.toString(),\r\n          },\r\n        ],\r\n      };\r\n\r\n      return this._httpClient.patch(endpointUrl, payload);\r\n    }\r\n  }\r\n\r\n  async checkoutCRUD(skus) {\r\n    let { items } = await window.vtexjs.checkout.getOrderForm();\r\n\r\n    const skusCustomProducts = this.getCustomProducts(skus);\r\n\r\n    skus = skus.filter(sku => !sku.isCustom);\r\n    skus = [...skus, ...skusCustomProducts];\r\n\r\n    const skuToIgnore = [19, 698, 25, 26];\r\n\r\n    const indexToRemove = items.reduce((indexList, item, index) => {\r\n      const customProductSKUs = [25, 26];\r\n\r\n      if (customProductSKUs.includes(parseInt(item.id))) {\r\n        return [...indexList, index];\r\n      }\r\n\r\n      return indexList;\r\n    }, []);\r\n\r\n    if (indexToRemove.length > 0) {\r\n      const response = await this.removeMoreProducts(indexToRemove);\r\n\r\n      response && (items = response.items);\r\n    }\r\n\r\n    const productsToAdd = skus\r\n      .filter(sku => sku.quantity > 0)\r\n      .filter(sku => {\r\n        let index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        return index === -1 && sku.quantity > 0;\r\n      })\r\n      .map(sku => ({\r\n        quantity: sku.quantity,\r\n        seller: 1,\r\n        id: sku.skuId || sku.id,\r\n      }));\r\n\r\n    console.log('productsToAdd', productsToAdd);\r\n\r\n    const productsToUpdate = skus\r\n      .filter(sku => sku.quantity > 0)\r\n      .filter(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        if (index !== -1) {\r\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\r\n          const diffQuantity =\r\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\r\n\r\n          return sameSku && diffQuantity && sku.quantity > 0;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        return {\r\n          index,\r\n          quantity: sku.quantity,\r\n        };\r\n      });\r\n\r\n    console.log('productsToUpdate', productsToUpdate);\r\n\r\n    const productsToReplaceSKU = skus\r\n      .filter(\r\n        sku =>\r\n          sku.quantity > 0 &&\r\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\r\n      )\r\n      .filter(sku => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        if (index !== -1) {\r\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\r\n\r\n          return diffSku;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.productId) === parseInt(sku.productId)\r\n        );\r\n\r\n        const oldSKU = {\r\n          index,\r\n          seller: 1,\r\n          quantity: 0,\r\n        };\r\n\r\n        const newSKU = {\r\n          seller: 1,\r\n          id: sku.skuId,\r\n          quantity: sku.quantity,\r\n        };\r\n\r\n        return [oldSKU, newSKU];\r\n      })\r\n      .reduce((itemsList, current) => {\r\n        const [oldSKU, newSKU] = current;\r\n\r\n        return [...itemsList, oldSKU, newSKU];\r\n      }, []);\r\n\r\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\r\n\r\n    const productsToRemove = skus\r\n      .filter(sku => sku.quantity < 1)\r\n      .filter(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        if (index !== -1) {\r\n          return sku.quantity == 0;\r\n        }\r\n\r\n        return false;\r\n      })\r\n      .map(sku => {\r\n        const id = sku.skuId || sku.id;\r\n\r\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\r\n\r\n        return {\r\n          index,\r\n          quantity: 0,\r\n        };\r\n      });\r\n\r\n    console.log('productsToRemove', productsToRemove);\r\n\r\n    if (productsToUpdate[0]) {\r\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\r\n    }\r\n\r\n    if (productsToReplaceSKU[0]) {\r\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\r\n    }\r\n\r\n    if (productsToRemove[0]) {\r\n      await window.vtexjs.checkout.removeItems(productsToRemove);\r\n    }\r\n\r\n    if (productsToAdd[0]) {\r\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\r\n    }\r\n  }\r\n\r\n  getCustomProducts(skus) {\r\n    const customProducts = {};\r\n\r\n    skus\r\n      .filter(({ isCustom }) => isCustom === true)\r\n      .forEach(({ skuId, quantity, customProductItem }) => {\r\n        let currentCustomProduct = customProducts[skuId];\r\n\r\n        const customProductQuantity =\r\n          parseInt(customProductItem.quantity) * parseInt(quantity);\r\n\r\n        if (currentCustomProduct) {\r\n          const newQuantity =\r\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\r\n\r\n          currentCustomProduct = {\r\n            ...currentCustomProduct,\r\n            quantity: newQuantity,\r\n          };\r\n        } else {\r\n          currentCustomProduct = {\r\n            ...customProductItem,\r\n            quantity: customProductQuantity,\r\n            isCustom: true,\r\n          };\r\n        }\r\n\r\n        customProducts[skuId] = currentCustomProduct;\r\n      });\r\n\r\n    return Object.values(customProducts);\r\n  }\r\n\r\n  async getProductIndexInOrderForm(productId) {\r\n    const { items } = await this.getCurrent();\r\n\r\n    const index = items.findIndex(item => item.productId == productId);\r\n\r\n    if (index !== -1) return index;\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Remove item to cart\r\n   * @param {JSON} itemIndex - Product item index to be removed\r\n   */\r\n  async remove(itemIndex) {\r\n    const current = await this.getCurrent();\r\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n    const payload = {\r\n      orderItems: [\r\n        {\r\n          index: itemIndex,\r\n          quantity: 0,\r\n        },\r\n      ],\r\n      expectedOrderFormSections: ['items'],\r\n      noSplitItem: true,\r\n    };\r\n\r\n    await this._httpClient.patch(endpointUrl, payload);\r\n  }\r\n\r\n  /**\r\n   * Remove items of cart\r\n   * @param {Array} itemsIndex - Products items index to be removed\r\n   */\r\n  async removeMoreProducts(itemsIndex) {\r\n    const current = await this.getCurrent();\r\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\r\n    const payload = {\r\n      orderItems: itemsIndex.map(index => ({\r\n        index,\r\n        quantity: 0,\r\n      })),\r\n      expectedOrderFormSections: ['items'],\r\n      noSplitItem: true,\r\n    };\r\n\r\n    return await this._httpClient.patch(endpointUrl, payload);\r\n  }\r\n\r\n  async updateProduct(skuId, quantity, seller = 1) {\r\n    const newSKU = {\r\n      seller,\r\n      quantity,\r\n      id: skuId,\r\n    };\r\n\r\n    return await this.updateProducts([newSKU]);\r\n  }\r\n\r\n  async updateProducts(skus) {\r\n    const { items, orderFormId } = await this.getCurrent();\r\n\r\n    skus = skus\r\n      .map(({ id, quantity, seller }) => {\r\n        const index = items.findIndex(\r\n          item => parseInt(item.id) === parseInt(id)\r\n        );\r\n\r\n        return {\r\n          id,\r\n          index,\r\n          quantity,\r\n          seller: seller || 1,\r\n        };\r\n      })\r\n      .filter(sku => sku.index !== -1);\r\n\r\n    if (skus.length > 0) {\r\n      const payload = {\r\n        orderItems: skus,\r\n      };\r\n\r\n      return await this._httpClient.patch(\r\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\r\n        payload\r\n      );\r\n    }\r\n  }\r\n\r\n  async simulateOrderForm(postalCode, country = 'BRA') {\r\n    try {\r\n      await vtexjs.checkout.getOrderForm();\r\n\r\n      const orderForm = await vtexjs.checkout.calculateShipping({\r\n        postalCode,\r\n        country,\r\n      });\r\n\r\n      return orderForm;\r\n    } catch (error) {\r\n      console.error('Error in simulateOrderForm', error);\r\n    }\r\n  }\r\n\r\n  async simulateShipping(items, postalCode, country = 'BRA') {\r\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\r\n      items,\r\n      postalCode,\r\n      country\r\n    );\r\n\r\n    return orderFormSimulated;\r\n  }\r\n\r\n  async updateCheckoutTransporterSLA(logisticsInfo) {\r\n    await vtexjs.checkout.getOrderForm();\r\n\r\n    const { shippingData } = vtexjs.checkout.orderForm;\r\n\r\n    shippingData.logisticsInfo = logisticsInfo;\r\n\r\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\r\n  }\r\n\r\n  async updateCheckoutAddress(address) {\r\n    console.log(address);\r\n    await vtexjs.checkout.getOrderForm();\r\n\r\n    const { shippingData } = vtexjs.checkout.orderForm;\r\n\r\n    shippingData.availableAddresses = [\r\n      {\r\n        ...shippingData.address,\r\n        ...address,\r\n      },\r\n    ];\r\n\r\n    shippingData.selectedAddresses = [\r\n      {\r\n        ...shippingData.address,\r\n        ...address,\r\n      },\r\n    ];\r\n\r\n    shippingData.address = {\r\n      ...shippingData.address,\r\n      ...address,\r\n    };\r\n\r\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\r\n  }\r\n\r\n  async setMultipleCustomDataFields(appName, fields) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\r\n\r\n    try {\r\n      return await this._httpClient.put(endpoint, fields);\r\n    } catch (error) {\r\n      console.error('setMultipleCustomDataFields', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\r\n\r\n    const payload = { value: appFieldValue };\r\n\r\n    try {\r\n      return await this._httpClient.put(endpoint, payload);\r\n    } catch (error) {\r\n      console.error('setSingleCustomDataField', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  async removeSingleCustomDataField(appName, appFieldName) {\r\n    const { orderFormId } = await this.getCurrent();\r\n\r\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\r\n\r\n    const payload = { value: null };\r\n\r\n    try {\r\n      return await this._httpClient.delete(endpoint, payload);\r\n    } catch (error) {\r\n      console.error('removeSingleCustomDataField', error);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Cart's payload method factory\r\n   * @param {*} skuId - Product Id (SKU)\r\n   * @param {*} productQuantity - Product Quantity\r\n   * @param {*} sellerId - Seller id\r\n   * @return {JSON} cart paylod\r\n   */\r\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\r\n    return {\r\n      id: skuId,\r\n      quantity: productQuantity,\r\n      seller: sellerId,\r\n    };\r\n  }\r\n}\r\n\r\nexport default CartService;\r\n","import fetch from 'unfetch';\r\nimport { Ensure, Logger } from '../common';\r\n\r\n/**\r\n * HttpClient Abstraction class\r\n */\r\nclass HttpClient {\r\n  /**\r\n   * HttpClient constructor\r\n   */\r\n  constructor() {\r\n    this._logger = new Logger('httpClient');\r\n  }\r\n\r\n  /**\r\n   * Get\r\n   * @param {String} endpointUrl\r\n   * @return {Promise}\r\n   */\r\n  get(endpointUrl) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'GET');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete\r\n   * @param {String} endpointUrl\r\n   * @return {Promise}\r\n   */\r\n  delete(endpointUrl) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'DELETE');\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  post(endpointUrl, payload = {}) {\r\n    if (!Ensure.isUndefined(endpointUrl)) {\r\n      return this._execute(endpointUrl, 'POST', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  put(endpointUrl, payload) {\r\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\r\n      return this._execute(endpointUrl, 'PUT', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} endpointUrl\r\n   * @param {JSON} payload\r\n   * @return {Promise}\r\n   */\r\n  patch(endpointUrl, payload) {\r\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\r\n      return this._execute(endpointUrl, 'PATCH', payload);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} endpointUrl\r\n   * @param {String} httpVerb\r\n   * @param {Object} payload\r\n   * @return {Promise}\r\n   */\r\n  _execute(endpointUrl, httpVerb, payload) {\r\n    let header = {\r\n      method: httpVerb,\r\n      headers: {\r\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\r\n        // 'Content-Type': 'application/json',\r\n        accept: 'application/vnd.vtex.masterdata.v10+json',\r\n        'content-type': 'application/json; charset=utf-8',\r\n      },\r\n    };\r\n\r\n    if (payload) {\r\n      header['body'] = JSON.stringify(payload);\r\n    }\r\n\r\n    return fetch(endpointUrl, header)\r\n      .then(this.validateResponse)\r\n      .then(this.parseResponseToJson)\r\n      .then(data => {\r\n        return data;\r\n      })\r\n      .catch(error => {\r\n        this._logger.log('Request succeeded with JSON response', error);\r\n        return error;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Parse response data to json object\r\n   * @param {*} response - Request response\r\n   * @return {JSON} json data\r\n   */\r\n  async parseResponseToJson(response) {\r\n    if (!response.ok) {\r\n      return response;\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  /**\r\n   * Response validation\r\n   * @param {*} response\r\n   * @return {Promise} promise result\r\n   */\r\n  validateResponse(response) {\r\n    if (response.ok) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error(response.statusText));\r\n    }\r\n  }\r\n}\r\n\r\nexport default HttpClient;\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/js/store/mobile/insurance-change/index.js","webpack:///./src/js/general/utils/currency/index.js","webpack:///./src/js/general/components/b8one.modalComponent.js","webpack:///./src/js/general/utils/skusToIgnore/index.js","webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/general/services/b8one.httpClient.js"],"names":["InsuranceChangePage","product","productOldInsuranceValue","productId","dataset","productInsuranceInput","querySelector","value","addEventListener","target","newTotalInsuranceQuantity","totalInsurance","subtract","add","totalOrderSummary","lastInsurancePercentage","valueInsurance","totalInsuranceElement","textContent","format","multiply","products","REAL","totalInsuranceFormatted","setTotalOrderSummaryElement","setValueInsuranceElement","this","cartService","CartService","window","totalTransporterSelected","totalTransporterSelectedElement","rejectInsuranceModalInstance","orderForm","orderDetails","init","location","pathname","setHandledButtonSkipStepClick","getCurrent","orderID","search","match","fetch","json","data","setTotalTransporterSelected","getProductstInOrderForm","getProductsInCustomData","mapProducts","getInsuranceDataInCustomData","setTotalOrderSummary","setValueInsurance","setTotalInsuranceElement","setInputMasks","updateProducts","setHandledProducts","setHandledButtonSaveClick","checkTransporterSelected","initRejectInsuranceModal","setHandledButtonRejectInsuranceClick","setHandledButtonConfirmRejectInsuranceClick","customData","customApps","filter","customApp","id","forEach","courier_data","fields","priceFormatted","JSON","parse","deliveryTypeSelected","transporter","nome","slaName","assign","document","querySelectorAll","setHandledProduct","items","insuranceItemsTable","productsHTML","SKUS_TO_IGNORE","includes","parseInt","map","name","imageUrl","skuName","quantity","productName","replace","createProduct","description","innerHTML","join","products_data","customProducts","isCustom","productData","createCustomProduct","Object","values","customAttributes","createProducts","IMask","mask","blocks","num","Number","thousandsSeparator","scale","buttonSave","buttonNext","dispatchEvent","initSaveCustomDataEvent","saveData","endSaveCustomDataEvent","e","preventDefault","classList","toggle","total","entries","key","reduce","obj","insuranceFieldsForCustomData","stringify","insuranceSKU","seller","intValue","vtexjs","checkout","getOrderForm","addToCart","updateInsuranceSKUPrice","updateCheckoutAddress","Promise","all","setMultipleCustomDataFields","setSingleCustomDataField","console","log","index","insuranceSKUIndex","remove","removeSingleCustomDataField","error","skipInsuranceStep","buttonCloseModal","buttonConfirm","rejectInsuranceModal","ModalComponent","modal","modalShowCLass","close","setTimeout","show","noContractInsurance","price","orderFormId","itemIndex","findIndex","endpoint","method","body","headers","Accept","selectedAddresses","shippingData","currency","symbol","precision","separator","decimal","formatWithSymbol","openModalCallback","closeModalCallback","isOpen","openCallback","Function","closeCallback","Element","Ensure","undefined","input","isUndefined","checkValidity","object","props","getMissingProps","length","missingProps","prop","push","Helper","_logger","Logger","language","navigator","userLanguage","currencyLocale","minimumFractionDigits","elem","selector","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","i","item","parents","parentNode","form","serialized","elements","field","disabled","type","n","options","selected","encodeURIComponent","checked","Math","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","split","element","heightViewport","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","pattern","mapAccents","a","o","u","c","RegExp","toFixed","max","Intl","NumberFormat","style","logName","message","errorObj","info","warn","_VTEX_API_ENDPOINT","_httpClient","HttpClient","get","skuId","productQuantity","sellerId","current","indexFound","x","endpointUrl","payload","orderItems","patch","skus","skusCustomProducts","getCustomProducts","sku","skuToIgnore","indexToRemove","indexList","removeMoreProducts","response","productsToAdd","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","customProductItem","currentCustomProduct","customProductQuantity","newQuantity","expectedOrderFormSections","noSplitItem","itemsIndex","postalCode","country","calculateShipping","simulateShipping","orderFormSimulated","logisticsInfo","sendAttachment","address","availableAddresses","appName","put","appFieldName","appFieldValue","delete","_execute","httpVerb","header","accept","then","validateResponse","parseResponseToJson","catch","ok","resolve","reject","Error","statusText"],"mappings":"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","file":"js/b8one.mobile.insurance-change-1.js","sourcesContent":["// Dependencies\nimport IMask from 'imask';\n\n// Utils\nimport { REAL } from 'Utils/currency/';\nimport SKUS_TO_IGNORE from 'Utils/skusToIgnore';\n\n// Services\nimport CartService from 'Services/b8one.cartService.js';\n\nimport ModalComponent from 'Components/b8one.modalComponent.js';\n\nclass InsuranceChangePage {\n  constructor() {\n    this.products = {};\n    this.cartService = new CartService();\n\n    window.InsuranceChangePage = this;\n\n    this.valueInsurance = REAL('R$ 0,00');\n    this.totalInsurance = REAL('R$ 0,00');\n    this.totalOrderSummary = REAL('R$ 0,00');\n    this.totalTransporterSelected = REAL('R$ 0,00');\n\n    this.totalInsuranceElement;\n    this.totalTransporterSelectedElement;\n\n    this.lastInsurancePercentage = 'R$ 0,00';\n\n    this.rejectInsuranceModalInstance = null;\n\n    this.orderForm = {};\n    this.orderDetails = {};\n\n    this.init();\n  }\n\n  async init() {\n    if (location.pathname !== '/_secure/seguro/contratacao') {\n      this.setHandledButtonSkipStepClick();\n    }\n\n    this.orderForm = await this.cartService.getCurrent();\n\n    if (location.pathname === '/_secure/seguro/contratacao') {\n      const orderID = location.search.match(/[\\d\\-\\d{2}]+/g)[0];\n\n      const data = await (await fetch(`/api/oms/pvt/orders/${orderID}`)).json();\n\n      this.orderForm = data;\n      this.orderDetails = data;\n    }\n\n    if (\n      location.pathname === '/seguro' ||\n      location.pathname === '/_secure/seguro/contratacao'\n    ) {\n      this.setTotalTransporterSelected();\n\n      this.getProductstInOrderForm();\n      this.getProductsInCustomData();\n\n      this.mapProducts();\n\n      this.getInsuranceDataInCustomData();\n\n      this.setTotalOrderSummary();\n      this.setValueInsurance();\n\n      this.setTotalInsuranceElement();\n      this.setTotalOrderSummaryElement();\n      this.setValueInsuranceElement();\n\n      this.setInputMasks();\n      this.updateProducts();\n\n      this.setHandledProducts();\n\n      this.setHandledButtonSaveClick();\n    } else {\n      this.checkTransporterSelected();\n      this.initRejectInsuranceModal();\n      this.setHandledButtonRejectInsuranceClick();\n      this.setHandledButtonConfirmRejectInsuranceClick();\n    }\n  }\n\n  setTotalTransporterSelected() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'selectedcourier')\n      .forEach(customApp => {\n        const { courier_data } = customApp.fields;\n\n        const transporter = JSON.parse(courier_data);\n\n        const { priceFormatted } = transporter.deliveryTypeSelected;\n\n        this.totalTransporterSelected = this.totalTransporterSelected.add(\n          priceFormatted\n        );\n      });\n  }\n\n  checkTransporterSelected() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'selectedcourier')\n      .forEach(customApp => {\n        const { courier_data } = customApp.fields;\n\n        const transporter = JSON.parse(courier_data);\n\n        const { slaName } = transporter.nome;\n\n        if (transporter.nome == 'Básico') {\n          window.location.assign('/resumo');\n        }\n      });\n  }\n\n  setTotalInsuranceElement() {\n    const totalInsuranceElement = document.querySelector('.js-total-insurance');\n\n    totalInsuranceElement.textContent = this.totalInsurance.format();\n\n    this.totalInsuranceElement = totalInsuranceElement;\n  }\n\n  setTotalOrderSummaryElement() {\n    const totalOrderSummaryElement = document.querySelector(\n      '.js-total-order-summary'\n    );\n\n    totalOrderSummaryElement.textContent = this.totalOrderSummary.format();\n  }\n\n  setTotalOrderSummary() {\n    this.totalOrderSummary = this.totalOrderSummary\n      .add(this.totalTransporterSelected.format())\n      .add(this.totalInsurance.multiply(0.01).format());\n  }\n\n  setValueInsurance() {\n    this.valueInsurance = this.valueInsurance.add(\n      this.totalInsurance.multiply(0.01).format()\n    );\n\n    this.lastInsurancePercentage = this.valueInsurance.format();\n  }\n\n  setValueInsuranceElement() {\n    const valueInsuranceElement = document.querySelector('.js-value-insurance');\n\n    valueInsuranceElement.textContent = this.valueInsurance.format();\n  }\n\n  mapProducts() {\n    const products = [...document.querySelectorAll('.product')];\n\n    products.forEach(product => {\n      const { productId } = product.dataset;\n\n      this.products[productId] = {\n        productId,\n        totalInsurance: 0,\n        totalInsuranceFormatted: 'R$ 0,00',\n      };\n    });\n  }\n\n  setHandledProduct = product => {\n    const { productId } = product.dataset;\n    const productInsuranceInput = product.querySelector('.product__value');\n\n    if (productInsuranceInput) {\n      let productOldInsuranceValue = productInsuranceInput.value;\n\n      productInsuranceInput.addEventListener('input', ({ target }) => {\n        const { value } = target;\n\n        let newTotalInsuranceQuantity = this.totalInsurance\n          .subtract(productOldInsuranceValue)\n          .add(value);\n\n        this.totalOrderSummary = this.totalOrderSummary.subtract(\n          this.lastInsurancePercentage\n        );\n\n        this.valueInsurance = this.valueInsurance.subtract(\n          this.lastInsurancePercentage\n        );\n\n        this.totalInsuranceElement.textContent = newTotalInsuranceQuantity.format();\n\n        this.totalInsurance = newTotalInsuranceQuantity;\n\n        this.lastInsurancePercentage = this.totalInsurance\n          .multiply(0.01)\n          .format();\n\n        this.totalOrderSummary = this.totalOrderSummary.add(\n          this.lastInsurancePercentage\n        );\n\n        this.valueInsurance = this.valueInsurance.add(\n          this.lastInsurancePercentage\n        );\n\n        productOldInsuranceValue = value;\n\n        this.products[productId] = {\n          ...this.products[productId],\n          totalInsurance: REAL(value).value,\n          totalInsuranceFormatted: REAL(value).format(),\n        };\n\n        this.setTotalOrderSummaryElement();\n        this.setValueInsuranceElement();\n      });\n    }\n  };\n\n  setHandledProducts() {\n    const products = [...document.querySelectorAll('.product')];\n\n    products.forEach(this.setHandledProduct);\n  }\n\n  getProductstInOrderForm() {\n    const { items } = this.orderForm;\n\n    const insuranceItemsTable = document.querySelector(\n      '.insurance-items__table'\n    );\n\n    const productsHTML = items\n      .filter(({ id }) => !SKUS_TO_IGNORE.includes(parseInt(id)))\n      .map(({ name, imageUrl, productId, skuName, quantity }) => {\n        const productName = name.replace(skuName, '');\n        const description = '';\n\n        const productHTML = `\n          <div class=\"table__row table__row--hidden\">\n            ${this.createProduct({\n          imageUrl,\n          productId,\n          productName,\n          description,\n          quantity,\n        })}\n          </div>\n        `;\n\n        return productHTML;\n      });\n\n    insuranceItemsTable.innerHTML += productsHTML.join('');\n  }\n\n  getProductsInCustomData() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'selecteditems')\n      .map(customApp => {\n        const { products_data } = customApp.fields;\n        const products = JSON.parse(products_data);\n        const customProducts = products.filter(({ isCustom }) => isCustom);\n\n        const insuranceItemsTable = document.querySelector(\n          '.insurance-items__table'\n        );\n\n        const productsHTML = customProducts\n          .map(productData => {\n            const productHTML = `\n              <div class=\"table__row table__row--hidden\">\n                ${this.createCustomProduct(productData)}\n              </div>\n            `;\n\n            return productHTML;\n          })\n          .join('');\n\n        insuranceItemsTable.innerHTML += productsHTML;\n      });\n  }\n\n  updateProducts() {\n    Object.values(this.products).forEach(\n      ({ productId, totalInsuranceFormatted }) => {\n        const productElement = document.querySelector(\n          `[data-product-id='${productId}']`\n        );\n\n        const productInputElement = productElement.querySelector(\n          '.js-product-insurance-input'\n        );\n\n        productInputElement.value = totalInsuranceFormatted;\n      }\n    );\n  }\n\n  createProduct({ productId, productName, description, imageUrl, quantity }) {\n    const productHTML = `\n      <div \n        class=\"product\"\n        data-product-id=\"${productId}\"\n      >\n        <div class=\"product__container\">\n          <figure class=\"product__figure\">\n            <img \n              class=\"product__image\" \n              alt=\"${productName}\"\n              src=\"${imageUrl}\"\n            />\n          </figure>\n          \n          <div class=\"product__group\">\n            <h3 class=\"product__name\">${productName} (${quantity} un.)</h3>\n            \n            <div class=\"product__attributes\">\n              <p class=\"attributes__item\">${description}</p>\n            </div>\n          </div>\n        </div>\n      \n        <input \n          type=\"tel\"\n          placeholder=\"R$ 0,00\"\n          class=\"product__value js-product-insurance-input\"\n        />\n      </div>\n    `;\n\n    return productHTML;\n  }\n\n  createProducts(products) {\n    products = products\n      .map(product => {\n        return `\n        <div class=\"table__row\">\n          ${this.createProduct(product)}\n        </div>\n      `;\n      })\n      .join('');\n\n    return products;\n  }\n\n  createCustomProduct(productData) {\n    const { quantity, customAttributes, productId } = productData;\n\n    const customProduct = `\n      <div \n        class=\"product\"\n        data-product-quantity=\"${quantity}\"\n        data-product-id=\"${productId}\"\n      >\n        <div class=\"product__container\">\n          <div class=\"product__icon-container\">\n            <i class=\"far fa-box product__icon\"></i>\n          </div>\n          \n          <div class=\"product__group\">\n            <h3 class=\"product__name\">\n              ${customAttributes['product-name']} (${quantity} un.)\n            </h3>\n            \n            <div class=\"product__attributes\">\n              <p class=\"attributes__item\">\n                ${customAttributes['product-height']}cm x \n                ${customAttributes['product-width']}cm x \n                ${customAttributes['product-depth']}cm\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <input \n          type=\"tel\"\n          placeholder=\"R$ 0,00\"\n          class=\"product__value js-product-insurance-input\"\n        />\n      </div>\n    `;\n\n    return customProduct;\n  }\n\n  addProductsToDOM() {\n    const insuranceItemsTable = document.querySelector(\n      '.insurance-items__table'\n    );\n\n    insuranceItemsTable.innerHTML += this.createProducts();\n  }\n\n  setInputMasks() {\n    [...document.querySelectorAll('.js-product-insurance-input')].forEach(\n      productInsuranceInput => {\n        IMask(productInsuranceInput, {\n          mask: 'R$ num',\n          blocks: {\n            num: {\n              // nested masks are available!\n              mask: Number,\n              thousandsSeparator: '.',\n              scale: 2,\n            },\n          },\n        });\n      }\n    );\n  }\n\n  setHandledButtonSaveClick() {\n    const buttonSave = document.querySelector('.js-button-save');\n    const buttonNext = document.querySelector('.footer__buttom-submit');\n\n    buttonSave.addEventListener('click', async () => {\n      document.dispatchEvent(window.initSaveCustomDataEvent);\n\n      await this.saveData();\n\n      document.dispatchEvent(window.endSaveCustomDataEvent);\n    });\n\n    buttonNext &&\n      buttonNext.addEventListener('click', async e => {\n        e.preventDefault();\n        buttonNext.classList.toggle('js-loading');\n\n        await this.saveData();\n\n        buttonNext.classList.toggle('js-loading');\n\n        if (location.pathname === '/_secure/seguro/contratacao') {\n          window.location.assign('/checkout/#/payment');\n        } else {\n          window.location.assign('/resumo');\n        }\n      });\n  }\n\n  getInsuranceDataInCustomData() {\n    const { customData } = this.orderForm;\n\n    if (!customData) return;\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'insurance')\n      .forEach(customApp => {\n        let { items, total } = customApp.fields;\n\n        items = ['skipped', 'none'].includes(items) ? items : JSON.parse(items);\n\n        if (items && !['skipped', 'none'].includes(items)) {\n          items = Object.entries(items)\n            .filter(([key, value]) => key in this.products)\n            .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\n\n          this.products = {\n            ...this.products,\n            ...items,\n          };\n        }\n\n        if (total) {\n          this.totalInsurance = REAL(total);\n        }\n      });\n  }\n\n  async saveData() {\n    try {\n      const insuranceFieldsForCustomData = {\n        items: JSON.stringify(this.products),\n        total: this.totalInsurance.format(),\n      };\n\n      const insuranceSKU = {\n        id: 35,\n        quantity: 1,\n        seller: '1',\n      };\n\n      if (this.totalInsurance.intValue > 0) {\n        await window.vtexjs.checkout.getOrderForm();\n        this.orderForm = await window.vtexjs.checkout.addToCart(\n          [insuranceSKU],\n          null\n        );\n\n        await this.updateInsuranceSKUPrice(\n          this.totalInsurance.multiply(0.01).intValue\n        );\n      }\n\n      if (location.pathname === '/_secure/seguro/contratacao') {\n        await this.updateCheckoutAddress();\n      }\n\n      await Promise.all([\n        this.cartService.setMultipleCustomDataFields(\n          'insurance',\n          insuranceFieldsForCustomData\n        ),\n        this.cartService.setSingleCustomDataField(\n          'orderinfo',\n          'current_step',\n          'insurance-change-2'\n        ),\n      ]);\n    } catch (error) {\n      console.log('saveData', error);\n    }\n  }\n\n  async skipInsuranceStep() {\n    try {\n      let insuranceSKUIndex;\n\n      this.orderForm.items.forEach(({ id }, index) => {\n        if (parseInt(id) === 35) {\n          insuranceSKUIndex = index;\n        }\n      });\n\n      if (insuranceSKUIndex) {\n        await this.cartService.remove(insuranceSKUIndex);\n      }\n\n      await Promise.all([\n        this.cartService.removeSingleCustomDataField('insurance', 'total'),\n        this.cartService.setSingleCustomDataField(\n          'insurance',\n          'items',\n          'skipped'\n        ),\n        this.cartService.setSingleCustomDataField(\n          'orderinfo',\n          'current_step',\n          'insurance-change-1'\n        ),\n      ]);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n    }\n\n    return;\n  }\n\n  async noContractInsurance() {\n    try {\n      let insuranceSKUIndex;\n\n      this.orderForm.items.forEach(({ id }, index) => {\n        if (parseInt(id) === 35) {\n          insuranceSKUIndex = index;\n        }\n      });\n\n      if (insuranceSKUIndex) {\n        await this.cartService.remove(insuranceSKUIndex);\n      }\n\n      await Promise.all([\n        this.cartService.removeSingleCustomDataField('insurance', 'total'),\n        this.cartService.setSingleCustomDataField('insurance', 'items', 'none'),\n        this.cartService.setSingleCustomDataField(\n          'orderinfo',\n          'current_step',\n          'insurance-change-1'\n        ),\n      ]);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n    }\n\n    return;\n  }\n\n  setHandledButtonSkipStepClick() {\n    const buttonSkipStep = document.querySelector('.js-button-later-contract');\n\n    buttonSkipStep.addEventListener('click', async e => {\n      e.preventDefault();\n\n      await this.skipInsuranceStep();\n\n      window.location.assign('/resumo');\n    });\n  }\n\n  initRejectInsuranceModal() {\n    const rejectInsuranceModal = document.querySelector(\n      '.reject-insurance-modal'\n    );\n\n    if (rejectInsuranceModal) {\n      this.rejectInsuranceModalInstance = new ModalComponent({\n        modal: rejectInsuranceModal,\n        modalShowCLass: 'wrapper-modal--show',\n      });\n\n      const buttonCloseModal = rejectInsuranceModal.querySelector(\n        '.modal__close'\n      );\n\n      const buttonConfirm = rejectInsuranceModal.querySelector(\n        '.button--primary'\n      );\n\n      buttonCloseModal.addEventListener('click', () => {\n        this.rejectInsuranceModalInstance.close();\n      });\n\n      buttonConfirm.addEventListener('click', () => {\n        buttonConfirm.classList.add('js-loading', 'button--disabled');\n\n        setTimeout(() => {\n          window.location.assign('/resumo');\n        }, 1500);\n      });\n    }\n  }\n\n  setHandledButtonRejectInsuranceClick() {\n    const buttonRejectInsurance = document.querySelector(\n      '.js-button-no-contract'\n    );\n\n    buttonRejectInsurance.addEventListener('click', e => {\n      e.preventDefault();\n\n      this.rejectInsuranceModalInstance.show();\n    });\n  }\n\n  setHandledButtonConfirmRejectInsuranceClick() {\n    const rejectInsuranceModal = document.querySelector(\n      '.reject-insurance-modal'\n    );\n\n    const buttonConfirm = rejectInsuranceModal.querySelector('.modal__button');\n\n    buttonConfirm.addEventListener('click', async e => {\n      e.preventDefault();\n\n      await this.noContractInsurance();\n\n      window.location.assign('/resumo');\n    });\n  }\n\n  async updateInsuranceSKUPrice(price) {\n    const { orderFormId } = this.orderForm;\n\n    const itemIndex = this.orderForm.items.findIndex(\n      ({ id }) => parseInt(id) === 35\n    );\n\n    if (itemIndex === -1) return;\n\n    const endpoint = `https://wcdlfckgi9.execute-api.us-east-2.amazonaws.com/v1/api/checkout/pub/orderform/${orderFormId}/items/${itemIndex}/price`;\n\n    await fetch(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify({\n        price,\n      }),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n  }\n\n  async updateCheckoutAddress() {\n    const { selectedAddresses } = this.orderDetails.shippingData;\n\n    await this.cartService.updateCheckoutAddress(selectedAddresses[0]);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new InsuranceChangePage();\n});\n","import currency from 'currency.js';\n\nconst REAL = value =>\n  currency(value, {\n    symbol: 'R$ ',\n    precision: 2,\n    separator: '.',\n    decimal: ',',\n    formatWithSymbol: true,\n  });\n\nexport { REAL };\n","/*\n  *\n  * Author: Enrique Mora <enriquebeta7@gmail.com>\n  *\n*/\n\nexport default class ModalComponent {\n\t/**\n\t * @param  { Element | String } modal\n\t * @param  { String } modalShowCLass\n\t * @param  { Function } openModalCallback\n\t * @param  { Function } closeModalCallback\n   * @requires modal\n\t */\n\tconstructor({\n\t\tmodal,\n\t\tmodalShowCLass,\n\t\topenModalCallback,\n\t\tcloseModalCallback,\n\t}) {\n\t\tthis.isOpen = false;\n\t\tthis.modalShowCLass = modalShowCLass || 'show';\n\t\tthis.openCallback = openModalCallback || new Function();\n\t\tthis.closeCallback = closeModalCallback || new Function();\n\t\tthis.modal =\n\t\t\tmodal instanceof Element ? modal : document.querySelector(modal);\n\t}\n\n\tshow() {\n\t\t!this.isOpen && this.modal.classList.add(this.modalShowCLass);\n\t\tthis.isOpen = true;\n\n\t\tthis.openCallback(this);\n\t}\n\n\tclose() {\n\t\tthis.isOpen && this.modal.classList.remove(this.modalShowCLass);\n\t\tthis.isOpen = false;\n\n\t\tthis.closeCallback(this);\n\t}\n}\n","/**\n ** SKU IDs to ignore.\n *? IDs 19 and 698 are lifting products.\n *? IDs 25 and 26 are custom products.\n *? ID 33 is storage product.\n *? ID 35 is insurance sku.\n *? ID 696 is additional weight sku.\n *? ID 699 is disassembly and assembly sku.\n */\nexport default [19, 698, 25, 26, 33, 35, 696, 699];\n","/**\n * Ensure Abstraction class\n */\nclass Ensure {\n  /**\n   * Ensure value is Undefined\n   * @param {*} value Value to be validated\n   * @return {boolean}\n   */\n  static isUndefined(value = undefined) {\n    return typeof value === 'undefined' ||\n      value === null ||\n      value === '' ||\n      value === {} ||\n      value === [];\n    // || JSON.stringify(value) === JSON.stringify({});\n  }\n\n  /**\n   * Ensure Input validity\n   * @param {*} input to validate\n   * @return {boolean} true if is valid\n   */\n  static isInputValid(input) {\n    return !this.isUndefined(input) && input.checkValidity();\n  }\n\n  /**\n   * Verify if object has properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Boolean} True if object has all properties\n   */\n  static hasProps(object, props) {\n    const missingPropsResult = this.getMissingProps(object, props);\n    return missingPropsResult.length <= 0;\n  }\n\n  /**\n   * Get Object missing properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Array} missing properties\n   */\n  static getMissingProps(object, props) {\n    let missingProps = [];\n    [...props].forEach((prop) => {\n      const result = prop in object;\n      if (!result) {\n        missingProps.push(prop);\n      }\n    });\n\n    return missingProps;\n  }\n}\n\nexport default Ensure;\n","/* eslint-disable max-len */\nimport { Logger } from './';\n\n/**\n * Helper Abstraction class\n */\nclass Helper {\n  /**\n   * Helper constructor\n   * @param {*} props\n   */\n  constructor(props) {\n    this._logger = new Logger('Ensure');\n    this.props = props || {\n      language: navigator.language || navigator.userLanguage,\n      currency: 'BRL',\n      currencyLocale: 'pt-br',\n      minimumFractionDigits: 2,\n    };\n  }\n\n  /**\n   * format currency\n   * @param {*} value\n   * @param {*} minimumFractionDigits\n   * @return {*}\n   */\n  formatPrice(value) {\n    value = value / 100;\n    value = (value * 1).toFixed(\n      Math.max(0, ~~this.props.minimumFractionDigits)\n    );\n\n    return new Intl.NumberFormat(this.props.currencyLocale, {\n      style: 'currency',\n      currency: this.props.currency,\n      minimumFractionDigits: this.props.minimumFractionDigits,\n    }).format(value);\n  }\n\n  static getParents(elem, selector) {\n    // Element.matches() polyfill\n    if (!Element.prototype.matches) {\n      Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\n              s\n            ),\n            i = matches.length;\n\n          while (--i >= 0 && matches.item(i) !== this) {}\n\n          return i > -1;\n        };\n    }\n\n    // Set up a parent array\n    let parents = [];\n\n    // Push each parent element to the array\n    for (; elem && elem !== document; elem = elem.parentNode) {\n      if (selector) {\n        if (elem.matches(selector)) {\n          parents.push(elem);\n        }\n\n        continue;\n      }\n\n      parents.push(elem);\n    }\n\n    // Return our parent array\n    return parents;\n  }\n\n  static serializeForm(form) {\n    // Setup our serialized data\n    let serialized = [];\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          serialized.push(\n            encodeURIComponent(field.name) +\n              '=' +\n              encodeURIComponent(field.options[n].value)\n          );\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        serialized.push(\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\n        );\n      }\n    }\n\n    return serialized.join('&');\n  }\n\n  static getFormData(form) {\n    // Setup our serialized data\n    let data = {};\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          data[field.name] = field.options[n].value;\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        data[field.name] = field.value;\n      }\n    }\n\n    return data;\n  }\n\n  static getRandomID() {\n    // Generate unique IDs for use as pseudo-private/protected names.\n    // Similar in concept to\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\n    //\n    // The goals of this function are twofold:\n    //\n    // * Provide a way to generate a string guaranteed to be unique when compared\n    //   to other strings generated by this function.\n    // * Make the string complex enough that it is highly unlikely to be\n    //   accidentally duplicated by hand (this is key if you're using `ID`\n    //   as a private/protected name on an object).\n    //\n    // Use:\n    //\n    //     var privateName = ID();\n    //     var o = { 'public': 'foo' };\n    //     o[privateName] = 'bar';\n\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n\n    return (\n      '_' +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  static setCookie(cname, cvalue, exdays) {\n    const date = new Date();\n\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\n\n    const expires = 'expires=' + date.toUTCString();\n\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\n  }\n\n  static getCookie(cname) {\n    const decodedCookie = decodeURIComponent(document.cookie);\n\n    const cookie = decodedCookie\n      .split(';')\n      .filter(cookie => cookie.includes(cname))[0];\n\n    return cookie || '';\n  }\n\n  static isInViewport(element) {\n    const heightViewport =\n      window.innerHeight || document.documentElement.clientHeight;\n\n    const widthViewport =\n      window.innerWidth || document.documentElement.clientWidth;\n\n    const { top, right, bottom, left } = element.getBoundingClientRect();\n\n    return (\n      top >= 0 &&\n      left >= 0 &&\n      bottom <= heightViewport &&\n      right <= widthViewport\n    );\n  }\n\n  static removeAccents(str) {\n    const mapAccents = {\n      a: 'á|à|ã|â|À|Á|Ã|Â',\n      e: 'é|è|ê|É|È|Ê',\n      i: 'í|ì|î|Í|Ì|Î',\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n      c: 'ç|Ç',\n      n: 'ñ|Ñ',\n    };\n\n    for (let pattern in mapAccents) {\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\n    }\n\n    return str;\n  }\n}\n\nexport default Helper;\n","/* eslint no-console: 0 */\n\n/**\n * Logger Abstraction class\n */\nclass Logger {\n  /**\n   * Logger constructor\n   * @param {string} logName Application name to log\n   */\n  constructor(logName = 'B8ONE Logger Component') {\n    this.logName = logName;\n  }\n\n  /**\n   * Log error message\n   * @param {*} message - Message text\n   * @param {*} errorObj - Message object\n   */\n  error(message = '', errorObj = {}) {\n    console.error(message, errorObj);\n  }\n\n  /**\n   * Log information message\n   * @param {*} message - Message text\n   */\n  info(message = '') {\n    console.info(message);\n  }\n\n  /**\n   * Log warning message\n   * @param {*} message - Message text\n   */\n  warning(message = '') {\n    console.warn(this.logName, message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   */\n  log(message = '') {\n    console.log(message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   * @param {*} object - object to be logged\n   */\n  log(message = '', object = {}) {\n    console.log(message, object);\n  }\n}\n\nexport default Logger;\n","/* eslint-disable max-len */\n\nimport { Ensure, Logger } from '../common';\nimport HttpClient from './b8one.httpClient';\n\n/**\n * Cart Abstraction class\n */\nclass CartService {\n  /**\n   * Cart constructor\n   */\n  constructor() {\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\n\n    this._logger = new Logger('Cart service');\n    this._httpClient = new HttpClient();\n  }\n\n  /**\n   * Get current cart\n   * @return {*} Cart object\n   */\n  async getCurrent() {\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\n  }\n\n  /**\n   * Add item to cart\n   * @param {*} skuId - Product sku Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   */\n  async add(skuId, productQuantity, sellerId = 1) {\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\n\n    if (!Ensure.isUndefined(skuId)) {\n      const current = await this.getCurrent();\n      const indexFound = current.items.findIndex(x => x.id === skuId);\n\n      if (indexFound > -1) {\n        productQuantity =\n          parseInt(productQuantity) +\n          parseInt(current.items[indexFound].quantity);\n      }\n\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n\n      const payload = {\n        orderItems: [\n          {\n            seller: sellerId.toString(),\n            quantity: parseInt(productQuantity),\n            id: skuId.toString(),\n          },\n        ],\n      };\n\n      return this._httpClient.patch(endpointUrl, payload);\n    }\n  }\n\n  async checkoutCRUD(skus) {\n    let { items } = await window.vtexjs.checkout.getOrderForm();\n\n    const skusCustomProducts = this.getCustomProducts(skus);\n\n    skus = skus.filter(sku => !sku.isCustom);\n    skus = [...skus, ...skusCustomProducts];\n\n    const skuToIgnore = [19, 698, 25, 26];\n\n    const indexToRemove = items.reduce((indexList, item, index) => {\n      const customProductSKUs = [25, 26];\n\n      if (customProductSKUs.includes(parseInt(item.id))) {\n        return [...indexList, index];\n      }\n\n      return indexList;\n    }, []);\n\n    if (indexToRemove.length > 0) {\n      const response = await this.removeMoreProducts(indexToRemove);\n\n      response && (items = response.items);\n    }\n\n    const productsToAdd = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        let index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        return index === -1 && sku.quantity > 0;\n      })\n      .map(sku => ({\n        quantity: sku.quantity,\n        seller: 1,\n        id: sku.skuId || sku.id,\n      }));\n\n    console.log('productsToAdd', productsToAdd);\n\n    const productsToUpdate = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\n          const diffQuantity =\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\n\n          return sameSku && diffQuantity && sku.quantity > 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: sku.quantity,\n        };\n      });\n\n    console.log('productsToUpdate', productsToUpdate);\n\n    const productsToReplaceSKU = skus\n      .filter(\n        sku =>\n          sku.quantity > 0 &&\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\n      )\n      .filter(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        if (index !== -1) {\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\n\n          return diffSku;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        const oldSKU = {\n          index,\n          seller: 1,\n          quantity: 0,\n        };\n\n        const newSKU = {\n          seller: 1,\n          id: sku.skuId,\n          quantity: sku.quantity,\n        };\n\n        return [oldSKU, newSKU];\n      })\n      .reduce((itemsList, current) => {\n        const [oldSKU, newSKU] = current;\n\n        return [...itemsList, oldSKU, newSKU];\n      }, []);\n\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\n\n    const productsToRemove = skus\n      .filter(sku => sku.quantity < 1)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          return sku.quantity == 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: 0,\n        };\n      });\n\n    console.log('productsToRemove', productsToRemove);\n\n    if (productsToUpdate[0]) {\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\n    }\n\n    if (productsToReplaceSKU[0]) {\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\n    }\n\n    if (productsToRemove[0]) {\n      await window.vtexjs.checkout.removeItems(productsToRemove);\n    }\n\n    if (productsToAdd[0]) {\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\n    }\n  }\n\n  getCustomProducts(skus) {\n    const customProducts = {};\n\n    skus\n      .filter(({ isCustom }) => isCustom === true)\n      .forEach(({ skuId, quantity, customProductItem }) => {\n        let currentCustomProduct = customProducts[skuId];\n\n        const customProductQuantity =\n          parseInt(customProductItem.quantity) * parseInt(quantity);\n\n        if (currentCustomProduct) {\n          const newQuantity =\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\n\n          currentCustomProduct = {\n            ...currentCustomProduct,\n            quantity: newQuantity,\n          };\n        } else {\n          currentCustomProduct = {\n            ...customProductItem,\n            quantity: customProductQuantity,\n            isCustom: true,\n          };\n        }\n\n        customProducts[skuId] = currentCustomProduct;\n      });\n\n    return Object.values(customProducts);\n  }\n\n  async getProductIndexInOrderForm(productId) {\n    const { items } = await this.getCurrent();\n\n    const index = items.findIndex(item => item.productId == productId);\n\n    if (index !== -1) return index;\n\n    return;\n  }\n\n  /**\n   * Remove item to cart\n   * @param {JSON} itemIndex - Product item index to be removed\n   */\n  async remove(itemIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: [\n        {\n          index: itemIndex,\n          quantity: 0,\n        },\n      ],\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  /**\n   * Remove items of cart\n   * @param {Array} itemsIndex - Products items index to be removed\n   */\n  async removeMoreProducts(itemsIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: itemsIndex.map(index => ({\n        index,\n        quantity: 0,\n      })),\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    return await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  async updateProduct(skuId, quantity, seller = 1) {\n    const newSKU = {\n      seller,\n      quantity,\n      id: skuId,\n    };\n\n    return await this.updateProducts([newSKU]);\n  }\n\n  async updateProducts(skus) {\n    const { items, orderFormId } = await this.getCurrent();\n\n    skus = skus\n      .map(({ id, quantity, seller }) => {\n        const index = items.findIndex(\n          item => parseInt(item.id) === parseInt(id)\n        );\n\n        return {\n          id,\n          index,\n          quantity,\n          seller: seller || 1,\n        };\n      })\n      .filter(sku => sku.index !== -1);\n\n    if (skus.length > 0) {\n      const payload = {\n        orderItems: skus,\n      };\n\n      return await this._httpClient.patch(\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\n        payload\n      );\n    }\n  }\n\n  async simulateOrderForm(postalCode, country = 'BRA') {\n    try {\n      await vtexjs.checkout.getOrderForm();\n\n      const orderForm = await vtexjs.checkout.calculateShipping({\n        postalCode,\n        country,\n      });\n\n      return orderForm;\n    } catch (error) {\n      console.error('Error in simulateOrderForm', error);\n    }\n  }\n\n  async simulateShipping(items, postalCode, country = 'BRA') {\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\n      items,\n      postalCode,\n      country\n    );\n\n    return orderFormSimulated;\n  }\n\n  async updateCheckoutTransporterSLA(logisticsInfo) {\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.logisticsInfo = logisticsInfo;\n\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async updateCheckoutAddress(address) {\n    console.log(address);\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.availableAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.selectedAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.address = {\n      ...shippingData.address,\n      ...address,\n    };\n\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async setMultipleCustomDataFields(appName, fields) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\n\n    try {\n      return await this._httpClient.put(endpoint, fields);\n    } catch (error) {\n      console.error('setMultipleCustomDataFields', error);\n    }\n\n    return;\n  }\n\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: appFieldValue };\n\n    try {\n      return await this._httpClient.put(endpoint, payload);\n    } catch (error) {\n      console.error('setSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  async removeSingleCustomDataField(appName, appFieldName) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: null };\n\n    try {\n      return await this._httpClient.delete(endpoint, payload);\n    } catch (error) {\n      console.error('removeSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  /**\n   * Cart's payload method factory\n   * @param {*} skuId - Product Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   * @return {JSON} cart paylod\n   */\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\n    return {\n      id: skuId,\n      quantity: productQuantity,\n      seller: sellerId,\n    };\n  }\n}\n\nexport default CartService;\n","import fetch from 'unfetch';\nimport { Ensure, Logger } from '../common';\n\n/**\n * HttpClient Abstraction class\n */\nclass HttpClient {\n  /**\n   * HttpClient constructor\n   */\n  constructor() {\n    this._logger = new Logger('httpClient');\n  }\n\n  /**\n   * Get\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  get(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'GET');\n    }\n  }\n\n  /**\n   * Delete\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  delete(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'DELETE');\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  post(endpointUrl, payload = {}) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'POST', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  put(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PUT', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  patch(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PATCH', payload);\n    }\n  }\n\n  /**\n   * @param {String} endpointUrl\n   * @param {String} httpVerb\n   * @param {Object} payload\n   * @return {Promise}\n   */\n  _execute(endpointUrl, httpVerb, payload) {\n    let header = {\n      method: httpVerb,\n      headers: {\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\n        // 'Content-Type': 'application/json',\n        accept: 'application/vnd.vtex.masterdata.v10+json',\n        'content-type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (payload) {\n      header['body'] = JSON.stringify(payload);\n    }\n\n    return fetch(endpointUrl, header)\n      .then(this.validateResponse)\n      .then(this.parseResponseToJson)\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        this._logger.log('Request succeeded with JSON response', error);\n        return error;\n      });\n  }\n\n  /**\n   * Parse response data to json object\n   * @param {*} response - Request response\n   * @return {JSON} json data\n   */\n  async parseResponseToJson(response) {\n    if (!response.ok) {\n      return response;\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Response validation\n   * @param {*} response\n   * @return {Promise} promise result\n   */\n  validateResponse(response) {\n    if (response.ok) {\n      return Promise.resolve(response);\n    } else {\n      return Promise.reject(new Error(response.statusText));\n    }\n  }\n}\n\nexport default HttpClient;\n"],"sourceRoot":""}
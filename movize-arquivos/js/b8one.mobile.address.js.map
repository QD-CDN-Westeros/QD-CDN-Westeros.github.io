{"version":3,"sources":["webpack:///./src/js/general/common/b8one.ensure.js","webpack:///./src/js/store/mobile/address/index.js","webpack:///./src/js/general/common/b8one.helper.js","webpack:///./src/js/general/common/b8one.logger.js","webpack:///./src/js/general/services/b8one.cartService.js","webpack:///./src/js/general/services/b8one.httpClient.js"],"names":["Ensure","value","undefined","input","this","isUndefined","checkValidity","object","props","getMissingProps","length","missingProps","forEach","prop","push","Address","setHandledButtonSave","setHandledFormsChange","cartService","CartService","isToAddressUnknown","slider","sliderAddressFooter","init","initSliders","setHandledWindowResize","setHandledButtonNext","setHandledButtonsBack","eventHandlerBinds","setHandledButtonUnknownAddressClick","getAddressData","tns","container","items","slideBy","autoplay","controls","center","nav","loop","touch","autoWidth","window","addEventListener","event","refresh","buttonNext","document","querySelector","fromAddressForm","e","validateForm","goTo","buttonsSave","querySelectorAll","buttonSave","dispatchEvent","initSaveCustomDataEvent","saveData","endSaveCustomDataEvent","classList","add","validateForms","remove","location","assign","fieldsWithDefaultData","to_address_name","to_address_number","to_address_county","forms","filter","form","contains","reduce","obj1","addressFields","elements","type","id","obj2","checked","hasOwnProperty","key","orderInfoAddressFields","to_address","to_city","to_state","to_address_complement","to_address_zipcode","Object","keys","obj","addressKEY","addressValue","addressType","getAddressFieldsForOrderInfo","address","getAddressForOrderForm","needStorageInputs","fromHomeTypeValue","toHomeTypeValue","orderInfoCommonFields","current_step","user_need_storage","home_type","from_home_type","to_home_type","orderInfoFields","orderInfoFieldsArray","entries","arr","includes","orderInfoFieldsForCustomData","Promise","all","updateCheckoutAddress","setMultipleCustomDataFields","console","log","getCurrent","customData","storeItemsChangeCheckboxs","customApps","customApp","fields","toLowerCase","item","getElementById","target","handledFormChange","required","map","noValidate","buttonUnknownAddress","toggle","addressStreetNameElement","addressZipcodeElement","addressCountyElement","addressNumberElement","parentElement","element","toggleAttribute","Helper","_logger","Logger","language","navigator","userLanguage","currency","currencyLocale","minimumFractionDigits","elem","selector","Element","prototype","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","i","parents","parentNode","serialized","field","name","disabled","n","options","selected","encodeURIComponent","join","data","Math","random","toString","substr","cname","cvalue","exdays","date","Date","setTime","getTime","expires","toUTCString","cookie","decodeURIComponent","split","heightViewport","innerHeight","documentElement","clientHeight","widthViewport","innerWidth","clientWidth","getBoundingClientRect","top","right","bottom","left","str","pattern","mapAccents","a","o","u","c","replace","RegExp","toFixed","max","Intl","NumberFormat","style","format","logName","message","errorObj","error","info","warn","_VTEX_API_ENDPOINT","_httpClient","HttpClient","get","skuId","productQuantity","sellerId","current","indexFound","findIndex","x","parseInt","quantity","endpointUrl","orderFormId","payload","orderItems","seller","patch","skus","vtexjs","checkout","getOrderForm","skusCustomProducts","getCustomProducts","sku","isCustom","skuToIgnore","indexToRemove","indexList","index","removeMoreProducts","response","productsToAdd","productId","productsToUpdate","sameSku","diffQuantity","productsToReplaceSKU","itemsList","oldSKU","newSKU","productsToRemove","updateItems","replaceSKU","removeItems","addToCart","customProducts","customProductItem","currentCustomProduct","customProductQuantity","newQuantity","values","itemIndex","expectedOrderFormSections","noSplitItem","itemsIndex","updateProducts","postalCode","country","calculateShipping","orderForm","simulateShipping","orderFormSimulated","logisticsInfo","shippingData","sendAttachment","availableAddresses","selectedAddresses","appName","endpoint","put","appFieldName","appFieldValue","delete","_execute","httpVerb","header","method","headers","accept","JSON","stringify","fetch","then","validateResponse","parseResponseToJson","catch","ok","json","resolve","reject","Error","statusText"],"mappings":"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","file":"js/b8one.mobile.address.js","sourcesContent":["/**\n * Ensure Abstraction class\n */\nclass Ensure {\n  /**\n   * Ensure value is Undefined\n   * @param {*} value Value to be validated\n   * @return {boolean}\n   */\n  static isUndefined(value = undefined) {\n    return typeof value === 'undefined' ||\n      value === null ||\n      value === '' ||\n      value === {} ||\n      value === [];\n    // || JSON.stringify(value) === JSON.stringify({});\n  }\n\n  /**\n   * Ensure Input validity\n   * @param {*} input to validate\n   * @return {boolean} true if is valid\n   */\n  static isInputValid(input) {\n    return !this.isUndefined(input) && input.checkValidity();\n  }\n\n  /**\n   * Verify if object has properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Boolean} True if object has all properties\n   */\n  static hasProps(object, props) {\n    const missingPropsResult = this.getMissingProps(object, props);\n    return missingPropsResult.length <= 0;\n  }\n\n  /**\n   * Get Object missing properties\n   * @param {Object} object - Object to be verified\n   * @param {Array} props - properties to search on object\n   * @return {Array} missing properties\n   */\n  static getMissingProps(object, props) {\n    let missingProps = [];\n    [...props].forEach((prop) => {\n      const result = prop in object;\n      if (!result) {\n        missingProps.push(prop);\n      }\n    });\n\n    return missingProps;\n  }\n}\n\nexport default Ensure;\n","// Dependencies\nimport { tns } from 'tiny-slider/src/tiny-slider';\n\n// Services\nimport CartService from 'Services/b8one.cartService.js';\n\nclass Address {\n  constructor() {\n    this.cartService = new CartService();\n    this.isToAddressUnknown = false;\n\n    this.slider = null;\n    this.sliderAddressFooter = null;\n\n    this.init();\n  }\n\n  async init() {\n    this.initSliders();\n    this.setHandledWindowResize();\n    this.setHandledButtonNext();\n    this.setHandledButtonsBack();\n    this.eventHandlerBinds();\n    this.setHandledButtonUnknownAddressClick();\n\n    await this.getAddressData();\n  }\n\n  eventHandlerBinds = () => {\n    this.setHandledButtonSave();\n    this.setHandledFormsChange();\n  };\n\n  initSliders() {\n    this.slider = tns({\n      container: '.address__wrapper',\n      items: 1,\n      slideBy: 'page',\n      autoplay: false,\n      controls: false,\n      center: true,\n      nav: false,\n      loop: false,\n      touch: false,\n      autoWidth: true,\n    });\n\n    this.sliderAddressFooter = tns({\n      container: '.address__footer',\n      items: 1,\n      slideBy: 'page',\n      autoplay: false,\n      controls: false,\n      center: false,\n      nav: false,\n      loop: false,\n      touch: false,\n      autoWidth: true,\n    });\n  }\n\n  setHandledWindowResize() {\n    window.addEventListener('resize', event => {\n      this.slider.refresh();\n    });\n  }\n\n  setHandledButtonNext() {\n    const buttonNext = document.querySelector('.js-button-next');\n    const fromAddressForm = document.querySelector('.js-address-from');\n\n    buttonNext.addEventListener('click', e => {\n      if (this.validateForm(fromAddressForm)) {\n        this.slider.goTo('next');\n        this.sliderAddressFooter.goTo('next');\n      }\n    });\n  }\n\n  setHandledButtonSave() {\n    const buttonsSave = [...document.querySelectorAll('.fa-save')];\n    const buttonNext = document.querySelector('.js-button-submit');\n\n    buttonsSave.forEach(buttonSave => {\n      buttonSave.addEventListener('click', async e => {\n        document.dispatchEvent(window.initSaveCustomDataEvent);\n\n        await this.saveData();\n\n        document.dispatchEvent(window.endSaveCustomDataEvent);\n      });\n    });\n\n    buttonNext.addEventListener('click', async e => {\n      buttonNext.classList.add('js-loading');\n\n      await this.saveData();\n\n      if (this.validateForms()) {\n        buttonNext.classList.remove('js-loading');\n        window.location.assign('/seguro-info');\n      }\n\n      buttonNext.classList.remove('js-loading');\n    });\n  }\n\n  setHandledButtonsBack() {\n    const [firstBackButton, lastBackButton] = document.querySelectorAll(\n      '.actions__back-button'\n    );\n\n    lastBackButton.addEventListener('click', e => {\n      this.slider.goTo('prev');\n      this.sliderAddressFooter.goTo('prev');\n    });\n  }\n\n  getAddressFieldsForOrderInfo() {\n    const fieldsWithDefaultData = {\n      to_address_name: 'Sem Endereço',\n      to_address_number: 'Sem Numero',\n      to_address_county: 'Sem Bairro',\n    };\n\n    const orderInfoAddressFields = [...document.forms]\n      .filter(form => form.classList.contains('address__form'))\n      .reduce((obj1, form) => {\n        const addressFields = [...form.elements]\n          .filter(({ type, classList, value, id }) => {\n            if (classList.contains('js-address-complement-to') && value === '')\n              return false;\n\n            if (!id) return false;\n\n            return (\n              type !== 'button' && !classList.contains('js-store-items-change')\n            );\n          })\n          .reduce((obj2, { id, value, checked }) => {\n            if (\n              this.isToAddressUnknown &&\n              fieldsWithDefaultData.hasOwnProperty(id)\n            ) {\n              value = fieldsWithDefaultData[id];\n            }\n\n            return {\n              ...obj2,\n              [id]: checked ? checked : value,\n            };\n          }, {});\n\n        const key = form.classList.contains('js-address-from')\n          ? 'from_address'\n          : 'to_address';\n\n        return {\n          ...obj1,\n          [key]: addressFields,\n        };\n      }, {});\n\n    return orderInfoAddressFields;\n  }\n\n  getAddressForOrderForm(orderInfoAddressFields) {\n    const { to_address } = orderInfoAddressFields;\n\n    const addressFields = {\n      to_city: 'city',\n      to_state: 'state',\n      to_address_name: 'street',\n      to_address_complement: 'complement',\n      to_address_county: 'neighborhood',\n      to_address_number: 'number',\n      to_address_zipcode: 'postalCode',\n    };\n\n    const address = Object.keys(to_address)\n      .filter(key => addressFields.hasOwnProperty(key))\n      .reduce(\n        (obj, key) => {\n          const addressKEY = addressFields[key];\n          const addressValue = to_address[key];\n\n          return { ...obj, [addressKEY]: addressValue };\n        },\n        {\n          addressType: 'residential',\n        }\n      );\n\n    return address;\n  }\n\n  async saveData() {\n    try {\n      const orderInfoAddressFields = this.getAddressFieldsForOrderInfo();\n      const address = this.getAddressForOrderForm(orderInfoAddressFields);\n\n      const needStorageInputs = [\n        ...document.querySelectorAll('.js-store-items-change'),\n      ];\n\n      const fromHomeTypeValue = document.querySelector(\n        '.js-address-from-home-type'\n      );\n      const toHomeTypeValue = document.querySelector(\n        '.js-address-to-home-type'\n      );\n\n      const orderInfoCommonFields = {\n        current_step: 'address',\n        user_need_storage: needStorageInputs[0].checked,\n        home_type: fromHomeTypeValue.value,\n        from_home_type: fromHomeTypeValue.value,\n        to_home_type: toHomeTypeValue.value,\n      };\n\n      const orderInfoFields = {\n        ...orderInfoCommonFields,\n        ...orderInfoAddressFields,\n      };\n\n      const orderInfoFieldsArray = Object.entries(orderInfoFields)\n        .reduce((arr, [key, value]) => {\n          if (['from_address', 'to_address'].includes(key)) {\n            arr = [...arr, ...Object.entries(value)];\n          } else {\n            arr = [...arr, [key, value]];\n          }\n\n          return arr;\n        }, [])\n        .filter(([key, value]) => value !== '');\n\n      const orderInfoFieldsForCustomData = orderInfoFieldsArray.reduce(\n        (obj, [key, value]) => ({ ...obj, [key]: value }),\n        {}\n      );\n\n      await Promise.all([\n        this.cartService.updateCheckoutAddress(address),\n        this.cartService.setMultipleCustomDataFields(\n          'orderinfo',\n          orderInfoFieldsForCustomData\n        ),\n      ]);\n    } catch (err) {\n      console.log(err);\n      return;\n    }\n  }\n\n  async getAddressData() {\n    const { customData } = await this.cartService.getCurrent();\n\n    if (!customData) return;\n\n    const storeItemsChangeCheckboxs = [\n      ...document.querySelectorAll('.js-store-items-change'),\n    ];\n\n    customData.customApps\n      .filter(customApp => customApp.id === 'orderinfo')\n      .forEach(customApp => {\n        Object.entries(customApp.fields).forEach(([id, value]) => {\n          if (id === 'user_need_storage') {\n            if (value.toLowerCase() == 'true') {\n              storeItemsChangeCheckboxs.forEach(item => (item.checked = value));\n            }\n          } else if (id.includes('from_') || id.includes('to_')) {\n            const inputElement = document.getElementById(id);\n\n            inputElement.value = value;\n          }\n        });\n      });\n  }\n\n  handledFormChange(form) {\n    form.addEventListener('change', ({ target }) => {\n      target.classList.remove('address__input--invalid');\n    });\n  }\n\n  setHandledFormsChange() {\n    [...document.forms].forEach(form => this.handledFormChange(form));\n  }\n\n  validateForm(form) {\n    const inputs = [...form.elements]\n      .filter(input => input.value === '' && input.required)\n      .map(input => {\n        input.classList.add('address__input--invalid');\n\n        form.noValidate = true;\n\n        return input;\n      });\n\n    if (inputs.length === 0) {\n      form.noValidate = false;\n    }\n\n    const validity = form.checkValidity() && !form.noValidate;\n\n    return validity;\n  }\n\n  validateForms() {\n    const validity = ![...document.forms]\n      .map(form => {\n        return this.validateForm(form);\n      })\n      .includes(false);\n\n    return validity;\n  }\n\n  setHandledButtonUnknownAddressClick() {\n    const buttonUnknownAddress = document.querySelector(\n      '.js-address-to .address__button'\n    );\n\n    buttonUnknownAddress.addEventListener('click', e => {\n      buttonUnknownAddress.classList.toggle('address__button--mini-active');\n\n      this.isToAddressUnknown = !this.isToAddressUnknown;\n\n      const addressStreetNameElement = document.getElementById(\n        'to_address_name'\n      );\n      const addressZipcodeElement = document.getElementById(\n        'to_address_zipcode'\n      );\n      const addressCountyElement = document.getElementById('to_address_county');\n      const addressNumberElement = document.getElementById('to_address_number');\n\n      [\n        addressStreetNameElement,\n        addressCountyElement,\n        addressNumberElement,\n        addressZipcodeElement,\n      ].forEach(({ parentElement }) => {\n        parentElement.classList.toggle('address__field--required');\n      });\n\n      [\n        addressStreetNameElement,\n        addressCountyElement,\n        addressNumberElement,\n        addressZipcodeElement,\n      ].forEach(element => {\n        element.toggleAttribute('required');\n        element.toggleAttribute('disabled');\n      });\n    });\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', e => {\n  new Address();\n});\n","/* eslint-disable max-len */\nimport { Logger } from './';\n\n/**\n * Helper Abstraction class\n */\nclass Helper {\n  /**\n   * Helper constructor\n   * @param {*} props\n   */\n  constructor(props) {\n    this._logger = new Logger('Ensure');\n    this.props = props || {\n      language: navigator.language || navigator.userLanguage,\n      currency: 'BRL',\n      currencyLocale: 'pt-br',\n      minimumFractionDigits: 2,\n    };\n  }\n\n  /**\n   * format currency\n   * @param {*} value\n   * @param {*} minimumFractionDigits\n   * @return {*}\n   */\n  formatPrice(value) {\n    value = value / 100;\n    value = (value * 1).toFixed(\n      Math.max(0, ~~this.props.minimumFractionDigits)\n    );\n\n    return new Intl.NumberFormat(this.props.currencyLocale, {\n      style: 'currency',\n      currency: this.props.currency,\n      minimumFractionDigits: this.props.minimumFractionDigits,\n    }).format(value);\n  }\n\n  static getParents(elem, selector) {\n    // Element.matches() polyfill\n    if (!Element.prototype.matches) {\n      Element.prototype.matches =\n        Element.prototype.matchesSelector ||\n        Element.prototype.mozMatchesSelector ||\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.oMatchesSelector ||\n        Element.prototype.webkitMatchesSelector ||\n        function(s) {\n          let matches = (this.document || this.ownerDocument).querySelectorAll(\n              s\n            ),\n            i = matches.length;\n\n          while (--i >= 0 && matches.item(i) !== this) {}\n\n          return i > -1;\n        };\n    }\n\n    // Set up a parent array\n    let parents = [];\n\n    // Push each parent element to the array\n    for (; elem && elem !== document; elem = elem.parentNode) {\n      if (selector) {\n        if (elem.matches(selector)) {\n          parents.push(elem);\n        }\n\n        continue;\n      }\n\n      parents.push(elem);\n    }\n\n    // Return our parent array\n    return parents;\n  }\n\n  static serializeForm(form) {\n    // Setup our serialized data\n    let serialized = [];\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          serialized.push(\n            encodeURIComponent(field.name) +\n              '=' +\n              encodeURIComponent(field.options[n].value)\n          );\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        serialized.push(\n          encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value)\n        );\n      }\n    }\n\n    return serialized.join('&');\n  }\n\n  static getFormData(form) {\n    // Setup our serialized data\n    let data = {};\n\n    // Loop through each field in the form\n    for (let i = 0; i < form.elements.length; i++) {\n      let field = form.elements[i];\n\n      // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n      if (\n        !field.name ||\n        field.disabled ||\n        field.type === 'file' ||\n        field.type === 'reset' ||\n        field.type === 'submit' ||\n        field.type === 'button'\n      )\n        continue;\n\n      // If a multi-select, get all selections\n      if (field.type === 'select-multiple') {\n        for (let n = 0; n < field.options.length; n++) {\n          if (!field.options[n].selected) continue;\n\n          data[field.name] = field.options[n].value;\n        }\n      }\n\n      // Convert field data to a query string\n      else if (\n        (field.type !== 'checkbox' && field.type !== 'radio') ||\n        field.checked\n      ) {\n        data[field.name] = field.value;\n      }\n    }\n\n    return data;\n  }\n\n  static getRandomID() {\n    // Generate unique IDs for use as pseudo-private/protected names.\n    // Similar in concept to\n    // <http://wiki.ecmascript.org/doku.php?id=strawman:names>.\n    //\n    // The goals of this function are twofold:\n    //\n    // * Provide a way to generate a string guaranteed to be unique when compared\n    //   to other strings generated by this function.\n    // * Make the string complex enough that it is highly unlikely to be\n    //   accidentally duplicated by hand (this is key if you're using `ID`\n    //   as a private/protected name on an object).\n    //\n    // Use:\n    //\n    //     var privateName = ID();\n    //     var o = { 'public': 'foo' };\n    //     o[privateName] = 'bar';\n\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n\n    return (\n      '_' +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  static setCookie(cname, cvalue, exdays) {\n    const date = new Date();\n\n    date.setTime(date.getTime() + exdays * 24 * 60 * 60 * 1000);\n\n    const expires = 'expires=' + date.toUTCString();\n\n    document.cookie = `${cname}=${cvalue};${expires};path=/`;\n  }\n\n  static getCookie(cname) {\n    const decodedCookie = decodeURIComponent(document.cookie);\n\n    const cookie = decodedCookie\n      .split(';')\n      .filter(cookie => cookie.includes(cname))[0];\n\n    return cookie || '';\n  }\n\n  static isInViewport(element) {\n    const heightViewport =\n      window.innerHeight || document.documentElement.clientHeight;\n\n    const widthViewport =\n      window.innerWidth || document.documentElement.clientWidth;\n\n    const { top, right, bottom, left } = element.getBoundingClientRect();\n\n    return (\n      top >= 0 &&\n      left >= 0 &&\n      bottom <= heightViewport &&\n      right <= widthViewport\n    );\n  }\n\n  static removeAccents(str) {\n    const mapAccents = {\n      a: 'á|à|ã|â|À|Á|Ã|Â',\n      e: 'é|è|ê|É|È|Ê',\n      i: 'í|ì|î|Í|Ì|Î',\n      o: 'ó|ò|ô|õ|Ó|Ò|Ô|Õ',\n      u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n      c: 'ç|Ç',\n      n: 'ñ|Ñ',\n    };\n\n    for (let pattern in mapAccents) {\n      str = str.replace(new RegExp(mapAccents[pattern], 'g'), pattern);\n    }\n\n    return str;\n  }\n}\n\nexport default Helper;\n","/* eslint no-console: 0 */\n\n/**\n * Logger Abstraction class\n */\nclass Logger {\n  /**\n   * Logger constructor\n   * @param {string} logName Application name to log\n   */\n  constructor(logName = 'B8ONE Logger Component') {\n    this.logName = logName;\n  }\n\n  /**\n   * Log error message\n   * @param {*} message - Message text\n   * @param {*} errorObj - Message object\n   */\n  error(message = '', errorObj = {}) {\n    console.error(message, errorObj);\n  }\n\n  /**\n   * Log information message\n   * @param {*} message - Message text\n   */\n  info(message = '') {\n    console.info(message);\n  }\n\n  /**\n   * Log warning message\n   * @param {*} message - Message text\n   */\n  warning(message = '') {\n    console.warn(this.logName, message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   */\n  log(message = '') {\n    console.log(message);\n  }\n\n  /**\n   * Generic log\n   * @param {String} message - log's message\n   * @param {*} object - object to be logged\n   */\n  log(message = '', object = {}) {\n    console.log(message, object);\n  }\n}\n\nexport default Logger;\n","/* eslint-disable max-len */\n\nimport { Ensure, Logger } from '../common';\nimport HttpClient from './b8one.httpClient';\n\n/**\n * Cart Abstraction class\n */\nclass CartService {\n  /**\n   * Cart constructor\n   */\n  constructor() {\n    this._VTEX_API_ENDPOINT = '/api/checkout/pub/orderForm';\n\n    this._logger = new Logger('Cart service');\n    this._httpClient = new HttpClient();\n  }\n\n  /**\n   * Get current cart\n   * @return {*} Cart object\n   */\n  async getCurrent() {\n    return await this._httpClient.get(this._VTEX_API_ENDPOINT);\n  }\n\n  /**\n   * Add item to cart\n   * @param {*} skuId - Product sku Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   */\n  async add(skuId, productQuantity, sellerId = 1) {\n    // const payload = this._payloadFactory(skuId, productQuantity, sellerId);\n\n    if (!Ensure.isUndefined(skuId)) {\n      const current = await this.getCurrent();\n      const indexFound = current.items.findIndex(x => x.id === skuId);\n\n      if (indexFound > -1) {\n        productQuantity =\n          parseInt(productQuantity) +\n          parseInt(current.items[indexFound].quantity);\n      }\n\n      const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n\n      const payload = {\n        orderItems: [\n          {\n            seller: sellerId.toString(),\n            quantity: parseInt(productQuantity),\n            id: skuId.toString(),\n          },\n        ],\n      };\n\n      return this._httpClient.patch(endpointUrl, payload);\n    }\n  }\n\n  async checkoutCRUD(skus) {\n    let { items } = await window.vtexjs.checkout.getOrderForm();\n\n    const skusCustomProducts = this.getCustomProducts(skus);\n\n    skus = skus.filter(sku => !sku.isCustom);\n    skus = [...skus, ...skusCustomProducts];\n\n    const skuToIgnore = [19, 698, 25, 26];\n\n    const indexToRemove = items.reduce((indexList, item, index) => {\n      const customProductSKUs = [25, 26];\n\n      if (customProductSKUs.includes(parseInt(item.id))) {\n        return [...indexList, index];\n      }\n\n      return indexList;\n    }, []);\n\n    if (indexToRemove.length > 0) {\n      const response = await this.removeMoreProducts(indexToRemove);\n\n      response && (items = response.items);\n    }\n\n    const productsToAdd = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        let index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        return index === -1 && sku.quantity > 0;\n      })\n      .map(sku => ({\n        quantity: sku.quantity,\n        seller: 1,\n        id: sku.skuId || sku.id,\n      }));\n\n    console.log('productsToAdd', productsToAdd);\n\n    const productsToUpdate = skus\n      .filter(sku => sku.quantity > 0)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          const sameSku = parseInt(items[index].id) === parseInt(sku.id);\n          const diffQuantity =\n            parseInt(items[index].quantity) !== parseInt(sku.quantity);\n\n          return sameSku && diffQuantity && sku.quantity > 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: sku.quantity,\n        };\n      });\n\n    console.log('productsToUpdate', productsToUpdate);\n\n    const productsToReplaceSKU = skus\n      .filter(\n        sku =>\n          sku.quantity > 0 &&\n          !skuToIgnore.includes(parseInt(sku.skuId || sku.id))\n      )\n      .filter(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        if (index !== -1) {\n          const diffSku = parseInt(items[index].id) !== parseInt(sku.skuId);\n\n          return diffSku;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const index = items.findIndex(\n          item => parseInt(item.productId) === parseInt(sku.productId)\n        );\n\n        const oldSKU = {\n          index,\n          seller: 1,\n          quantity: 0,\n        };\n\n        const newSKU = {\n          seller: 1,\n          id: sku.skuId,\n          quantity: sku.quantity,\n        };\n\n        return [oldSKU, newSKU];\n      })\n      .reduce((itemsList, current) => {\n        const [oldSKU, newSKU] = current;\n\n        return [...itemsList, oldSKU, newSKU];\n      }, []);\n\n    console.log('productsToReplaceSKU', productsToReplaceSKU);\n\n    const productsToRemove = skus\n      .filter(sku => sku.quantity < 1)\n      .filter(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        if (index !== -1) {\n          return sku.quantity == 0;\n        }\n\n        return false;\n      })\n      .map(sku => {\n        const id = sku.skuId || sku.id;\n\n        let index = items.findIndex(item => parseInt(item.id) === parseInt(id));\n\n        return {\n          index,\n          quantity: 0,\n        };\n      });\n\n    console.log('productsToRemove', productsToRemove);\n\n    if (productsToUpdate[0]) {\n      await window.vtexjs.checkout.updateItems(productsToUpdate, null, false);\n    }\n\n    if (productsToReplaceSKU[0]) {\n      await window.vtexjs.checkout.replaceSKU(productsToReplaceSKU);\n    }\n\n    if (productsToRemove[0]) {\n      await window.vtexjs.checkout.removeItems(productsToRemove);\n    }\n\n    if (productsToAdd[0]) {\n      await window.vtexjs.checkout.addToCart(productsToAdd, null);\n    }\n  }\n\n  getCustomProducts(skus) {\n    const customProducts = {};\n\n    skus\n      .filter(({ isCustom }) => isCustom === true)\n      .forEach(({ skuId, quantity, customProductItem }) => {\n        let currentCustomProduct = customProducts[skuId];\n\n        const customProductQuantity =\n          parseInt(customProductItem.quantity) * parseInt(quantity);\n\n        if (currentCustomProduct) {\n          const newQuantity =\n            parseInt(currentCustomProduct.quantity) + customProductQuantity;\n\n          currentCustomProduct = {\n            ...currentCustomProduct,\n            quantity: newQuantity,\n          };\n        } else {\n          currentCustomProduct = {\n            ...customProductItem,\n            quantity: customProductQuantity,\n            isCustom: true,\n          };\n        }\n\n        customProducts[skuId] = currentCustomProduct;\n      });\n\n    return Object.values(customProducts);\n  }\n\n  async getProductIndexInOrderForm(productId) {\n    const { items } = await this.getCurrent();\n\n    const index = items.findIndex(item => item.productId == productId);\n\n    if (index !== -1) return index;\n\n    return;\n  }\n\n  /**\n   * Remove item to cart\n   * @param {JSON} itemIndex - Product item index to be removed\n   */\n  async remove(itemIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: [\n        {\n          index: itemIndex,\n          quantity: 0,\n        },\n      ],\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  /**\n   * Remove items of cart\n   * @param {Array} itemsIndex - Products items index to be removed\n   */\n  async removeMoreProducts(itemsIndex) {\n    const current = await this.getCurrent();\n    const endpointUrl = `${this._VTEX_API_ENDPOINT}/${current.orderFormId}/items`;\n    const payload = {\n      orderItems: itemsIndex.map(index => ({\n        index,\n        quantity: 0,\n      })),\n      expectedOrderFormSections: ['items'],\n      noSplitItem: true,\n    };\n\n    return await this._httpClient.patch(endpointUrl, payload);\n  }\n\n  async updateProduct(skuId, quantity, seller = 1) {\n    const newSKU = {\n      seller,\n      quantity,\n      id: skuId,\n    };\n\n    return await this.updateProducts([newSKU]);\n  }\n\n  async updateProducts(skus) {\n    const { items, orderFormId } = await this.getCurrent();\n\n    skus = skus\n      .map(({ id, quantity, seller }) => {\n        const index = items.findIndex(\n          item => parseInt(item.id) === parseInt(id)\n        );\n\n        return {\n          id,\n          index,\n          quantity,\n          seller: seller || 1,\n        };\n      })\n      .filter(sku => sku.index !== -1);\n\n    if (skus.length > 0) {\n      const payload = {\n        orderItems: skus,\n      };\n\n      return await this._httpClient.patch(\n        `/api/checkout/pub/orderForm/${orderFormId}/items`,\n        payload\n      );\n    }\n  }\n\n  async simulateOrderForm(postalCode, country = 'BRA') {\n    try {\n      await vtexjs.checkout.getOrderForm();\n\n      const orderForm = await vtexjs.checkout.calculateShipping({\n        postalCode,\n        country,\n      });\n\n      return orderForm;\n    } catch (error) {\n      console.error('Error in simulateOrderForm', error);\n    }\n  }\n\n  async simulateShipping(items, postalCode, country = 'BRA') {\n    const orderFormSimulated = await vtexjs.checkout.simulateShipping(\n      items,\n      postalCode,\n      country\n    );\n\n    return orderFormSimulated;\n  }\n\n  async updateCheckoutTransporterSLA(logisticsInfo) {\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.logisticsInfo = logisticsInfo;\n\n    await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async updateCheckoutAddress(address) {\n    console.log(address);\n    await vtexjs.checkout.getOrderForm();\n\n    const { shippingData } = vtexjs.checkout.orderForm;\n\n    shippingData.availableAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.selectedAddresses = [\n      {\n        ...shippingData.address,\n        ...address,\n      },\n    ];\n\n    shippingData.address = {\n      ...shippingData.address,\n      ...address,\n    };\n\n    return await vtexjs.checkout.sendAttachment('shippingData', shippingData);\n  }\n\n  async setMultipleCustomDataFields(appName, fields) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}`;\n\n    try {\n      return await this._httpClient.put(endpoint, fields);\n    } catch (error) {\n      console.error('setMultipleCustomDataFields', error);\n    }\n\n    return;\n  }\n\n  async setSingleCustomDataField(appName, appFieldName, appFieldValue) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: appFieldValue };\n\n    try {\n      return await this._httpClient.put(endpoint, payload);\n    } catch (error) {\n      console.error('setSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  async removeSingleCustomDataField(appName, appFieldName) {\n    const { orderFormId } = await this.getCurrent();\n\n    const endpoint = `/api/checkout/pub/orderForm/${orderFormId}/customData/${appName}/${appFieldName}`;\n\n    const payload = { value: null };\n\n    try {\n      return await this._httpClient.delete(endpoint, payload);\n    } catch (error) {\n      console.error('removeSingleCustomDataField', error);\n    }\n\n    return;\n  }\n\n  /**\n   * Cart's payload method factory\n   * @param {*} skuId - Product Id (SKU)\n   * @param {*} productQuantity - Product Quantity\n   * @param {*} sellerId - Seller id\n   * @return {JSON} cart paylod\n   */\n  _payloadFactory(skuId, productQuantity, sellerId = 1) {\n    return {\n      id: skuId,\n      quantity: productQuantity,\n      seller: sellerId,\n    };\n  }\n}\n\nexport default CartService;\n","import fetch from 'unfetch';\nimport { Ensure, Logger } from '../common';\n\n/**\n * HttpClient Abstraction class\n */\nclass HttpClient {\n  /**\n   * HttpClient constructor\n   */\n  constructor() {\n    this._logger = new Logger('httpClient');\n  }\n\n  /**\n   * Get\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  get(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'GET');\n    }\n  }\n\n  /**\n   * Delete\n   * @param {String} endpointUrl\n   * @return {Promise}\n   */\n  delete(endpointUrl) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'DELETE');\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  post(endpointUrl, payload = {}) {\n    if (!Ensure.isUndefined(endpointUrl)) {\n      return this._execute(endpointUrl, 'POST', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  put(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PUT', payload);\n    }\n  }\n\n  /**\n   *\n   * @param {String} endpointUrl\n   * @param {JSON} payload\n   * @return {Promise}\n   */\n  patch(endpointUrl, payload) {\n    if (!Ensure.isUndefined(endpointUrl) && !Ensure.isUndefined(payload)) {\n      return this._execute(endpointUrl, 'PATCH', payload);\n    }\n  }\n\n  /**\n   * @param {String} endpointUrl\n   * @param {String} httpVerb\n   * @param {Object} payload\n   * @return {Promise}\n   */\n  _execute(endpointUrl, httpVerb, payload) {\n    let header = {\n      method: httpVerb,\n      headers: {\n        // 'Accept': 'application/vnd.vtex.ds.v10+json',\n        // 'Content-Type': 'application/json',\n        accept: 'application/vnd.vtex.masterdata.v10+json',\n        'content-type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (payload) {\n      header['body'] = JSON.stringify(payload);\n    }\n\n    return fetch(endpointUrl, header)\n      .then(this.validateResponse)\n      .then(this.parseResponseToJson)\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        this._logger.log('Request succeeded with JSON response', error);\n        return error;\n      });\n  }\n\n  /**\n   * Parse response data to json object\n   * @param {*} response - Request response\n   * @return {JSON} json data\n   */\n  async parseResponseToJson(response) {\n    if (!response.ok) {\n      return response;\n    }\n\n    return await response.json();\n  }\n\n  /**\n   * Response validation\n   * @param {*} response\n   * @return {Promise} promise result\n   */\n  validateResponse(response) {\n    if (response.ok) {\n      return Promise.resolve(response);\n    } else {\n      return Promise.reject(new Error(response.statusText));\n    }\n  }\n}\n\nexport default HttpClient;\n"],"sourceRoot":""}